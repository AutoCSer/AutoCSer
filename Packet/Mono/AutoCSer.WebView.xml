<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.WebView</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.IO.CreateFlieTimeoutCounter">
            <summary>
            新建文件监视计数
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutCounter.Watcher">
            <summary>
            文件监视器
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutCounter.Count">
            <summary>
            监视计数
            </summary>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutCounter.Create(System.String,System.IO.FileSystemEventHandler)">
            <summary>
            文件监视器初始化
            </summary>
            <param name="path">监视路径</param>
            <param name="onCreated">新建文件处理</param>
        </member>
        <member name="T:AutoCSer.IO.CreateFlieTimeoutType">
            <summary>
            超时处理类型
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutType.HttpServerRegister">
            <summary>
            HTTP 服务器
            </summary>
        </member>
        <member name="T:AutoCSer.IO.CreateFlieTimeoutWatcher">
            <summary>
            新建文件监视
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.currentSeconds">
            <summary>
            当前秒计数
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.onTimeSeconds">
            <summary>
            超时检测计数
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.timeoutSeconds">
            <summary>
            超时检测秒数
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.onTimeout">
            <summary>
            超时处理
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.log">
            <summary>
            日志处理
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.onCreatedHandle">
            <summary>
            新建文件处理
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.watchers">
            <summary>
            文件监视器集合
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.watcherLock">
            <summary>
            文件监视器集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.fileLock">
            <summary>
            超时检测文件集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.files">
            <summary>
            超时检测文件集合
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.isTimer">
            <summary>
            是否已经触发定时任务
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.isDisposed">
            <summary>
            是否释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.onTimeoutType">
            <summary>
            超时处理类型
            </summary>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.#ctor(System.Int32,System.Object,AutoCSer.IO.CreateFlieTimeoutType,AutoCSer.Log.ILog)">
            <summary>
            新建文件监视
            </summary>
            <param name="seconds">超时检测秒数</param>
            <param name="onTimeout">超时处理</param>
            <param name="onTimeoutType">超时处理类型</param>
            <param name="log">日志处理</param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.dispose(System.IO.FileSystemWatcher)">
            <summary>
            关闭文件监视器
            </summary>
            <param name="watcher">文件监视器</param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.Add(System.String)">
            <summary>
            添加监视路径
            </summary>
            <param name="path">监视路径</param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.Remove(System.String)">
            <summary>
            删除监视路径
            </summary>
            <param name="path">监视路径</param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.onCreatedHttpServerRegister(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            新建文件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.onCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            新建文件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.onCreated(System.IO.FileSystemEventArgs)">
            <summary>
            新建文件处理
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.OnTimer">
            <summary>
            定时器触发
            </summary>
        </member>
        <member name="M:AutoCSer.IO.CreateFlieTimeoutWatcher.onTimer">
            <summary>
            定时器触发
            </summary>
        </member>
        <member name="F:AutoCSer.IO.CreateFlieTimeoutWatcher.Watchers">
            <summary>
            新建文件监视链表
            </summary>
        </member>
        <member name="T:AutoCSer.IO.Compression.GzipCompressor">
            <summary>
            gzip 压缩处理
            </summary>
        </member>
        <member name="M:AutoCSer.IO.Compression.GzipCompressor.Get(System.Byte[],System.Int32,System.Int32,AutoCSer.SubBuffer.PoolBufferFull@,AutoCSer.SubArray{System.Byte}@,System.Int32,System.Int32,System.Boolean)">
            <returns>是否压缩成功</returns>
        </member>
        <member name="M:AutoCSer.IO.Compression.GzipCompressor.Get(AutoCSer.SubArray{System.Byte}@,AutoCSer.SubArray{System.Byte}@,System.Int32,System.Int32,System.Boolean)">
            <returns>是否压缩成功</returns>
        </member>
        <member name="T:AutoCSer.Extension.Number_WebView">
            <summary>
            数值相关扩展操作
            </summary>
        </member>
        <member name="M:AutoCSer.Extension.Number_WebView.CheckHex(System.UInt32,System.Char*)">
            <summary>
            数字值转换为十六进制字符串
            </summary>
            <param name="value">数字值</param>
            <param name="hexs">十六进制字符串</param>
            <returns>0表示相等</returns>
        </member>
        <member name="M:AutoCSer.Extension.Number_WebView.CheckHex(System.UInt64,System.Char*)">
            <summary>
            转换16位十六进制字符串
            </summary>
            <param name="value">数字值</param>
            <param name="hexs">16位十六进制字符串</param>
            <returns>0表示相等</returns>
        </member>
        <member name="T:AutoCSer.WebView.Poll.Session">
            <summary>
            会话超时集合
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.Session.sessions">
            <summary>
            长连接轮询验证集合
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.Session.sessionLock">
            <summary>
            长连接轮询验证访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.Session.timeoutTicks">
            <summary>
            超时时钟周期
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Poll.Session.#ctor(System.Int64)">
            <summary>
            会话超时集合
            </summary>
            <param name="timeoutTicks">超时时钟周期</param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.Session.Get(System.Int32,AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            获取用户长连接轮询验证
            </summary>
            <param name="userId">用户标识</param>
            <param name="sessionId">长连接轮询验证,0表示失败</param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.Session.Add(System.Int32)">
            <summary>
            添加用户长连接轮询验证
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.Session.Remove(System.Int32)">
            <summary>
            删除用户长连接轮询验证
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.Session.Verify(AutoCSer.WebView.Poll.VerifyInfo@)">
            <summary>
            轮询验证检测
            </summary>
            <param name="verify">轮询验证输入参数信息</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.WebView.Poll.SessionPool">
            <summary>
            长连接轮询会话超时集合
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.SessionPool.sessions">
            <summary>
            长连接轮询验证集合
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.#ctor(System.Int32)">
            <summary>
            超时秒数
            </summary>
            <param name="timeoutSeconds"></param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.getString(System.Int32)">
            <summary>
            获取用户长连接轮询验证
            </summary>
            <param name="userId">用户标识</param>
            <returns>长连接轮询验证</returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.get(System.Int32,AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            获取用户长连接轮询验证
            </summary>
            <param name="userId">用户标识</param>
            <param name="sessionId">长连接轮询验证,0表示失败</param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.Get(System.Int32)">
            <summary>
            获取用户长连接轮询验证
            </summary>
            <param name="userId">用户标识</param>
            <returns>长连接轮询验证</returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.add(System.Int32)">
            <summary>
            添加用户长连接轮询验证
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.Remove(System.Int32)">
            <summary>
            删除用户长连接轮询验证
            </summary>
            <param name="userId">用户标识</param>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionPool.Verify(AutoCSer.WebView.Poll.VerifyInfo@)">
            <summary>
            轮询验证检测
            </summary>
            <param name="verify">轮询验证输入参数信息</param>
            <returns>是否通过验证</returns>
        </member>
        <member name="T:AutoCSer.WebView.Poll.SessionTimeout">
            <summary>
            会话超时
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.SessionTimeout.Timeout">
            <summary>
            超时
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.SessionTimeout.SessionId">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionTimeout.New(System.Int64)">
            <summary>
            创建会话标识
            </summary>
            <param name="timeoutTicks">超时时钟周期</param>
            <returns>会话标识</returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionTimeout.Get(System.Int64)">
            <summary>
            获取会话标识
            </summary>
            <param name="timeoutTicks">超时时钟周期</param>
            <returns>会话标识</returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionTimeout.Check(System.String)">
            <summary>
            会话标识验证
            </summary>
            <param name="verify"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Poll.SessionTimeout.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Poll.VerifyInfo">
            <summary>
            轮询验证输入参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.VerifyInfo.UserId">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Poll.VerifyInfo.Verify">
            <summary>
            验证信息
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Ajax">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Ajax.DefaultAttribute">
            <summary>
            默认 AJAX 调用配置
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,System.Boolean)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="isAsynchronous">是否异步</param>
        </member>
        <member name="M:AutoCSer.WebView.Ajax.Response``1(``0@)">
            <summary>
            AJAX 响应输出
            </summary>
            <typeparam name="valueType">输出数据类型</typeparam>
            <param name="value">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.Ajax.Response">
            <summary>
            AJAX响应输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax.ServerError500">
            <summary>
            服务器发生不可预期的错误 
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Ajax`1">
            <summary>
            AJAX 调用，支持对象池
            </summary>
            <typeparam name="ajaxType">AJAX 调用类型</typeparam>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,System.Boolean,`0)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="isAsynchronous">是否异步</param>
            <param name="ajax"></param>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.Response``1(``0@)">
            <summary>
            AJAX响应输出
            </summary>
            <typeparam name="valueType">输出数据类型</typeparam>
            <param name="value">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.Response">
            <summary>
            AJAX响应输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.ServerError500">
            <summary>
            服务器发生不可预期的错误 
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.PushPool">
            <summary>
            WEB页面回收
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.Pop">
            <summary>
            弹出节点
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.WebView.Ajax`1.next">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.clear">
            <summary>
            清除页面信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Ajax`1.poolMaxCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Ajax`1.poolHead">
            <summary>
            链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Ajax`1.popLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Ajax`1.poolCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.PushNotNull(`0)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.pushLink(`0,`0,System.Int32)">
            <summary>
            添加链表
            </summary>
            <param name="value">链表头部</param>
            <param name="end">链表尾部</param>
            <param name="count">数据数量</param>
        </member>
        <member name="M:AutoCSer.WebView.Ajax`1.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.AjaxAttribute">
            <summary>
            AJAX 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxAttribute.IsAttribute">
            <summary>
            默认为 false 表示代码生成选择所有函数，否则仅选择申明了 AutoCSer.WebView.AjaxAttribute 的函数，有效域为当前 class。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxAttribute.IsBaseTypeAttribute">
            <summary>
            指定是否搜索该成员的继承链以查找这些特性，参考System.Reflection.MemberInfo.GetCustomAttributes(bool inherit)，有效域为当前 class。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxAttribute.IsExportTypeScript">
            <summary>
            默认为 false 表示不生成 TypeScript 调用代理。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxAttribute.MaxPostDataSize">
            <summary>
            HTTP Body 接收数据的最大字节数，默认为 4MB。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxAttribute.MaxMemoryStreamSize">
            <summary>
            接收 HTTP Body 数据内存缓冲区的最大字节数，默认为 128KB，超出限定则使用文件储存方式。
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.AjaxLoader`1">
            <summary>
            AJAX 调用加载
            </summary>
            <typeparam name="loaderType">AJAX调用加载类型</typeparam>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.load">
            <summary>
            AJAX调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadView(AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载页面视图
            </summary>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadView``1(``0,AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载页面视图
            </summary>
            <param name="view">WEB视图接口</param>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadView(AutoCSer.WebView.View,AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载页面视图
            </summary>
            <param name="view">WEB视图接口</param>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadView(AutoCSer.WebView.View,AutoCSer.WebView.AjaxMethodInfo,System.Boolean,System.Boolean)">
            <summary>
            加载页面视图
            </summary>
            <param name="view">WEB视图接口</param>
            <param name="ajaxInfo"></param>
            <param name="isAsynchronous"></param>
            <param name="isAwaitMethod"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.setPage(AutoCSer.WebView.ViewBase,System.Boolean,System.Boolean)">
            <summary>
            加载页面视图[TRY]
            </summary>
            <param name="view">WEB视图接口</param>
            <param name="isAsynchronous">是否异步</param>
            <param name="isAwaitMethod">是否存在 await 函数</param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadAjax(AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载 AJAX 调用
            </summary>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadAjax``1(``0,AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载 AJAX 调用
            </summary>
            <param name="ajax"></param>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.loadAjax(AutoCSer.WebView.Ajax,AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            加载 AJAX 调用
            </summary>
            <param name="ajax"></param>
            <param name="ajaxInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.responseAjax``2(``0,``1@)">
            <summary>
            AJAX 输出
            </summary>
            <typeparam name="ajaxType"></typeparam>
            <typeparam name="valueType"></typeparam>
            <param name="ajax"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.responseAjax``1(AutoCSer.WebView.Ajax,``0@)">
            <summary>
            AJAX 输出
            </summary>
            <typeparam name="valueType"></typeparam>
            <param name="ajax"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.responseAjax``1(``0)">
            <summary>
            AJAX 输出
            </summary>
            <typeparam name="ajaxType"></typeparam>
            <param name="ajax"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.responseAjax(AutoCSer.WebView.Ajax)">
            <summary>
            AJAX 输出
            </summary>
            <param name="ajax"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.pubError">
            <summary>
            公用错误处理函数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxLoader`1.methods">
            <summary>
            AJAX 函数调用集合
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.AjaxLoader`1.setMethods(System.String[],AutoCSer.WebView.AjaxMethodInfo[])">
            <summary>
            设置 AJAX 函数调用集合
            </summary>
            <param name="names"></param>
            <param name="infos"></param>
        </member>
        <member name="T:AutoCSer.WebView.AjaxMethodAttribute">
            <summary>
            AJAX 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsReferer">
            <summary>
            默认为 true 表示需要验证 Referer 的来源页主域名是否匹配当前主域名，用于防止跨域攻击。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsOnlyPost">
            <summary>
            默认为 true 表示仅支持 POST 请求，否则支持 GET 请求。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsVersion">
            <summary>
            是否相对于网站更新的静态资源，IsOnlyPost 设置为 true 才有效，默认为 false
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsInputSerializeBox">
            <summary>
            输入参数是否添加包装处理申明 AutoCSer.Emit.BoxSerialize，用于只有一个输入参数的类型忽略外壳类型的处理以减少序列化开销，默认为 false。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsOutputSerializeBox">
            <summary>
            输出参数是否添加包装处理申明 AutoCSer.Emit.BoxSerialize，用于只有一个输出参数的类型忽略外壳类型的处理以减少序列化开销，默认为 false。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodAttribute.IsCompileJsonSerialize">
            <summary>
            默认为 true 表示在初始化的时候启动 JSON 序列化预编译任务
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.AjaxMethodInfo">
            <summary>
            AJAX 调用信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.MethodIndex">
            <summary>
            函数编号
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.MaxPostDataSize">
            <summary>
            最大接收数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.MaxMemoryStreamSize">
            <summary>
            内存流最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.IsViewPage">
            <summary>
            是否视图页面
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.IsPost">
            <summary>
            是否只接受POST请求
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.IsReferer">
            <summary>
            是否判断来源页合法
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxMethodInfo.IsAsynchronous">
            <summary>
            是否异步方法
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Call">
            <summary>
            HTTP 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Call.DefaultAttribute">
            <summary>
            默认 WEB 调用配置
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Call.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.WebView.Call.RepsonseEnd(AutoCSer.UnmanagedStream@)">
            <summary>
            结束同步输出
            </summary>
            <param name="responseStream"></param>
        </member>
        <member name="M:AutoCSer.WebView.Call.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Call`1">
            <summary>
            HTTP 调用，支持对象池
            </summary>
            <typeparam name="callType">web调用类型</typeparam>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,`0,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="call"></param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.RepsonseEnd(AutoCSer.UnmanagedStream@)">
            <summary>
            结束同步输出
            </summary>
            <param name="responseStream"></param>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.PushPool">
            <summary>
            WEB页面回收
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.Pop">
            <summary>
            弹出节点
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.WebView.Call`1.next">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.clear">
            <summary>
            清除页面信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Call`1.poolMaxCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Call`1.poolHead">
            <summary>
            链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Call`1.popLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Call`1.poolCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.PushNotNull(`0)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.pushLink(`0,`0,System.Int32)">
            <summary>
            添加链表
            </summary>
            <param name="value">链表头部</param>
            <param name="end">链表尾部</param>
            <param name="count">数据数量</param>
        </member>
        <member name="M:AutoCSer.WebView.Call`1.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.CallAttribute">
            <summary>
            HTTP 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAttribute.IsAttribute">
            <summary>
            默认为 false 表示代码生成选择所有函数，否则仅选择申明了 AutoCSer.WebView.CallAttribute 的函数，有效域为当前 class。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAttribute.IsBaseTypeAttribute">
            <summary>
            指定是否搜索该成员的继承链以查找这些特性，参考System.Reflection.MemberInfo.GetCustomAttributes(bool inherit)，有效域为当前 class。
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CallMethodAttribute">
            <summary>
            WEB 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodAttribute.IsOnlyPost">
            <summary>
            默认为 false 表示支持 GET 请求，否则仅支持 POST 请求。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodAttribute.IsFirstParameter">
            <summary>
            是否仅仅序列化第一个参数，设置为 true 表示忽略生成的包装 struct
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodAttribute.IsCompileQueryParser">
            <summary>
            默认为 true 表示在初始化的时候启动 Query 反序列化预编译任务
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CallMethodInfo">
            <summary>
            HTTP 调用函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodInfo.MethodIndex">
            <summary>
            函数编号
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodInfo.MaxPostDataSize">
            <summary>
            HTTP Body 接收数据的最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodInfo.MaxMemoryStreamSize">
            <summary>
            接收 HTTP Body 数据内存缓冲区的最大字节数，超出限定则使用文件储存方式。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallMethodInfo.IsOnlyPost">
            <summary>
            是否仅支持POST请求
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CallResponse">
            <summary>
            WEB 调用输出
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallResponse.ResponseStream">
            <summary>
            页面输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallResponse.encoding">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Set(AutoCSer.UnmanagedStream,AutoCSer.EncodingCache@)">
            <summary>
            设置同步输出文本
            </summary>
            <param name="responseStream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.String)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(AutoCSer.SubString)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(AutoCSer.SubString@)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.Byte[])">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(AutoCSer.SubArray{System.Byte})">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.Byte)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.SByte)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.UInt16)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.Int16)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.UInt32)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.Int32)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.UInt64)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.CallResponse.Write(System.Int64)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:AutoCSer.WebView.CharsetType">
            <summary>
            字符集类型
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CharsetType.Utf8">
            <summary>
            UTF-8
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CharsetType.Gb2312">
            <summary>
            GB2312
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CharsetTypeAttribute">
            <summary>
            字符集类型属性
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CharsetTypeAttribute.CharsetString">
            <summary>
            字符串表示
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CharsetTypeAttribute.charsetTypes">
            <summary>
            字符集类型名称集合
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CharsetTypeAttribute.GetHtml(AutoCSer.WebView.CharsetType)">
            <summary>
            获取字符集代码
            </summary>
            <returns>字符集代码</returns>
        </member>
        <member name="T:AutoCSer.WebView.ClearMember">
            <summary>
            WEB视图成员清理
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod">
            <summary>
            WEB视图成员清理动态函数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.dynamicMethod">
            <summary>
            动态函数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.generator">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.#ctor(System.Type)">
            <summary>
            动态函数
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.Push(AutoCSer.Metadata.FieldIndex)">
            <summary>
            添加字段
            </summary>
            <param name="field">字段信息</param>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.Base(System.Type)">
            <summary>
            基类调用
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember.ClearMemberDynamicMethod.Create``1">
            <summary>
            创建成员转换委托
            </summary>
            <returns>成员转换委托</returns>
        </member>
        <member name="F:AutoCSer.WebView.ClearMember.clearMethod">
            <summary>
            WEB视图成员清理函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember.clear``1(``0)">
            <summary>
            WEB视图成员清理
            </summary>
            <typeparam name="valueType"></typeparam>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.WebView.ClearMember`1">
            <summary>
            WEB视图成员清理
            </summary>
            <typeparam name="valueType"></typeparam>
        </member>
        <member name="F:AutoCSer.WebView.ClearMember`1.Cleaner">
            <summary>
            成员清理
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ClearMember`1.ignore(`0)">
            <summary>
            忽略成员清理
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.WebView.ClearMemberAttribute">
            <summary>
            WEB视图成员清理配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Config">
            <summary>
            网站生成配置
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.Encoding">
            <summary>
            文件编码
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.SessionType">
            <summary>
            Session类型
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.MainDomain">
            <summary>
            默认主域名
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.MainHostPort">
            <summary>
            TCP 服务主机与端口信息
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.StaticFileDomain">
            <summary>
            静态文件网站域名，用于在浏览器客户端永久性缓存的资源
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.ImageDomain">
            <summary>
            图片文件域名
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.PollDomain">
            <summary>
            轮询网站域名
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.NoViewLocation">
            <summary>
            视图加载失败重定向，默认为 "/"
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsCssStaticFileDomain">
            <summary>
            是否对 css 缺省域名替换为静态文件域名，默认为 true
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsWebView">
            <summary>
            是否进行WebView前期处理，默认为 true（格式化HTML、CSS）
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsCopyScript">
            <summary>
            是否复制 js 脚本文件，默认为 true
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.ExportPathType">
            <summary>
            WEB Path 导出引导类型
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.ViewJsDirectory">
            <summary>
            WEB视图扩展默认目录名称，默认为 viewJs
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IncludeDirectories">
            <summary>
            附加导入 HTML/JS 目录集合
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsExportPathTypeScript">
            <summary>
            默认为 true 表示导出 TypeScript，否则导出 JavaScript
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsHtmlLinkVersion">
            <summary>
            本地 HTML 文件链接是否添加版本号，默认为 false
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Config.IgnoreCase">
            <summary>
            是否忽略大小写
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Config.IsFastestCompressionLevel">
            <summary>
            默认为 true 表示 GZip 启用快速压缩，否则使用默认压缩
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Config.getHostPort(System.String)">
            <summary>
            TCP 服务主机与端口信息
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.WebView.Config.Null">
            <summary>
            默认网站生成配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Config.Null.Default">
            <summary>
            网站生成配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ConfigAttribute">
            <summary>
            网站生成配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.HtmlEncoder">
            <summary>
            HTML 编码器
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.HtmlEncoder.htmls">
            <summary>
            HTML转义字符集合
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.HtmlEncoder.size">
            <summary>
            最大值
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.#ctor(System.String)">
            <summary>
            HTML编码器
            </summary>
            <param name="htmls">HTML转义字符集合</param>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.ToHtml(AutoCSer.WebView.Response@,AutoCSer.SubString@)">
            <summary>
            文本转HTML
            </summary>
            <param name="response">页面输出</param>
            <param name="value">文本值</param>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.ToHtml(AutoCSer.WebView.Response@,System.String)">
            <summary>
            文本转HTML
            </summary>
            <param name="response">页面输出</param>
            <param name="value">文本值</param>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.ToHtml(AutoCSer.WebView.Response@,System.Char*,System.Int32)">
            <summary>
            文本转HTML
            </summary>
            <param name="response"></param>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.encodeCount(System.Char*,System.Char*)">
            <summary>
            计算编码字符数量
            </summary>
            <param name="start">起始位置</param>
            <param name="end">结束位置</param>
            <returns>编码字符数量</returns>
        </member>
        <member name="M:AutoCSer.WebView.HtmlEncoder.toHtml(System.Char*,System.Char*,System.Char*)">
            <summary>
            HTML转义
            </summary>
            <param name="start">起始位置</param>
            <param name="end">结束位置</param>
            <param name="write">写入位置</param>
        </member>
        <member name="F:AutoCSer.WebView.HtmlEncoder.Html">
            <summary>
            默认HTML编码器
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.HtmlEncoder.TextArea">
            <summary>
            默认HTML编码器
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.MethodAttribute">
            <summary>
            WEB 函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.MethodAttribute.MaxPostDataSize">
            <summary>
            HTTP Body 接收数据的最大字节数，默认为 4MB。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.MethodAttribute.MaxMemoryStreamSize">
            <summary>
            接收 HTTP Body 数据内存缓冲区的最大字节数，默认为 128KB，超出限定则使用文件储存方式。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.MethodAttribute.FullName">
            <summary>
            AJAX 调用全名称，用于替换默认的调用全名称。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.MethodAttribute.MethodName">
            <summary>
            WEB 调用函数名称，用于替换默认的函数名称。
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.OnTime">
            <summary>
            定时触发 WEB 扩展
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.OnTime.Set(AutoCSer.Date.NowTime.OnTimeFlag)">
            <summary>
            设置定时触发类型
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:AutoCSer.WebView.OnTime.onTime(AutoCSer.Date.NowTime.OnTimeFlag)">
            <summary>
            触发定时任务
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:AutoCSer.WebView.Page">
            <summary>
            WEB页面
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Page.dataToType">
            <summary>
            未知数据流解析转换类型
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Page.PageResponse">
            <summary>
            HTTP 响应输出
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Page.HttpResponse">
            <summary>
            HTTP 响应输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetJsContentType">
            <summary>
            设置 JS 内容类型
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetCookie(System.Byte[],System.Byte[],System.DateTime,System.Byte[],System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            设置 Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="domain">有效域名</param>
            <param name="path">有效路径</param>
            <param name="expires">超时时间</param>
            <param name="isSecure">是否安全</param>
            <param name="isHttpOnly">是否 HTTP Only</param>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetCookie(System.Byte[],System.Byte[])">
            <summary>
            设置 Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetCookie(System.String,System.String)">
            <summary>
            设置 Cookie
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:AutoCSer.WebView.Page.RemoveCookie(System.Byte[])">
            <summary>
            删除 Cookie
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:AutoCSer.WebView.Page.RemoveCookie(System.String)">
            <summary>
            删除 Cookie
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="F:AutoCSer.WebView.Page.sessionName">
            <summary>
            Session 名称
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Page.sessionId">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.GetSession``1">
            <summary>
            获取Session值
            </summary>
            <typeparam name="valueType">值类型</typeparam>
            <returns>Session值</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.GetSession``1(``0)">
            <summary>
            获取Session值
            </summary>
            <typeparam name="valueType">值类型</typeparam>
            <param name="nullValue">默认空值</param>
            <returns>Session值</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.setSessionId">
            <summary>
            初始化请求会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetSession``1(``0)">
            <summary>
            设置Session值
            </summary>
            <param name="value">值</param>
            <typeparam name="valueType">值类型</typeparam>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.SetSession(System.Object)">
            <summary>
            设置 Session 值
            </summary>
            <param name="value">值</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.getSessionCookie">
            <summary>
            获取 Session Cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.setSessionCookie">
            <summary>
            设置 Session Cookie
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.RemoveSession">
            <summary>
            删除 Session
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Page.ETagVersion">
            <summary>
            客户端缓存版本号
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Page.isGZip">
            <summary>
            是否支持压缩
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Page.MaxMemoryStreamSize">
            <summary>
            内存流最大字节数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.clear">
            <summary>
            清除当前请求数据
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Page.GetSaveFileName(System.Byte[])">
            <summary>
            根据HTTP请求表单值获取保存文件全称
            </summary>
            <param name="name">表单名称</param>
            <returns>文件全称</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.ResponseAjaxCallBack(AutoCSer.CharStream)">
            <summary>
            AJAX回调输出
            </summary>
            <param name="jsStream">输出数据流</param>
            <returns>是否存在回调参数</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.SocketResponse(AutoCSer.Net.Http.Response@)">
            <summary>
            输出结束
            </summary>
            <param name="response">HTTP响应输出</param>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.ParseParameter``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.parseParameter``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.ParseParameterAny``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Page.parseParameterAny``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:AutoCSer.WebView.PathMemberAttribute">
            <summary>
            WEB Path 成员配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.PubAjax">
            <summary>
            公用 AJAX 调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.PubAjax.Call">
            <summary>
            公用 AJAX 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.PubAjax.Error(System.String)">
            <summary>
            公用错误处理函数
            </summary>
            <param name="error">错误信息</param>
        </member>
        <member name="F:AutoCSer.WebView.PubAjax.errorQueue">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.PubAjax.errorQueueLock">
            <summary>
            错误信息队列访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.PubAjax.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.PubErrorParameter">
            <summary>
            公用错误处理参数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.PubErrorParameter.error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.Request">
            <summary>
            WEB 请求
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Request.Socket">
            <summary>
            HTTP套接字接口设置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Request.DomainServer">
            <summary>
            域名服务
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.Session">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.ResponseEncoding">
            <summary>
            输出编码
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.WorkPath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.SocketIdentity">
            <summary>
            套接字请求编号
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.HeaderFlag">
            <summary>
            HTTP 头部标志位
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.Form">
            <summary>
            提交表单信息
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.Files">
            <summary>
            获取上传文件信息
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Request.IsCookie(System.Byte[])">
            <summary>
            判断是否存在Cookie值
            </summary>
            <param name="name">名称</param>
            <returns>是否存在Cookie值</returns>
        </member>
        <member name="F:AutoCSer.WebView.Request.IsPool">
            <summary>
            是否使用对象池
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.jsonParserConfig">
            <summary>
            JSON解析配置参数
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.Request.xmlParserConfig">
            <summary>
            XML解析配置参数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Request.JsonParser">
            <summary>
            JSON 解析
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Request.parseJson``1(``0@,System.String)">
            <summary>
            JSON 解析
            </summary>
            <typeparam name="parameterType"></typeparam>
            <param name="parameter"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.Request.parseParameterQuery``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Request.parseParameterQueryAny``1(``0@)">
            <summary>
            解析web调用参数
            </summary>
            <typeparam name="parameterType">web调用参数类型</typeparam>
            <param name="parameter">web调用参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.Request.CompileJsonSerialize(System.Type[],System.Type[])">
            <summary>
            JSON 序列化预编译
            </summary>
            <param name="deSerializeTypes"></param>
            <param name="serializeTypes"></param>
        </member>
        <member name="M:AutoCSer.WebView.Request.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.Response">
            <summary>
            页面输出
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Response.Stream">
            <summary>
            输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Response.EncodeStream">
            <summary>
            HTML 编码输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.Response.Encoding">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteNotNull(System.Byte[])">
            <summary>
            输出 HTML
            </summary>
            <param name="html">数据</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.String)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(AutoCSer.SubString)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(AutoCSer.SubString@)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.Char)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(AutoCSer.WebView.HashUrl)">
            <summary>
            输出 URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteHtml(System.String)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteHtml(AutoCSer.SubString)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteHtml(AutoCSer.SubString@)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteHtml(System.Char)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteHtml(AutoCSer.WebView.HashUrl)">
            <summary>
            输出 URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteTextArea(System.String)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteTextArea(AutoCSer.SubString)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteTextArea(AutoCSer.SubString@)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteTextArea(System.Char)">
            <summary>
            输出 HTML
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.WriteTextArea(AutoCSer.WebView.HashUrl)">
            <summary>
            输出 URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.Byte)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.SByte)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.UInt16)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.Int16)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.UInt32)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.Int32)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.UInt64)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.WebView.Response.Write(System.Int64)">
            <summary>
            数值转字符串
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:AutoCSer.WebView.ServerTime">
            <summary>
            服务器端时间
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ServerTime.Now">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.Value">
            <summary>
            回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.AjaxAttribute">
            <summary>
            AJAX 调用配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.AjaxBase">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.CallAttribute">
            <summary>
            WEB 调用配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.CallSynchronize">
            <summary>
            WEB 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.CallAsynchronousBase">
            <summary>
            WEB 异步调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.PubAjax">
            <summary>
            公用 AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.UnionType.ViewAttribute">
            <summary>
            WEB 视图配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.View">
            <summary>
            WEB 页面视图
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View.DefaultAttribute">
            <summary>
            默认 WEB 视图配置
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求头部处理[TRY+1]
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.View.LoadPage">
            <summary>
            加载查询参数[TRY]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.responsePage">
            <summary>
            页面输出[TRY+1]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.responseLocationPath">
            <summary>
            输出视图错误重定向路径[TRY+1]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.LoadAjax">
            <summary>
            加载查询参数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.responseAjax">
            <summary>
            AJAX 视图输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.responseLocationPathAjax">
            <summary>
            输出视图错误重定向路径
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.AsynchronousResponse">
            <summary>
            异步输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.serverError500">
            <summary>
            服务器发生不可预期的错误 
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View.serverError500(AutoCSer.Net.Http.SocketBase,System.Int64)">
            <summary>
            服务器发生不可预期的错误 
            </summary>
            <param name="socket"></param>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.WebView.View.loadHtml(System.String,System.Int32,System.Object,System.Byte[][]@)">
            <summary>
            加载HTML数据
            </summary>
            <param name="fileName">HTML文件</param>
            <param name="htmlCount">HTML片段数量验证</param>
            <param name="htmlLock">HTML 数据创建访问锁</param>
            <param name="htmls">HTML 数据</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.WebView.View`1">
            <summary>
            WEB 页面视图，支持对象池
            </summary>
            <typeparam name="pageType">WEB页面类型</typeparam>
        </member>
        <member name="F:AutoCSer.WebView.View`1.htmls">
            <summary>
            HTML 数据
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View`1.htmlLock">
            <summary>
            HTML 数据创建访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,`0)">
            <summary>
            HTTP请求头部处理[TRY+1]
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="page"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.View`1.LoadPage">
            <summary>
            加载查询参数[TRY]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.responsePage">
            <summary>
            页面输出[TRY+1]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.responseLocationPath">
            <summary>
            输出视图错误重定向路径[TRY+1]
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.LoadAjax">
            <summary>
            加载查询参数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.responseAjax">
            <summary>
            AJAX视图输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.responseLocationPathAjax">
            <summary>
            输出视图错误重定向路径
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.AsynchronousResponse">
            <summary>
            异步输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.serverError500">
            <summary>
            服务器发生不可预期的错误 
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.serverError500(AutoCSer.Net.Http.SocketBase,System.Int64)">
            <summary>
            服务器发生不可预期的错误 
            </summary>
            <param name="socket"></param>
            <param name="identity"></param>
        </member>
        <member name="M:AutoCSer.WebView.View`1.isLoadHtml(System.String,System.Int32)">
            <summary>
            加载HTML数据 XXX
            </summary>
            <param name="fileName">HTML文件</param>
            <param name="htmlCount">HTML片段数量验证</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.View`1.loadHtml(System.String,System.Int32)">
            <summary>
            加载HTML数据
            </summary>
            <param name="fileName">HTML文件</param>
            <param name="htmlCount">HTML片段数量验证</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.View`1.loadHtml(System.String,System.Int32,System.Object,System.Byte[][]@)">
            <summary>
            加载HTML数据
            </summary>
            <param name="fileName">HTML文件</param>
            <param name="htmlCount">HTML片段数量验证</param>
            <param name="htmlLock">HTML 数据创建访问锁</param>
            <param name="htmls">HTML 数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.View`1.push">
            <summary>
            WEB页面回收
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.Pop">
            <summary>
            弹出节点
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.WebView.View`1.next">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.clear">
            <summary>
            清除页面信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View`1.poolMaxCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View`1.poolHead">
            <summary>
            链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View`1.popLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.View`1.poolCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.View`1.PushNotNull(`0)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.View`1.pushLink(`0,`0,System.Int32)">
            <summary>
            添加链表
            </summary>
            <param name="value">链表头部</param>
            <param name="end">链表尾部</param>
            <param name="count">数据数量</param>
        </member>
        <member name="M:AutoCSer.WebView.View`1.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.ViewAttribute">
            <summary>
            WEB 视图配置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.TypeCallName">
            <summary>
            WEB 视图调用类型名称，用于替换默认的类型名称。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.MethodName">
            <summary>
            WEB 调用函数名称，用于替换默认的函数名称。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.QueryName">
            <summary>
            如果存在查询参数，则会生成一个 struct 用于整合这些参数，同时生成一个这个类型的字段，这个字段名称默认为 query。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.MaxPostDataSize">
            <summary>
            HTTP Body 接收数据的最大字节数，默认为 4MB。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.MaxMemoryStreamSize">
            <summary>
            接收 HTTP Body 数据内存缓冲区的最大字节数，默认为 128KB，超出限定则使用文件储存方式。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.RewritePath">
            <summary>
            来源路径重写
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsRewriteHtml">
            <summary>
            来源路径重写是否补全扩展名称
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsPage">
            <summary>
            默认为 true 表示支持服务端 HTML 输出，也就是说支持搜索引擎访问，否则对于搜索引擎返回 404。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsAjax">
            <summary>
            默认为 true 表示支持服务端输出 WEB 视图 JSON 数据，也就是说支持浏览器的正常访问。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsExportTypeScript">
            <summary>
            默认为 false 表示不生成 TypeScript 调用代理，一般只有在嵌入式页面中才需要设置为 true，只有 IsAjax = true 时有效。
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsAsynchronous">
            <summary>
            是否异步请求
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewAttribute.IsCompileJsonParser">
            <summary>
            默认为 true 表示在初始化的时候启动 JSON 反序列化预编译任务
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ViewLocationPath">
            <summary>
            视图错误重定向路径
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewLocationPath.ErrorPath">
            <summary>
            错误重定向路径
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewLocationPath.ReturnPath">
            <summary>
            返回路径
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewLocationPath.LocationPath">
            <summary>
            重定向路径
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewLocationPath.Clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewLocationPath.SetLocation(System.String)">
            <summary>
            设置重定向路径
            </summary>
            <param name="locationPath">重定向路径</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewLocationPath.SetError(System.String,System.String)">
            <summary>
            设置错误路径
            </summary>
            <param name="errorPath">错误重定向路径</param>
            <param name="returnPath">返回路径</param>
        </member>
        <member name="T:AutoCSer.WebView.ViewQueryAttribute">
            <summary>
            WEB 视图查询字段配置
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ViewTreeBuilder">
            <summary>
            HTML 模板建树器
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.atMapSize">
            <summary>
            =@取值字符位图尺寸
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.commandUniqueHashDataCount">
            <summary>
            模板命令HASH匹配数据容器尺寸
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.commandUniqueHashDataSize">
            <summary>
            模板命令HASH匹配数据尺寸
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.atMap">
            <summary>
            =@取值字符位图
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.commandUniqueHashData">
            <summary>
            模板命令HASH匹配数据
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.clientCommandIndex">
            <summary>
            客户端命令索引位置
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.imageSrc">
            <summary>
            图片源
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeBuilder.Htmls">
            <summary>
            HTML片段
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewTreeBuilder.HtmlArray">
            <summary>
            HTML片段
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.#ctor(System.String,System.Boolean)">
            <summary>
            HTML模板建树器
            </summary>
            <param name="html">HTML</param>
            <param name="isCreate">是否自动创建</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.create(System.String)">
            <summary>
            根据HTML获取模板树
            </summary>
            <param name="html">HTML</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.appendHtml(AutoCSer.SubString)">
            <summary>
            添加HTML片段
            </summary>
            <param name="html">HTML片段</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.appendHtml(AutoCSer.SubString@)">
            <summary>
            添加HTML片段
            </summary>
            <param name="html">HTML片段</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.appendAtNode(AutoCSer.SubString)">
            <summary>
            添加 @ 节点
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.appendNode(System.Int32,AutoCSer.WebView.ViewTreeTag)">
            <summary>
            添加节点
            </summary>
            <param name="tagIndex"></param>
            <param name="tag"></param>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.onCreated">
            <summary>
            HTML模板树创建完毕
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeBuilder.formatHtml(System.String)">
            <summary>
            HTML模板格式化处理
            </summary>
            <param name="html">HTML模板</param>
            <returns>格式化处理后的HTML模板</returns>
        </member>
        <member name="T:AutoCSer.WebView.ViewTreeCommand">
            <summary>
            HTML模板命令类型
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.At">
            <summary>
            输出绑定的数据
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.Client">
            <summary>
            客户端代码段
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.Value">
            <summary>
            子代码段
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.Loop">
            <summary>
            循环
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.For">
            <summary>
            循环=LOOP
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.Note">
            <summary>
            屏蔽代码段输出
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.If">
            <summary>
            绑定的数据为true非0非null时输出代码
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeCommand.Not">
            <summary>
            绑定的数据为false或者0或者null时输出代码
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ViewTreeTag">
            <summary>
            HTML模板树节点标识
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTag.Type">
            <summary>
            树节点标识类型
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTag.Command">
            <summary>
            标识command
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTag.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTag.IsRound">
            <summary>
            是否已经回合
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewTreeTag.Equals(AutoCSer.WebView.ViewTreeTag)">
            <summary>
            判断树节点标识是否相等
            </summary>
            <param name="other">树节点标识</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:AutoCSer.WebView.ViewTreeTagType">
            <summary>
            树节点标识类型
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTagType.Html">
            <summary>
            普通HTML段
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTagType.Note">
            <summary>
            注释子段
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewTreeTagType.At">
            <summary>
            =@取值代码
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.ViewBase">
            <summary>
            WEB 页面视图
            </summary>
            <summary>
            WEB 页面视图
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.IsAsynchronous">
            <summary>
            是否异步
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.asyncReturn">
            <summary>
            异步返回值
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase._if_">
            <summary>
            临时逻辑变量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase._loopIndex_">
            <summary>
            当前循环索引
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase._loopCount_">
            <summary>
            当前循环数量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.ResponseStream">
            <summary>
            页面输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.EncodeStream">
            <summary>
            HTML 编码输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.AjaxStream">
            <summary>
            AJAX 输出数据流
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.isDefaultToJson">
            <summary>
            JSON序列化是否使用默认模式(非视图模式模式)
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.ViewKeywords">
            <summary>
            页面关键字
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.ViewMetaKeywords">
            <summary>
            页面关键字
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.ViewDescription">
            <summary>
            页面描述
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.ViewMetaDescription">
            <summary>
            页面描述
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.LocationPath">
            <summary>
            视图错误重定向路径
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.IsLocationPath">
            <summary>
            视图错误重定向路径
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.notFound404">
            <summary>
            404 重定向路径
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.ViewBase.serverTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.loadHeader">
            <summary>
            HTTP请求头部处理
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.loadView">
            <summary>
            WEB视图加载
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.page(AutoCSer.WebView.Response@)">
            <summary>
            HTTP响应输出处理
            </summary>
            <param name="response">页面输出</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ajax(AutoCSer.CharStream)">
            <summary>
            AJAX响应输出处理
            </summary>
            <param name="js">JS输出流</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.setLocationPath(System.String)">
            <summary>
            设置重定向路径
            </summary>
            <param name="locationPath">重定向路径</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.setErrorPath(System.String,System.String)">
            <summary>
            设置错误路径
            </summary>
            <param name="errorPath">错误重定向路径</param>
            <param name="returnPath">返回路径</param>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.LoadHtml(System.String,System.Int32,System.Object,System.Byte[][]@)">
            <summary>
            加载HTML数据
            </summary>
            <param name="fileName">HTML文件</param>
            <param name="htmlCount">HTML片段数量验证</param>
            <param name="htmlLock">HTML 数据创建访问锁</param>
            <param name="htmls">HTML 数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ResponseLocationPath(AutoCSer.Net.Http.SocketBase)">
            <summary>
            输出视图错误重定向路径
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ResponseLocationPathAjax(System.Byte*@)">
            <summary>
            输出视图错误重定向路径
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.IsAwaitMethod">
            <summary>
            是否存在 await 函数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.pageAsync(AutoCSer.WebView.Response)">
            <summary>
            HTTP响应输出处理
            </summary>
            <param name="response">页面输出</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ajaxAsync(AutoCSer.CharStream)">
            <summary>
            AJAX响应输出处理
            </summary>
            <param name="js">JS输出流</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.addLog(System.Exception)">
            <summary>
            添加错误日志
            </summary>
            <param name="error"></param>
        </member>
        <member name="F:AutoCSer.WebView.ViewBase.AsyncWaitHandle">
            <summary>
            异步等待事件
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.SetAsynchronousAwaitMethod(System.Boolean,System.Boolean)">
            <summary>
            设置异步与 await 函数状态
            </summary>
            <param name="isAsynchronous"></param>
            <param name="isAwaitMethod"></param>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.asyncEnd">
            <summary>
            仅用于代码生成调用，请勿自行调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ResponsePage(System.Byte*@,System.Byte*@)">
            <summary>
            页面输出
            </summary>
            <param name="buffer"></param>
            <param name="encodeBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.ViewBase.ResponseAjax(System.Byte*@)">
            <summary>
            AJAX 视图输出
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:AutoCSer.WebView.AjaxBase">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.ViewClientType">
            <summary>
            视图类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.ViewClientMember">
            <summary>
            视图类型成员标识
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.FormatView">
            <summary>
            客户端格式化视图数组函数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.JsonSerializeConfig">
            <summary>
            AJAX响应输出参数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.PubErrorCallName">
            <summary>
            公用错误处理函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.AjaxStream">
            <summary>
            AJAX 输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.MethodInfo">
            <summary>
            AJAX 调用信息
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.AjaxBase.MaxMemoryStreamSize">
            <summary>
            内存流最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.IsAsynchronous">
            <summary>
            是否异步
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.AjaxBase.loader">
            <summary>
            AJAX 调用加载
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.AjaxBase.SetLoader(AutoCSer.WebView.CallBase,AutoCSer.WebView.AjaxMethodInfo)">
            <summary>
            设置 AJAX 调用加载
            </summary>
            <param name="loader"></param>
            <param name="methodInfo"></param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxBase.CallAjax">
            <summary>
            AJAX 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.AjaxBase.Response``1(``0@,System.Byte*)">
            <summary>
            AJAX 响应输出
            </summary>
            <typeparam name="valueType">输出数据类型</typeparam>
            <param name="value">输出数据</param>
            <param name="buffer">输出缓冲区</param>
        </member>
        <member name="M:AutoCSer.WebView.AjaxBase.Response(System.Byte*)">
            <summary>
            AJAX 响应输出
            </summary>
            <param name="buffer">输出缓冲区</param>
        </member>
        <member name="T:AutoCSer.WebView.CallBase">
            <summary>
            HTTP 调用
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CallBase.AjaxCallback">
            <summary>
            AJAX 回调处理
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallback.Ajax">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallback.Callback(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            回调处理
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.WebView.CallBase.AjaxCallbackPool`1">
            <summary>
            AJAX 回调处理
            </summary>
            <typeparam name="ajaxType"></typeparam>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallbackPool`1.Ajax">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallbackPool`1.Callback(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            回调处理
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.WebView.CallBase.AjaxCallback`1">
            <summary>
            AJAX 回调处理
            </summary>
            <typeparam name="paramtereType"></typeparam>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallback`1.Ajax">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallback`1.Parameter">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallback`1.Callback(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            回调处理
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallback`1.response(AutoCSer.WebView.Ajax,AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            回调处理
            </summary>
            <param name="ajax"></param>
            <param name="returnType"></param>
        </member>
        <member name="T:AutoCSer.WebView.CallBase.AjaxCallbackPool`2">
            <summary>
            AJAX 回调处理
            </summary>
            <typeparam name="ajaxType"></typeparam>
            <typeparam name="paramtereType"></typeparam>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallbackPool`2.Ajax">
            <summary>
            AJAX 调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.AjaxCallbackPool`2.Parameter">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallbackPool`2.Callback(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            回调处理
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.AjaxCallbackPool`2.response(`0,AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            回调处理
            </summary>
            <param name="ajax"></param>
            <param name="returnType"></param>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.MethodInfo">
            <summary>
            HTTP 调用函数信息
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.CallBase.CallMethodIndex">
            <summary>
            获取 HTTP 调用函数编号
            </summary>
        </member>
        <member name="P:AutoCSer.WebView.CallBase.MaxMemoryStreamSize">
            <summary>
            内存流最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.CallResponse">
            <summary>
            WEB 调用输出
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.ResponseStream">
            <summary>
            页面输出数据流
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.GetResponseStream(System.Byte*,System.Int32)">
            <summary>
            获取页面输出数据流
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.callAjax(System.Int32,AutoCSer.WebView.AjaxBase)">
            <summary>
            AJAX 调用
            </summary>
            <param name="callIndex"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.CallAjax(AutoCSer.WebView.AjaxBase)">
            <summary>
            AJAX 调用
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.location(System.String,System.Boolean)">
            <summary>
            重定向
            </summary>
            <param name="path">重定向地址</param>
            <param name="is302">是否临时重定向</param>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.location(System.Byte[],System.Boolean)">
            <summary>
            重定向
            </summary>
            <param name="path">重定向地址</param>
            <param name="is302">是否临时重定向</param>
        </member>
        <member name="T:AutoCSer.WebView.CallBase.LocationVersion">
            <summary>
            静态文件版本号重定向
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.LocationVersion.location">
            <summary>
            重定向地址
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.LocationVersion.locationData">
            <summary>
            重定向地址
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.LocationVersion.version">
            <summary>
            资源版本号
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallBase.LocationVersion.versionLock">
            <summary>
            资源版本号访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.LocationVersion.#ctor(System.String)">
            <summary>
            静态文件版本号重定向
            </summary>
            <param name="location">重定向地址</param>
        </member>
        <member name="M:AutoCSer.WebView.CallBase.LocationVersion.Location(AutoCSer.WebView.CallBase,System.Boolean)">
            <summary>
            获取重定向地址
            </summary>
            <param name="call">HTTP 调用</param>
            <param name="is302">是否临时重定向</param>
        </member>
        <member name="T:AutoCSer.WebView.CallAsynchronous">
            <summary>
            HTTP 异步调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.RepsonseEnd">
            <summary>
            结束异步输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.RepsonseEnd(AutoCSer.SubArray{System.Byte})">
            <summary>
            结束异步输出
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.RepsonseEnd(AutoCSer.CharStream)">
            <summary>
            结束异步输出
            </summary>
            <param name="charStream">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.RepsonseEnd(System.String,System.Boolean)">
            <summary>
            结束异步输出
            </summary>
            <param name="value">输出数据</param>
            <param name="isAscii">是否检测 ASCII 编码兼容</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.RepsonseEnd(System.IO.FileInfo)">
            <summary>
            结束异步输出
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="T:AutoCSer.WebView.CallAsynchronous`1">
            <summary>
            HTTP 异步调用，支持对象池
            </summary>
            <typeparam name="callType">web调用类型</typeparam>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,`0,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="call"></param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.LoadHeader(AutoCSer.Net.HttpDomainServer.ViewServer,AutoCSer.Net.Http.SocketBase,`0)">
            <summary>
            HTTP请求头部处理
            </summary>
            <param name="domainServer">域名服务</param>
            <param name="socket">HTTP套接字接口</param>
            <param name="call"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.RepsonseEnd">
            <summary>
            结束异步输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.RepsonseEnd(AutoCSer.SubArray{System.Byte})">
            <summary>
            结束异步输出
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.RepsonseEnd(AutoCSer.CharStream)">
            <summary>
            结束异步输出
            </summary>
            <param name="charStream">输出数据</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.RepsonseEnd(System.String,System.Boolean)">
            <summary>
            结束异步输出
            </summary>
            <param name="value">输出数据</param>
            <param name="isAscii">是否检测 ASCII 编码兼容</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.RepsonseEnd(System.IO.FileInfo)">
            <summary>
            结束异步输出
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.CancelGetForm">
            <summary>
            取消获取请求表单数据操作
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.PushPool">
            <summary>
            WEB页面回收
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.Pop">
            <summary>
            弹出节点
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronous`1.next">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.clear">
            <summary>
            清除页面信息
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronous`1.poolMaxCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronous`1.poolHead">
            <summary>
            链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronous`1.popLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronous`1.poolCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.PushNotNull(`0)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.pushLink(`0,`0,System.Int32)">
            <summary>
            添加链表
            </summary>
            <param name="value">链表头部</param>
            <param name="end">链表尾部</param>
            <param name="count">数据数量</param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronous`1.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.WebView.CallAsynchronousBase">
            <summary>
            HTTP 异步调用
            </summary>
        </member>
        <member name="F:AutoCSer.WebView.CallAsynchronousBase.IsCreateResponse">
            <summary>
            是否创建了异步输出
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.GetResponse">
            <summary>
            获取 WEB 调用输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.String)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(AutoCSer.SubString@)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.Byte[])">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.Byte)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.SByte)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.UInt16)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.Int16)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.UInt32)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.Int32)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.Int64)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.Response(System.UInt64)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(System.Int32)">
            <summary>
            创建 WEB 异步调用输出
            </summary>
            <param name="size"></param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(AutoCSer.WebView.CallResponse@,System.Int32)">
            <summary>
            创建 WEB 异步调用输出
            </summary>
            <param name="response"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(System.Byte*,System.Int32)">
            <summary>
            创建 WEB 异步调用输出（需要自己负责释放内存）
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(System.Byte*,System.Int32,AutoCSer.WebView.CallResponse@)">
            <summary>
            创建 WEB 异步调用输出（需要自己负责释放内存）
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="response"></param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(AutoCSer.Pointer.Size@)">
            <summary>
            创建 WEB 异步调用输出（需要自己负责释放内存）
            </summary>
            <param name="buffer"></param>
            <returns>是否创建成功</returns>
        </member>
        <member name="M:AutoCSer.WebView.CallAsynchronousBase.CreateResponse(AutoCSer.Pointer.Size@,AutoCSer.WebView.CallResponse@)">
            <summary>
            创建 WEB 异步调用输出（需要自己负责释放内存）
            </summary>
            <param name="buffer"></param>
            <param name="response"></param>
            <returns>是否创建成功</returns>
        </member>
        <member name="T:AutoCSer.WebView.CallSynchronize">
            <summary>
            HTTP 同步调用
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.GetResponse">
            <summary>
            获取 WEB 调用输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.String)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(AutoCSer.SubString@)">
            <summary>
            输出字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.Byte[])">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            输出字节数组
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.Byte)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.SByte)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.UInt16)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.Int16)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.UInt32)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.Int32)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.Int64)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.WebView.CallSynchronize.Response(System.UInt64)">
            <summary>
            输出数字字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:AutoCSer.WebView.ConfigLoader">
            <summary>
            配置加载
            </summary>
        </member>
        <member name="M:AutoCSer.WebView.ConfigLoader.GetUnion(System.Type,System.String)">
            <summary>
            获取配置数据
            </summary>
            <param name="type">配置类型</param>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.BoundaryReceiveLinkTaskType">
            <summary>
            接受数据处理任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveLinkTaskType.WriteFile">
            <summary>
            写文件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveLinkTaskType.GetFile">
            <summary>
            获取文件表单值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveLinkTaskType.GetFileFinally">
            <summary>
            获取文件表单值并结束
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.BoundaryReceiver`1">
            <summary>
            HTTP 套接字数据接收器
            </summary>
            <typeparam name="socketType">HTTP 套接字类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.cacheFileName">
            <summary>
            缓存文件名称前缀
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.httpSocket">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.header">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.form">
            <summary>
            HTTP 请求表单
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.fileStream">
            <summary>
            当前表单值文件流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.buffer">
            <summary>
            数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.boundary">
            <summary>
            提交数据分隔符
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.bufferSize">
            <summary>
            数据缓冲区大小
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.contentLength">
            <summary>
            剩余表单数据内容长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.receiveEndIndex">
            <summary>
            接收数据结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.startIndex">
            <summary>
            数据起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.currentIndex">
            <summary>
            当前数据位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.currentName">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.currentValue">
            <summary>
            表单值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.currentFileName">
            <summary>
            客户端文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.saveFileName">
            <summary>
            服务端保存文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.valueEnterIndex">
            <summary>
            表单值当前起始位置换行符标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.receiveType">
            <summary>
            接受数据处理类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiver`1.linkTaskType">
            <summary>
            接受数据处理任务类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.BoundaryReceiver`1.LinkTaskTicks">
            <summary>
            线程切换检测时间
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.BoundaryReceiver`1.NextLinkTask">
            <summary>
            下一个任务节点
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.BoundaryReceiver`1.#ctor(`0)">
            <summary>
            HTTP 套接字数据接收器
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.BoundaryReceiver`1.getName(System.Byte*,System.Byte*,System.Byte*)">
            <summary>
            获取表单名称值
            </summary>
            <param name="dataFixed">数据</param>
            <param name="start">数据起始位置</param>
            <param name="end">数据结束位置</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.BoundaryReceiver`1.getValue">
            <summary>
            获取表单值
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.BoundaryReceiver`1.addFile">
            <summary>
            获取文件表单值
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.BoundaryReceiveType">
            <summary>
            接受数据处理类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveType.OnFirstBoundary">
            <summary>
            接收第一个分割符
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveType.OnEnter">
            <summary>
            接收换行数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.BoundaryReceiveType.OnValue">
            <summary>
            接收表单值
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.Config">
            <summary>
            HTTP 配置
            </summary>
            <summary>
            HTTP 配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.DefaultHeaderCount">
            <summary>
            HTTP 头部最大未定义项数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.MaxHeaderCount">
            <summary>
            HTTP 头部最大未定义项数，默认为 8
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.DefaultQueryCount">
            <summary>
            URI 最大查询参数项数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.MaxQueryCount">
            <summary>
            URI 最大查询参数项数，默认为 8
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.DefaultHeadSize">
            <summary>
            默认 HTTP 头部缓存数据字节大小
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.HeadSize">
            <summary>
            HTTP 头部缓存数据字节大小，默认为 2KB
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.BufferSize">
            <summary>
            临时缓存数据字节大小，默认为 2KB
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.DefaultReceiveHeadSeconds">
            <summary>
            HTTP 头部接收默认超时为 9 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.ReceiveHeadSeconds">
            <summary>
            HTTP 头部接收默认超时为 9 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.DefaultKeepAliveReceiveHeadSeconds">
            <summary>
            HTTP 头部接收默认超时为 89 秒，超时客户端将被被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.KeepAliveReceiveHeadSeconds">
            <summary>
            HTTP 头部接收默认超时为 89 秒，超时客户端将被被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.SocketSizePerSecond">
            <summary>
            套接字每秒最少收发字节数量,默认为 2KB
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Config.GetTimeout(System.Int32)">
            <summary>
            获取套接字操作超时时间
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Config.GetTimeout(System.Int64)">
            <summary>
            获取套接字操作超时时间
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Config.GetTimeout(System.Int32,System.UInt16@)">
            <summary>
            获取套接字操作超时时间
            </summary>
            <param name="size"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.SessionMinutes">
            <summary>
            Session 超时分钟数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.SessionRefreshMinutes">
            <summary>
            Session 超时刷新分钟数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.FileCacheTotalSize">
            <summary>
            文件缓存最大字节总数，默认为 128MB
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.FileCacheSize">
            <summary>
            最大缓存文件节数，默认为 256KB
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsFileCacheFastestCompressionLevel">
            <summary>
            默认为 false 表示文件缓存 GZip 使用默认压缩，否则启用快速压缩
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsFileCacheHeader">
            <summary>
            文件缓存是否预留 HTTP 头部空间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsKeepAliveDomainServer">
            <summary>
            KeepAlive 是否保持相同的域名服务（不再根据 host 查找不同的域名服务）
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsResponseServer">
            <summary>
            是否输出服务器信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsResponseCacheControl">
            <summary>
            是否输出缓存参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsResponseContentType">
            <summary>
            输出内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsResponseDate">
            <summary>
            是否输出日期
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.IsResponseLastModified">
            <summary>
            是否输出最后修改日志
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.SessionName">
            <summary>
            Session 名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Config.SslProtocol">
            <summary>
            默认 SSL 协议 Tls12
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ConfigLoader">
            <summary>
            配置加载
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.ConfigLoader.GetUnion(System.Type,System.String)">
            <summary>
            获取配置数据
            </summary>
            <param name="type">配置类型</param>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.ContentType">
            <summary>
            下载文件类型
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ContentTypeAttribute">
            <summary>
            下载文件类型属性
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.ExtensionName">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Name">
            <summary>
            下载文件类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.contentTypes">
            <summary>
            扩展名关联下载文件类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.unknownContentType">
            <summary>
            未知扩展名关联下载文件类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Html">
            <summary>
            默认内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Js">
            <summary>
            默认内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Mp3">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Mp4">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Rmvb">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Doc">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Woff">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Gif">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Swf">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Pdf">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Otf">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Jpeg">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Jpg">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Png">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Mpg">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Svg">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Avi">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Apk">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Xml">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Rm">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Ico">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Zip">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Bmp">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Rar">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Cur">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Css">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Xls">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Txt">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Eot">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Wav">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Wmv">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Docx">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute.Xlsx">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ContentTypeAttribute._7z">
            <summary>
            内容类型头部
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.ContentTypeAttribute.Get(System.String)">
            <summary>
            获取扩展名关联下载文件类型
            </summary>
            <param name="extensionName">扩展名</param>
            <returns>扩展名关联下载文件类型</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.ContentTypeAttribute.Get(AutoCSer.Net.Http.ResponseContentType)">
            <summary>
            获取输出内容类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.Cookie">
            <summary>
            HTTP 响应 Cookie
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.Domain">
            <summary>
            有效域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.Path">
            <summary>
            有效路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.Expires">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.IsSecure">
            <summary>
            是否安全
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.IsHttpOnly">
            <summary>
            是否 HTTP Only
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.Set(System.Byte[],System.DateTime,System.Byte[],System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            设置 Cookie
            </summary>
            <param name="value">值</param>
            <param name="domain">有效域名</param>
            <param name="path">有效路径</param>
            <param name="expires">超时时间</param>
            <param name="isSecure">是否安全</param>
            <param name="isHttpOnly">是否 HTTP Only</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.Set(System.Byte[],System.DateTime,AutoCSer.SubArray{System.Byte},System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            设置 Cookie
            </summary>
            <param name="value">值</param>
            <param name="domain">有效域名</param>
            <param name="path">有效路径</param>
            <param name="expires">超时时间</param>
            <param name="isSecure">是否安全</param>
            <param name="isHttpOnly">是否 HTTP Only</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.GetSize(System.Int32@)">
            <summary>
            获取 Cookie 字节数
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.Write(System.Byte*@)">
            <summary>
            Cookie 数据写入缓冲区
            </summary>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.DefaultPath">
            <summary>
            默认路径
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeSetCookie(System.Byte*)">
            <summary>
            HTTP响应输出Cookie名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.setCookieSize">
            <summary>
            HTTP响应输出Cookie名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeCookieDomain(System.Byte*)">
            <summary>
            Cookie域名
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.cookieDomainSize">
            <summary>
            Cookie域名数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeCookiePath(System.Byte*)">
            <summary>
            Cookie有效路径
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.cookiePathSize">
            <summary>
            Cookie有效路径数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeCookieExpires(System.Byte*)">
            <summary>
            Cookie域名
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.cookieExpiresSize">
            <summary>
            Cookie域名数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeCookieSecure(System.Byte*)">
            <summary>
            Cookie安全
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.cookieSecureSize">
            <summary>
            Cookie安全数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeCookieHttpOnly(System.Byte*)">
            <summary>
            Cookie是否http only
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Cookie.cookieHttpOnlySize">
            <summary>
            Cookie是否http only数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Cookie.writeMinTimeCookieExpires(System.Byte*)">
            <summary>
            Cookie最小时间超时时间
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:AutoCSer.Net.Http.DomainParser">
            <summary>
            域名分解器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.DomainParser.topDomains">
            <summary>
            顶级域名集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.DomainParser.data">
            <summary>
            域名数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.DomainParser.dataFixed">
            <summary>
            域名数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.DomainParser.dataEnd">
            <summary>
            域名数据结束
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.DomainParser.GetMainDomainByUrl(System.Byte*)">
            <summary>
            根据URL地址获取主域名
            </summary>
            <param name="start">URL起始位置</param>
            <returns>主域名</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.DomainParser.GetMainDomain(System.Byte*)">
            <summary>
            获取主域名
            </summary>
            <param name="start">域名起始位置</param>
            <returns>主域名</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.DomainParser.getMainDomain(System.Byte*,System.Byte*)">
            <summary>
            获取主域名
            </summary>
            <param name="domain">域名起始位置</param>
            <param name="end">域名结束位置</param>
            <returns>主域名</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.DomainParser.GetMainDomainByUrl(AutoCSer.SubArray{System.Byte})">
            <summary>
            根据URL地址获取主域名
            </summary>
            <param name="url">URL地址</param>
            <returns>主域名</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.DomainParser.GetMainDomain(AutoCSer.SubArray{System.Byte})">
            <summary>
            根据域名获取主域名
            </summary>
            <param name="domain">域名</param>
            <returns>主域名</returns>
        </member>
        <member name="T:AutoCSer.Net.Http.Form">
            <summary>
            HTTP 请求表单
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Form.socket">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Form.Values">
            <summary>
            表单数据集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Form.Files">
            <summary>
            文件集合
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Form.Text">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Form.TextQueryChar">
            <summary>
            查询字符
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.#ctor(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP 请求表单
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.Clear">
            <summary>
            清除表单数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.Add(System.Byte[],System.Byte[])">
            <summary>
            添加表单值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.AddFile(System.Byte[],System.Byte[],System.String)">
            <summary>
            添加文件
            </summary>
            <param name="name"></param>
            <param name="fileName"></param>
            <param name="saveFileName"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.AddFile(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            添加文件
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.SetText(System.String,System.Char)">
            <summary>
            设置表单字符串
            </summary>
            <param name="text">表单字符串</param>
            <param name="textQueryChar">查询字符</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.Parse">
            <summary>
            解析表单数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Form.clear(AutoCSer.LeftArray{AutoCSer.Net.Http.FormValue}@)">
            <summary>
            清除表单数据
            </summary>
            <param name="values">表单数据集合</param>
        </member>
        <member name="T:AutoCSer.Net.Http.FormValue">
            <summary>
            HTTP 请求表单值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.FormValue.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.FormValue.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.FormValue.value">
            <summary>
            表单值
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.FormValue.Value">
            <summary>
            表单值
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.FormValue.FileName">
            <summary>
            客户端文件名称
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.FormValue.SaveFileName">
            <summary>
            服务器端文件名称
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.Clear">
            <summary>
            清表单数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.Null">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.Set(System.Byte[],System.Byte[])">
            <summary>
            设置数据
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.SetFile(System.Byte[],System.Byte[],System.String)">
            <summary>
            设置文件数据
            </summary>
            <param name="name"></param>
            <param name="fileName"></param>
            <param name="saveFileName"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.SetFile(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            设置文件数据
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.SetName(System.Byte[],System.Int32,System.Int32)">
            <summary>
            设置表单名称
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.FormValue.SetNameValue(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置表单数据
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <param name="valueIndex"></param>
            <param name="valueLength"></param>
        </member>
        <member name="T:AutoCSer.Net.Http.GetFormType">
            <summary>
            获取请求表单数据回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.GetFormType.Call">
            <summary>
            WEB 调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.GetFormType.CallAsynchronous">
            <summary>
            WEB 异步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.GetFormType.Ajax">
            <summary>
            Ajax 调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.GetFormType.PubAjax">
            <summary>
            公用 AJAX 调用
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.Header">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.Buffer">
            <summary>
            接收数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.receiveIndex">
            <summary>
            接收数据起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.receiveCount">
            <summary>
            接收数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.HeaderEndIndex">
            <summary>
            HTTP 头部结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.Flag">
            <summary>
            HTTP 头部标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.WebSocketFlag">
            <summary>
            HTTP 头部标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.HostIndex">
            <summary>
            请求域名
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.Host">
            <summary>
            请求域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.UriIndex">
            <summary>
            请求URI
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.PathIndex">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.Path">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.BoundaryIndex">
            <summary>
            提交数据分隔符
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.contentType">
            <summary>
            HTTP 请求内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.referer">
            <summary>
            访问来源
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.Referer">
            <summary>
            访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.userAgent">
            <summary>
            浏览器参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.IfModifiedSinceIndex">
            <summary>
            客户端文档时间标识
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IfModifiedSince">
            <summary>
            客户端文档时间标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ifNoneMatch">
            <summary>
            客户端缓存有效标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.xProwardedFor">
            <summary>
            转发信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.secWebSocketKey">
            <summary>
            WebSocket 确认连接值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.webSocketOrigin">
            <summary>
            访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.OriginIndex">
            <summary>
            访问来源
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.Origin">
            <summary>
            访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.AjaxCallNameIndex">
            <summary>
            AJAX 调用函数名称
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.AjaxCallNameData">
            <summary>
            AJAX 调用函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.AjaxCallBackNameIndex">
            <summary>
            AJAX 回调函数名称
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.AjaxCallBackName">
            <summary>
            AJAX 回调函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.queryJson">
            <summary>
            查询 Json 字符串
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.QueryJson">
            <summary>
            Json字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.queryXml">
            <summary>
            查询 XML 字符串
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.QueryXml">
            <summary>
            XML字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.requestEncoding">
            <summary>
            请求内容编码
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.RequestEncoding">
            <summary>
            请求内容编码
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.WebSocketData">
            <summary>
            WebSocket 数据
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsKeepAlive">
            <summary>
            是否保持连接状态
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsGZip">
            <summary>
            客户端是否支持 GZip 压缩
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsRange">
            <summary>
            是否存在请求范围
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsFormatRange">
            <summary>
            是否已经格式化请求范围
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsBoundary">
            <summary>
            是否设置提交数据分隔符
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsAjax">
            <summary>
            是否 ajax 请求
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsSearchEngine">
            <summary>
            是否搜索引擎
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsReferer">
            <summary>
            判断来源页是否合法
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.Is100Continue">
            <summary>
            是否 100 Continue 确认
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.IsWebSocket">
            <summary>
            是否 WebSocket 连接
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.HeaderCount">
            <summary>
            HTTP头部名称数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.QueryCount">
            <summary>
            查询参数数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ContentLength">
            <summary>
            请求内容字节长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.RangeStart">
            <summary>
            请求范围起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.RangeEnd">
            <summary>
            请求范围结束位置
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Header.RangeSize">
            <summary>
            请求范围长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.Method">
            <summary>
            查询模式类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.PostType">
            <summary>
            提交数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.IsKeepAliveReceive">
            <summary>
            是否第二次接收数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ReceiveSizeLessCount">
            <summary>
            接收数据量过低次数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.FormatRange(System.Int64)">
            <summary>
            格式化请求范围
            </summary>
            <param name="contentLength">内容字节长度</param>
            <returns>范围是否有效</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.#ctor">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.parse">
            <summary>
            HTTP头部解析
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.parseRange(System.Byte*,System.Byte*)">
            <summary>
            请求字节范围解析
            </summary>
            <param name="start">数据起始位置</param>
            <param name="end">数据结束未知</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.parseCharset(System.Byte*,System.Byte*)">
            <summary>
            编码解析
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.checkSearchEngine">
            <summary>
            判断是否搜索引擎
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.IgnoreContentLength">
            <summary>
            处理忽略的请求内容字节长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.CopyToForm(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            复制接收数据到表单缓冲区
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.CopyToFormData(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            复制接收数据到数据缓冲区
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.ParseQuery``1(``0@)">
            <summary>
            查询解析
            </summary>
            <typeparam name="valueType">目标类型</typeparam>
            <param name="value">目标数据</param>
            <returns>是否解析成功</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.UnescapeUtf8(System.Byte*,System.Int32,System.Byte*)">
            <summary>
            模拟javascript解码函数unescape
            </summary>
            <param name="start"></param>
            <param name="length">数据长度</param>
            <param name="bufferStart"></param>
            <returns>unescape解码后的字符串</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.UnescapeUtf8(System.Byte*,System.Int32,System.Int32)">
            <summary>
            模拟javascript解码函数unescape
            </summary>
            <param name="bufferStart"></param>
            <param name="index"></param>
            <param name="length">数据长度</param>
            <returns>unescape解码后的字符串</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.UnescapeUtf8(System.Byte*,System.Int32,System.Byte[],System.Int32)">
            <summary>
            模拟javascript解码函数unescape
            </summary>
            <param name="current"></param>
            <param name="length">数据长度</param>
            <param name="buffer">数据缓冲区</param>
            <param name="bufferIndex">数据起始位置</param>
            <returns>unescape解码后的字符串</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.SetResponseLocationRange(System.String,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            设置输出重定向
            </summary>
            <param name="path"></param>
            <param name="location"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.SetResponseLocationRange(System.Int32,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            设置输出重定向
            </summary>
            <param name="length"></param>
            <param name="location"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.getCookie(System.Byte*,System.Int32)">
            <summary>
            获取 Cookie 值
            </summary>
            <param name="name">名称</param>
            <param name="nameLength">名称长度</param>
            <returns>值</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.GetCookie(System.Byte[],AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取 Cookie 值
            </summary>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.IsCookie(System.Byte[])">
            <summary>
            判断是否存在Cookie值
            </summary>
            <param name="name">名称</param>
            <returns>是否存在Cookie值</returns>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.maxBoundaryLength">
            <summary>
            最大数据分隔符长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.AjaxCallName">
            <summary>
            AJAX调用名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ViewOnlyName">
            <summary>
            web视图重新加载禁用输出成员名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.PubErrorCallName">
            <summary>
            公用错误处理函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.AjaxCallBackNameChar">
            <summary>
            AJAX回调函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.EncodingNameChar">
            <summary>
            查询编码名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.QueryJsonNameChar">
            <summary>
            json查询对象名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.LoadPageCacheChar">
            <summary>
            第一次加载页面缓存名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.MobileReViewNameChar">
            <summary>
            重新加载视图查询名称（忽略主列表）
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.AjaxCallNameChar">
             <summary>
            AJAX调用函数名称
             </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ReViewNameChar">
            <summary>
            重新加载视图查询名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.VersionNameChar">
            <summary>
            URL 资源版本查询名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.QueryXmlNameChar">
            <summary>
            XML查询对象名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.VersionFileName">
            <summary>
            保存当前版本的文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ViewOverId">
            <summary>
            页面初始化默认遮罩层 ID
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.googleFragmentNameSize">
            <summary>
            Google请求#!查询名称字节长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.googleFragmentName">
            <summary>
            Google请求#!查询名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.searchEngineLetterTable">
            <summary>
            搜索引擎首字母查询表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.BufferPool">
            <summary>
            HTTP 头部缓冲区池
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.maxHeaderCount">
            <summary>
            HTTP 头部最大未定义项数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.NameStartIndex">
            <summary>
            HTTP 头部未定义项保存位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.maxQueryCount">
            <summary>
            URI 最大查询参数项数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.QueryStartIndex">
            <summary>
            URI 查询参数保存位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ReceiveBufferSize">
            <summary>
            HTTP 头部缓存去接收数据最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.isKeepAliveDomainServer">
            <summary>
            KeepAlive 是否保持相同的域名服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.ReceiveTimeout">
            <summary>
            HTTP 头部接收超时
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.KeepAliveReceiveTimeout">
            <summary>
            第二次 HTTP 头部接收超时
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Header.methodTypes">
            <summary>
            查询模式类型集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Header.GetMethod(System.Byte*)">
            <summary>
            查询模式字节转枚举
            </summary>
            <param name="method">查询模式</param>
            <returns>查询模式枚举</returns>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderFlag">
            <summary>
            HTTP 头部标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSsl">
            <summary>
            是否安全连接
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsKeepAlive">
            <summary>
            是否保持连接状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsGZip">
            <summary>
            客户端是否支持 GZip 压缩
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetContentType">
            <summary>
            是否设置 HTTP 请求内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetCookie">
            <summary>
            是否设置 Cookie
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetReferer">
            <summary>
            是否设置访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetUserAgent">
            <summary>
            是否设置浏览器参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetRequestEncoding">
            <summary>
            是否设置请求编码
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetIfModifiedSince">
            <summary>
            是否设置客户端文档时间标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetIfNoneMatch">
            <summary>
            是否设置客户端缓存有效标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetXProwardedFor">
            <summary>
            是否设置转发信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.Is100Continue">
            <summary>
            是否 100 Continue 确认
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetBoundary">
            <summary>
            是否设置提交数据分隔符
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetOrigin">
            <summary>
            是否设置访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetIsReferer">
            <summary>
            是否设置来源页是否合法
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsReferer">
            <summary>
            来源页是否合法
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsRange">
            <summary>
            是否存在请求范围
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsFormatRange">
            <summary>
            是否已经格式化请求范围
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsRangeError">
            <summary>
            请求范围是否错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsAjax">
            <summary>
            是否 ajax 请求
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsHash">
            <summary>
            URL中是否包含 #
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetHash">
            <summary>
            是否设置 URL中是否包含 #
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSearchEngine">
            <summary>
            是否设置搜索引擎
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetSearchEngine">
            <summary>
            是否设置搜索引擎
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetQueryJson">
            <summary>
            是否设置查询 Json 字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetQueryXml">
            <summary>
            是否设置查询 XML 字符串
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsReView">
            <summary>
            是否重新加载视图
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsMobileReView">
            <summary>
            是否重新加载视图（忽略主列表）
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsLoadPageCache">
            <summary>
            是否第一次加载页面缓存
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetAjaxCallName">
            <summary>
            是否设置 AJAX 调用函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsSetAjaxCallBackName">
            <summary>
            是否设置 AJAX 回调函数名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.IsVersion">
            <summary>
            是否设置 URL 资源版本查询名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderFlag.All">
            <summary>
            所有标志位
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryParseMethodAttribute">
            <summary>
            默认解析函数
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryParser">
            <summary>
            查询解析器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.header">
            <summary>
            HTTP请求头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.state">
            <summary>
            解析状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.bufferStart">
            <summary>
            缓冲区起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.current">
            <summary>
            当前解析位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.end">
            <summary>
            解析结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.queryIndex">
            <summary>
            当前处理位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.queryEndIndex">
            <summary>
            最后处理位置
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parse``1(AutoCSer.Net.Http.Header,``0@)">
            <summary>
            查询解析
            </summary>
            <typeparam name="valueType">目标类型</typeparam>
            <param name="header">HTTP请求头部</param>
            <param name="value">目标数据</param>
            <returns>解析状态</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.free">
            <summary>
            释放查询解析器
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseHex32(System.UInt32@)">
            <summary>
            解析16进制数字
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseUInt32(System.UInt32)">
            <summary>
            解析10进制数字
            </summary>
            <param name="value">第一位数字</param>
            <returns>数字</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Boolean@)">
            <summary>
            逻辑值解析
            </summary>
            <param name="value">数据</param>
            <returns>解析状态</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Byte@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.SByte@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.UInt16@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Int16@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.UInt32@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Int32@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseHex64">
            <summary>
            解析16进制数字
            </summary>
            <returns>数字</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseUInt64(System.UInt32)">
            <summary>
            解析10进制数字
            </summary>
            <param name="value">第一位数字</param>
            <returns>数字</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.UInt64@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Int64@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.unescapeAscii">
            <summary>
            模拟javascript解码函数unescape
            </summary>
            <returns>unescape解码后的字符串</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Single@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Double@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Decimal@)">
            <summary>
            数字解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.DateTime@)">
            <summary>
            时间解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseHex2">
            <summary>
            解析16进制字符
            </summary>
            <returns>字符</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseHex4">
            <summary>
            解析16进制字符
            </summary>
            <returns>字符</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.Guid@)">
            <summary>
            Guid解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.unescapeUtf8">
            <summary>
            模拟javascript解码函数unescape
            </summary>
            <returns>unescape解码后的字符串</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(System.String@)">
            <summary>
            字符串解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse(AutoCSer.SubString@)">
            <summary>
            字符串解析
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.IsName(System.Byte*,System.Int32@)">
            <summary>
            是否匹配默认顺序名称
            </summary>
            <param name="names"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.IsQuery">
            <summary>
            是否存在未结束的查询
            </summary>
            <returns>是否存在未结束的查询</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.GetName">
            <summary>
            获取当前名称字符
            </summary>
            <returns>当前名称字符,结束返回0</returns>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.enumJsonParser">
            <summary>
            枚举 JSON 解析器
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.parseEnum``1(``0@)">
            <summary>
            枚举类型解析
            </summary>
            <param name="value">目标数据</param>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.parseEnumMethod">
            <summary>
            未知类型解析函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.unknown``1(``0@)">
            <summary>
            未知类型解析
            </summary>
            <param name="value">目标数据</param>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.unknownMethod">
            <summary>
            未知类型解析函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Parse``1(AutoCSer.Net.Http.Header,``0@)">
            <summary>
            查询解析
            </summary>
            <typeparam name="valueType">目标类型</typeparam>
            <param name="header">HTTP请求头部</param>
            <param name="value">目标数据</param>
            <returns>是否解析成功</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.GetParseMemberMethod(System.Type)">
            <summary>
            获取解析函数信息
            </summary>
            <param name="memberType"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.CreateDynamicMethod(System.Type,System.String,System.Type,System.Reflection.Emit.ILGenerator@)">
            <summary>
            创建解析委托函数
            </summary>
            <param name="type"></param>
            <param name="name">成员名称</param>
            <param name="memberType">成员类型</param>
            <param name="generator"></param>
            <returns>解析委托函数</returns>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParser.parseMethods">
            <summary>
            基本类型解析函数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.getParseMethod(System.Type)">
            <summary>
            获取基本类型解析函数
            </summary>
            <param name="type">基本类型</param>
            <returns>解析函数</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.Compile(System.Type[])">
            <summary>
            预编译类型
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParser.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryParseState">
            <summary>
            解析状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.NotBool">
            <summary>
            逻辑值解析错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.NotNumber">
            <summary>
            非数字解析错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.NotHex">
            <summary>
            16进制数字解析错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.NotDateTime">
            <summary>
            时间解析错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.NotGuid">
            <summary>
            Guid解析错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseState.Unknown">
            <summary>
            未知类型解析错误
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryParseStateSearcher">
            <summary>
            名称状态查找器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.state">
            <summary>
            状态集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.charsAscii">
            <summary>
            ASCII字符查找表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.charStart">
            <summary>
            特殊字符串查找表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.tableType">
            <summary>
            查询矩阵单位尺寸类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.#ctor(AutoCSer.Pointer)">
            <summary>
            名称查找器
            </summary>
            <param name="data">数据起始位置</param>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryParseStateSearcher.SearchName(AutoCSer.Net.Http.HeaderQueryParser)">
            <summary>
            获取名称索引
            </summary>
            <param name="parser">查询解析器</param>
            <returns>名称索引,失败返回-1</returns>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryTypeParser`1">
            <summary>
            查询类型解析器
            </summary>
            <typeparam name="valueType">目标类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderQueryTypeParser`1.TryParse">
            <summary>
            解析委托
            </summary>
            <param name="parser">查询解析器</param>
            <param name="value">目标数据</param>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryTypeParser`1.memberParsers">
            <summary>
            成员解析器集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryTypeParser`1.memberSearcher">
            <summary>
            成员名称查找数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderQueryTypeParser`1.memberNames">
            <summary>
            默认顺序成员名称数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.HeaderQueryTypeParser`1.Parse(AutoCSer.Net.Http.HeaderQueryParser,`0@)">
            <summary>
            对象解析
            </summary>
            <param name="parser">查询解析器</param>
            <param name="value">目标数据</param>
        </member>
        <member name="T:AutoCSer.Net.Http.HeaderWebSocketFlag">
            <summary>
            HTTP 头部标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsConnectionUpgrade">
            <summary>
            连接是否升级协议
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsSetSecKey">
            <summary>
            是否设置 WebSocket 确认连接值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsUpgrade">
            <summary>
            升级协议是否支持 WebSocket
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsSetData">
            <summary>
            是否设置 WebSocket 数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsWebSocket">
            <summary>
            是否 WebSocket 连接
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.IsSetOrigin">
            <summary>
            是否设置访问来源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.HeaderWebSocketFlag.All">
            <summary>
            所有标志位
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.MethodType">
            <summary>
            查询模式类别
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.Unknown">
            <summary>
            未知查询模式类别
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.GET">
            <summary>
            请求获取Request-URI所标识的资源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.POST">
            <summary>
            在Request-URI所标识的资源后附加新的数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.HEAD">
            <summary>
            请求获取由Request-URI所标识的资源的响应消息报头
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.PUT">
            <summary>
            请求服务器存储一个资源，并用Request-URI作为其标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.DELETE">
            <summary>
            请求服务器删除Request-URI所标识的资源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.TRACE">
            <summary>
            请求服务器回送收到的请求信息，主要用于测试或诊断
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.CONNECT">
            <summary>
            保留将来使用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.MethodType.OPTIONS">
            <summary>
            请求查询服务器的性能，或者查询与资源相关的选项和需求
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.PostType">
            <summary>
            提交数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.Json">
            <summary>
            JSON数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.FormData">
            <summary>
            表单数据boundary
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.Xml">
            <summary>
            XML数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.PostType.Data">
            <summary>
            未知数据流
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ReceiveType">
            <summary>
            接收数据下一步操作类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ReceiveType.Response">
            <summary>
            忽略数据后输出 HTTP 响应
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ReceiveType.GetForm">
            <summary>
            获取请求表单数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.Response">
            <summary>
            HTTP 响应输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.SubBuffer">
            <summary>
            数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Body">
            <summary>
            输出内容
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBody">
            <summary>
            设置输出数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.freeBody">
            <summary>
            释放数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetCanHeaderSize(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            设置输出数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBody(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            设置输出数据
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBody(AutoCSer.CharStream,AutoCSer.EncodingCache@)">
            <summary>
            设置输出数据
            </summary>
            <param name="charStream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBody(System.String,System.Boolean,AutoCSer.EncodingCache@)">
            <summary>
            设置输出数据
            </summary>
            <param name="value"></param>
            <param name="isAscii"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBody(AutoCSer.UnmanagedStream)">
            <summary>
            设置输出数据
            </summary>
            <param name="bodyStream"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.BodyFile">
            <summary>
            输出内容重定向文件
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetBodyFile(System.IO.FileInfo)">
            <summary>
            输出内容重定向文件
            </summary>
            <param name="file"></param>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.IsFile">
            <summary>
            文件是否有效
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.BodySize">
            <summary>
            输出内容长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Flag">
            <summary>
            HTTP 输出标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.HeaderSize">
            <summary>
            HTTP 预留头部字节数量
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetHeaderSize(System.Int32)">
            <summary>
            设置 HTTP 预留头部字节数量
            </summary>
            <param name="headerSize"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.AccessControlAllowOrigin">
            <summary>
            跨域访问权限
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetAccessControlAllowOrigin(AutoCSer.Net.BufferIndex)">
            <summary>
            设置跨域访问权限
            </summary>
            <param name="index"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Location">
            <summary>
            重定向
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetLocation(System.Byte[],AutoCSer.Net.Http.ResponseState)">
            <summary>
            设置重定向
            </summary>
            <param name="data"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetLocation(System.Byte[],System.Int32,System.Int32,AutoCSer.Net.Http.ResponseState)">
            <summary>
            设置重定向
            </summary>
            <param name="data"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetLocation(AutoCSer.SubArray{System.Byte}@,AutoCSer.Net.Http.ResponseState)">
            <summary>
            设置重定向
            </summary>
            <param name="data"></param>
            <param name="state"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetLocation(AutoCSer.Net.Http.Header,System.String,AutoCSer.Net.Http.ResponseState)">
            <summary>
            设置重定向
            </summary>
            <param name="header"></param>
            <param name="path"></param>
            <param name="state"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Cookie">
            <summary>
            Cookie 集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.GetCookieClear">
            <summary>
            获取 Cookie 并清除数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.GetCookie(System.Byte[])">
            <summary>
            获取 Cookie
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.AppendCookie(AutoCSer.Net.Http.Cookie)">
            <summary>
            添加 Cookie
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.LastModifiedData">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.LastModified">
            <summary>
            设置最后修改时间
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetLastModified(System.Byte[])">
            <summary>
            设置重定向
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.lastModifiedFlag">
            <summary>
            最后修改时间标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.CacheControlData">
            <summary>
            缓存参数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.CacheControl">
            <summary>
            设置缓存参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.TryStaticFileCacheControl">
            <summary>
            当缺少缓存控制参数是设置为默认静态文件缓存控制参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.NoStore200(System.Byte[])">
            <summary>
            设置非缓存参数输出
            </summary>
            <param name="contentType"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.IsCacheControl(System.Byte[])">
            <summary>
            判断缓存参数是否匹配
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.cacheControlFlag">
            <summary>
            缓存参数 HTTP 输出标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.ContentTypeData">
            <summary>
            输出内容类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.ContentType">
            <summary>
            设置输出内容类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetContentType(AutoCSer.Net.Http.ResponseContentType)">
            <summary>
            设置输出内容类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetJsContentType(AutoCSer.WebView.Request)">
            <summary>
            设置 JS 内容类型
            </summary>
            <param name="request">WEB 请求</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetJsContentType(AutoCSer.Net.HttpDomainServer.FileServer)">
            <summary>
            设置 JS 内容类型
            </summary>
            <param name="domainServer">域名服务</param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.contentTypeFlag">
            <summary>
            输出内容类型 HTTP 输出标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.ContentEncoding">
            <summary>
            输出内容压缩编码
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetContentEncoding(System.Byte[])">
            <summary>
            设置输出内容压缩编码
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.ETagData">
            <summary>
            缓存匹配标识
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.ETag">
            <summary>
            设置缓存匹配标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.ContentDispositionData">
            <summary>
            内容描述
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.ContentDisposition">
            <summary>
            设置内容描述
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.State">
            <summary>
            HTTP 响应状态
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Response.ResponseState">
            <summary>
            HTTP 响应状态
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.SetState(AutoCSer.Net.Http.ResponseState)">
            <summary>
            设置 HTTP 响应状态
            </summary>
            <param name="state"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Type">
            <summary>
            HTTP 响应输出类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.Compress(System.Boolean)">
            <param name="isFastestCompressionLevel"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.CancelPool">
            <summary>
            取消使用HTTP响应池
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.Push">
            <summary>
            添加到 HTTP 响应池
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.Get">
            <summary>
            获取HTTP响应
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.Push(AutoCSer.Net.Http.Response@)">
            <summary>
            添加到 HTTP 响应池
            </summary>
            <param name="response">HTTP响应</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.New">
            <summary>
            获取HTTP响应
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.noStoreBytes">
            <summary>
            非缓存参数输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.ZeroAgeBytes">
            <summary>
            缓存过期
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.StaticFileCacheControlSeconds">
            <summary>
            缓存控制参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.StaticFileCacheControl">
            <summary>
            默认静态文件缓存控制参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.GZipEncoding">
            <summary>
            GZIP压缩响应头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.GZipHeaderSize">
            <summary>
            GZIP压缩响应头部字节尺寸
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.Blank">
            <summary>
            空页面输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.NotChanged304">
            <summary>
            资源未修改
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Response.RangeNotSatisfiable416">
            <summary>
            Range 请求无效
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Response.GetCompress(AutoCSer.SubArray{System.Byte}@,AutoCSer.SubArray{System.Byte}@,System.Int32,System.Boolean)">
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.ResponseFlag">
            <summary>
            HTTP 响应输出标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.IsPool">
            <summary>
            是否使用 HTTP 响应池
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.State">
            <summary>
            是否设置了输出状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.Location">
            <summary>
            重定向
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.ContentType">
            <summary>
            输出内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.ContentEncoding">
            <summary>
            输出内容压缩编码
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.ContentDisposition">
            <summary>
            内容描述
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.LastModified">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.CacheControl">
            <summary>
            缓存参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.ETag">
            <summary>
            缓存匹配标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.Cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.AccessControlAllowOrigin">
            <summary>
            跨域访问权限
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.CanHeaderSize">
            <summary>
            是否允许设置 HTTP 预留头部字节数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.HeaderSize">
            <summary>
            是否设置 HTTP 预留头部字节数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseFlag.All">
            <summary>
            所有 HTTP 输出标志位
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ResponseState">
            <summary>
            HTTP 状态类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Unknown">
            <summary>
            未知状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Continue100">
            <summary>
            允许客户端继续发送数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.WebSocket101">
            <summary>
            WebSocket握手
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Ok200">
            <summary>
            客户端请求成功
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.PartialContent206">
            <summary>
            成功处理了Range头的GET请求
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.MovedPermanently301">
            <summary>
            永久重定向
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Found302">
            <summary>
            临时重定向
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.NotChanged304">
            <summary>
            资源未修改
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.BadRequest400">
            <summary>
            客户端请求有语法错误，不能被服务器所理解
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Unauthorized401">
            <summary>
            请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.Forbidden403">
            <summary>
            服务器收到请求，但是拒绝提供服务
            WWW-Authenticate响应报头域必须被包含在401（未授权的）响应消息中，客户端收到401响应消息时候，并发送Authorization报头域请求服务器对其进行验证时，服务端响应报头就包含该报头域。
            eg：WWW-Authenticate:Basic realm="Basic Auth Test!"  可以看出服务器对请求资源采用的是基本验证机制。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.NotFound404">
            <summary>
            请求资源不存在
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.MethodNotAllowed405">
            <summary>
            不允许使用的方法
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.RequestTimeout408">
            <summary>
            Request Timeout
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.RangeNotSatisfiable416">
            <summary>
            Range请求无效
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.ServerError500">
            <summary>
            服务器发生不可预期的错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseState.ServerUnavailable503">
            <summary>
            服务器当前不能处理客户端的请求，一段时间后可能恢复正常
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ResponseStateAttribute">
            <summary>
            HTTP 响应状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseStateAttribute.Text">
            <summary>
            状态输出文本
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseStateAttribute.Number">
            <summary>
            编号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseStateAttribute.IsError">
            <summary>
            是否错误状态类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.ResponseStateAttribute.Write(System.Byte*)">
            <summary>
            写入状态
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:AutoCSer.Net.Http.ResponseType">
            <summary>
            HTTP 响应输出类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseType.ByteArray">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseType.SubByteArray">
            <summary>
            字节子数组
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseType.SubBuffer">
            <summary>
            缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseType.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SearchEngineLetter">
            <summary>
            搜索引擎首字母
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.Unknown">
            <summary>
            未知字符
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.b">
            <summary>
            bingbot
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.D">
            <summary>
            DotBot
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.G">
            <summary>
            Googlebot,GeoHasher
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.i">
            <summary>
            ia_archiver
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.M">
            <summary>
            Mediapartners-Google,MJ12bot
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.m">
            <summary>
            msnbot
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.R">
            <summary>
            R6_CommentReader
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.r">
            <summary>
            renren share slurp
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.S">
            <summary>
            Sogou,SiteBot
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.s">
            <summary>
            spider
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.T">
            <summary>
            Twiceler
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.Y">
            <summary>
            Yandex,YoudaoBot,Yahoo! Slurp
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SearchEngineLetter.Z">
            <summary>
            ZhihuExternalHit
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SendType">
            <summary>
            发送数据下一步操作类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SendType.Next">
            <summary>
            处理下一个请求
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SendType.Body">
            <summary>
            输出内容
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SendType.File">
            <summary>
            输出文件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SendType.GetForm">
            <summary>
            获取请求表单数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SendType.Close">
            <summary>
            关闭套接字
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.Server">
            <summary>
            HTTP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.socket">
            <summary>
            TCP监听服务器端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.RegisterServer">
            <summary>
            HTTP 注册管理服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.DomainCount">
            <summary>
            已绑定域名数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.socketHandle">
            <summary>
            套接字等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.socketHead">
            <summary>
            套接字链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.host">
            <summary>
            TCP 服务端口信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.Certificate">
            <summary>
            SSL证书
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Server.Protocol">
            <summary>
            SSL协议
            </summary>
        </member>
        <member name="P:AutoCSer.Net.Http.Server.IsStart">
            <summary>
            是否启动成功
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.#ctor(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HostPort@,System.Boolean)">
            <summary>
            HTTP服务
            </summary>
            <param name="server">HTTP 注册管理服务</param>
            <param name="host">TCP 服务端口信息</param>
            <param name="isStart">是否启动服务</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.Dispose">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.start">
            <summary>
            启动服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.getSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.OnSocket">
            <summary>
            套接字处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Server.StopListen">
            <summary>
            停止服务监听
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.Socket">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.Header">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.receiveAsyncEventArgs">
            <summary>
            接收数据套接字异步事件对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.sendAsyncEventArgs">
            <summary>
            发送数据套接字异步事件对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.boundaryReceiver">
            <summary>
            HTTP 套接字数据接收器
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.#ctor">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.Start(AutoCSer.Net.Http.Server,System.Net.Sockets.Socket@)">
            <summary>
            开始处理新的请求
            </summary>
            <param name="server">HTTP 服务</param>
            <param name="socket">套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.HeaderError">
            <summary>
            HTTP 头部接收错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.receiveNext">
            <summary>
            接收数据下一个请求数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.ResponseError(AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="state">错误状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.ResponseError(System.Int64,AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="identity">操作标识</param>
            <param name="state">错误状态</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.ResponseErrorIdentity(AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="state">错误状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.Response(System.Int64,AutoCSer.Net.Http.Response@)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="identity">HTTP 操作标识</param>
            <param name="response">HTTP 响应数据</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.ResponseIdentity(AutoCSer.Net.Http.Response@)">
            <summary>
            输出HTTP响应数据
            </summary>
            <param name="response">HTTP响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.response(AutoCSer.Net.Http.Response@)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="response">HTTP 响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.responseHeader">
            <summary>
            HTTP 响应头部输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.responseHeader(AutoCSer.Net.Http.Response@)">
            <summary>
            HTTP 响应头部输出
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            接收数据完成后的回调
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.onReceive">
            <summary>
            数据接收完成后的处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.onSend(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据发送完成后的回调
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.maxSendDepth">
            <summary>
            最大同步发送数据深度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.Socket.sendDepth">
            <summary>
            可同步发送数据深度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.SingleRunTask(System.Int64@)">
            <summary>
            数据发送完成后的任务处理
            </summary>
            <param name="currentTaskTicks"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.onSend">
            <summary>
            数据发送完成后的处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.GetForm(AutoCSer.WebView.Page,AutoCSer.Net.Http.GetFormType)">
            <summary>
            获取请求表单数据
            </summary>
            <param name="page">WEB 页面</param>
            <param name="type">获取请求表单数据回调类型</param>
        </member>
        <member name="M:AutoCSer.Net.Http.Socket.getForm">
            <summary>
            获取请求表单数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketBase">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Identity">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.ResponseSize">
            <summary>
            当前输出 HTTP 响应字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.TaskTicks">
            <summary>
            线程切换检测时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Timeout">
            <summary>
            操作超时时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Server">
            <summary>
            HTTP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.HttpHeader">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.DomainServer">
            <summary>
            域名服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.HttpResponse">
            <summary>
            当前未完成 HTTP 响应输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.SendFileStream">
            <summary>
            当前发送文件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Form">
            <summary>
            HTTP 请求表单
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Buffer">
            <summary>
            数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.BigBuffer">
            <summary>
            临时数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.FormBuffer">
            <summary>
            HTTP 请求表单数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.FormBufferReceiveEndIndex">
            <summary>
            HTTP 请求表单数据结束位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.GetFormPage">
            <summary>
            获取请求表单数据回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Data">
            <summary>
            当前操作数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Flag">
            <summary>
            HTTP 套接字标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.GetFormType">
            <summary>
            获取请求表单数据回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.SendType">
            <summary>
            当前发送数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.ReceiveType">
            <summary>
            当前接收数据类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.IsSsl">
            <summary>
            是否 SSL 链接
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.SendSizeLessCount">
            <summary>
            发送数据量过低次数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.#ctor">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.ResponseError(System.Int64,AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="identity">操作标识</param>
            <param name="state">错误状态</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.ResponseErrorIdentity(AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="state">错误状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.Response(System.Int64,AutoCSer.Net.Http.Response@)">
            <summary>
            输出HTTP响应数据
            </summary>
            <param name="identity">HTTP操作标识</param>
            <param name="response">HTTP响应数据</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.ResponseIdentity(AutoCSer.Net.Http.Response@)">
            <summary>
            输出HTTP响应数据
            </summary>
            <param name="response">HTTP响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.Request">
            <summary>
            开始处理请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.Response(System.Int64,AutoCSer.Net.Http.Response)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="identity">HTTP 操作标识</param>
            <param name="response">HTTP 响应数据</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.ResponseIdentity(AutoCSer.Net.Http.Response)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="response">HTTP 响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.CheckNotChanged304(AutoCSer.Net.Http.Response@)">
            <summary>
            304 检测
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.GetResponseHeaderIndex(AutoCSer.Net.Http.Response,System.Int32,AutoCSer.Net.Http.Cookie@)">
            <summary>
            获取 HTTP 响应头部缓冲区长度
            </summary>
            <param name="response"></param>
            <param name="index"></param>
            <param name="cookie">Cookie</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.CreateResponseHeader(AutoCSer.Net.Http.Response,AutoCSer.Net.Http.Cookie,System.Byte*,System.Int32)">
            <summary>
            创建 HTTP 响应头部
            </summary>
            <param name="response"></param>
            <param name="cookie"></param>
            <param name="write"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.ParseForm(AutoCSer.Net.Http.PostType)">
            <summary>
            FORM表单解析
            </summary>
            <param name="dataToType"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.GetFormText">
            <summary>
            获取表单字符串
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.GetFormText(System.Byte[])">
            <summary>
            获取表单字符串
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.GetForm(AutoCSer.WebView.Page,AutoCSer.Net.Http.GetFormType)">
            <summary>
            获取请求表单数据
            </summary>
            <param name="page">WEB 页面</param>
            <param name="type">获取请求表单数据回调类型</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.OnGetForm">
            <summary>
            获取请求表单数据回调处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.SetTimeout(System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.Free">
            <summary>
            是否缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.GetBuffer(System.Int32)">
            <summary>
            获取数据缓冲区
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.Config">
            <summary>
            HTTP 配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.BufferPool">
            <summary>
            HTTP 头部缓冲区池
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.AutoCSerServer">
            <summary>
            服务器类型(长度不能为0)
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.httpVersionString">
            <summary>
            HTTP服务版本号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.responseServer">
            <summary>
            服务器类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.dateCache">
            <summary>
            最后一次生成的时间字节数组
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.dateCacheSecond">
            <summary>
            最后一次生成的时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.dateCacheLock">
            <summary>
            时间字节数组访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.getDate(System.Byte*)">
            <summary>
            获取当前时间字节数组
            </summary>
            <param name="data">输出数据起始位置</param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.isResponseServer">
            <summary>
            是否输出服务器信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.httpVersionSize">
            <summary>
            HTTP服务版本号数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeHttpVersion(System.Byte*)">
            <summary>
            HTTP服务版本号
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeContentLength(System.Byte*)">
            <summary>
            HTTP响应输出内容长度名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.contentLengthSize">
            <summary>
            HTTP响应输出内容长度名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeRange(System.Byte*)">
            <summary>
            请求范围名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.rangeSize">
            <summary>
            请求范围名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeLocation(System.Byte*)">
            <summary>
            重定向名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.locationSize">
            <summary>
            重定向名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeLastModified(System.Byte*)">
            <summary>
            HTTP响应输出最后修改名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.lastModifiedSize">
            <summary>
            HTTP响应输出最后修改名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeCacheControl(System.Byte*)">
            <summary>
            缓存参数名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.cacheControlSize">
            <summary>
            缓存参数名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeContentType(System.Byte*)">
            <summary>
            内容类型名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.contentTypeSize">
            <summary>
            内容类型名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeContentEncoding(System.Byte*)">
            <summary>
            内容压缩编码名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.contentEncodingSize">
            <summary>
            内容压缩编码名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeETag(System.Byte*)">
            <summary>
            缓存匹配标识名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.eTagSize">
            <summary>
            缓存匹配标识名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeContentDisposition(System.Byte*)">
            <summary>
            内容描述名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.contentDispositionSize">
            <summary>
            内容描述名称数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeAccessControlAllowOrigin(System.Byte*)">
            <summary>
            跨域权限控制
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.accessControlAllowOriginSize">
            <summary>
            跨域权限控制数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeKeepAlive(System.Byte*)">
            <summary>
            HTTP响应输出保持连接
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.keepAliveSize">
            <summary>
            HTTP响应输出保持连接数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase.writeDate(System.Byte*)">
            <summary>
            HTTP响应输出日期名称
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.dateSize">
            <summary>
            HTTP响应输出日期名称数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.isResponseDate">
            <summary>
            是否输出日期
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.continue100">
            <summary>
            100 Continue 确认
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.errorResponseDatas">
            <summary>
            错误输出缓存数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase.searchEngine404Data">
            <summary>
            搜索引擎 404 提示
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketBase`1">
            <summary>
            HTTP 套接字
            </summary>
            <typeparam name="valueType"></typeparam>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.NextTask">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketBase`1.YieldLink">
            <summary>
            链表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.YieldLink.maxCount">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.YieldLink.head">
            <summary>
            链表头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.YieldLink.popLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.YieldLink.count">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase`1.YieldLink.PushNotNull(`0)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase`1.YieldLink.Pop">
            <summary>
            弹出节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase`1.YieldLink.ClearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBase`1.YieldLink.PushLink(`0,`0,System.Int32)">
            <summary>
            添加链表
            </summary>
            <param name="value">链表头部</param>
            <param name="end">链表尾部</param>
            <param name="count">数据数量</param>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBase`1.Pool">
            <summary>
            链表节点池
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketBoundaryReceiver">
            <summary>
            HTTP 套接字数据接收器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketBoundaryReceiver.socketAsyncEventArgs">
            <summary>
            异步套接字操作
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.#ctor(AutoCSer.Net.Http.Socket)">
            <summary>
            HTTP 套接字数据接收器
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.error">
            <summary>
            数据接收错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.Receive">
            <summary>
            开始接收表单数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.receive">
            <summary>
            开始接收表单数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            接收表单数据处理
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.onReceive">
            <summary>
            接收表单数据处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.onFirstBoundary">
            <summary>
            接收第一个分割符
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.checkFirstBoundary">
            <summary>
            检测第一个分隔符
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.onEnter">
            <summary>
            查找换行处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.receiveEnter">
            <summary>
            继续接收换行
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.checkEnter">
            <summary>
            查找换行
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.parseName">
            <summary>
            解析表单名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.onValue">
            <summary>
            接收表单值处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.receiveValue">
            <summary>
            继续接收数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.checkValue">
            <summary>
            接收表单值处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.boundaryReceiverFinally">
            <summary>
            表单数据接收完成
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.SingleRunLinkTask">
            <summary>
            执行任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.writeFile">
            <summary>
            写文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.getFile">
            <summary>
            获取文件表单值
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketBoundaryReceiver.getFileFinally">
            <summary>
            获取文件表单值
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketFlag">
            <summary>
            HTTP 套接字标志位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketFlag.IsLoadForm">
            <summary>
            是否已经加载表单数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketFlag.BigBuffer">
            <summary>
            是否申请临时数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketFlag.GetForm">
            <summary>
            是否获取请求表单数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketFlag.All">
            <summary>
            所有标志位
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketHeader">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketHeader.httpSocket">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketHeader.receiveAsyncEventArgs">
            <summary>
            接收数据套接字异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.#ctor(AutoCSer.Net.Http.Socket)">
            <summary>
            HTTP 头部
            </summary>
            <param name="socket">HTTP 套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.Receive">
            <summary>
            开始接收数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.ReceiveNext">
            <summary>
            接收数据下一个请求数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            接收数据完成后的回调
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.onReceive">
            <summary>
            接收数据完成后的处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketHeader.searchEnd">
            <summary>
            搜索头部结束位置
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SocketLink">
            <summary>
            套接字链表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SocketLink.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketLink.Cancel">
            <summary>
            释放套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketLink.Start(AutoCSer.Net.Http.SslServer)">
            <summary>
            创建 HTTP 服务端套接字
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SocketLink.Start(AutoCSer.Net.Http.Server)">
            <summary>
            创建 HTTP 服务端套接字
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SslBoundaryReceiver">
            <summary>
            HTTP 套接字数据接收器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslBoundaryReceiver.receiveCallback">
            <summary>
            接受数据处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.#ctor(AutoCSer.Net.Http.SslSocket)">
            <summary>
            HTTP 套接字数据接收器
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.error">
            <summary>
            数据接收错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.Receive">
            <summary>
            开始接收表单数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.receive">
            <summary>
            开始接收表单数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.onReceive(System.IAsyncResult)">
            <summary>
            接收表单数据处理
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.onReceive">
            <summary>
            接收表单数据处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.onFirstBoundary">
            <summary>
            接收第一个分割符
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.checkFirstBoundary">
            <summary>
            检测第一个分隔符
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.onEnter">
            <summary>
            查找换行处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.receiveEnter">
            <summary>
            继续接收换行
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.checkEnter">
            <summary>
            查找换行
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.parseName">
            <summary>
            解析表单名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.onValue">
            <summary>
            接收表单值处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.receiveValue">
            <summary>
            继续接收数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.checkValue">
            <summary>
            接收表单值处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.boundaryReceiverFinally">
            <summary>
            表单数据接收完成
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.SingleRunLinkTask">
            <summary>
            执行任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.writeFile">
            <summary>
            写文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.getFile">
            <summary>
            获取文件表单值
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslBoundaryReceiver.getFileFinally">
            <summary>
            获取文件表单值
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SslHeader">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslHeader.httpSocket">
            <summary>
            HTTP 套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslHeader.receiveCallback">
            <summary>
            接受头部换行数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.#ctor(AutoCSer.Net.Http.SslSocket)">
            <summary>
            HTTP 头部
            </summary>
            <param name="socket">HTTP 套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.Receive">
            <summary>
            开始接收数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.ReceiveNext">
            <summary>
            接收数据下一个请求数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.onReceive(System.IAsyncResult)">
            <summary>
            接受头部换行数据
            </summary>
            <param name="result">异步操作状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslHeader.searchEnd">
            <summary>
            搜索头部结束位置
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.SslServer">
            <summary>
            基于安全连接的 HTTP 服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslServer.#ctor(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HostPort@)">
            <summary>
            基于安全连接的 HTTP 服务
            </summary>
            <param name="server">HTTP 注册管理服务</param>
            <param name="host">TCP服务端口信息</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslServer.OnSocket">
            <summary>
            套接字处理
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.SslSocket">
            <summary>
            HTTP 套接字安全流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.Header">
            <summary>
            HTTP 头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.SslStream">
            <summary>
            安全网络流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.networkStream">
            <summary>
            网络流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.authenticateCallback">
            <summary>
            身份验证完成处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.sendCallback">
            <summary>
            发送数据处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.receiveCallback">
            <summary>
            接受数据处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.SslSocket.boundaryReceiver">
            <summary>
            HTTP 套接字数据接收器
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.#ctor">
            <summary>
            HTTP 套接字安全流
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.Start(AutoCSer.Net.Http.Server,System.Net.Sockets.Socket@)">
            <summary>
            开始处理新的请求
            </summary>
            <param name="server">HTTP 服务</param>
            <param name="socket">套接字</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.onAuthenticate(System.IAsyncResult)">
            <summary>
            身份验证完成处理
            </summary>
            <param name="result">异步操作状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.HeaderError">
            <summary>
            HTTP 头部接收错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.receiveNext">
            <summary>
            接收数据下一个请求数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.ResponseError(AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="state">错误状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.ResponseError(System.Int64,AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="identity">操作标识</param>
            <param name="state">错误状态</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.ResponseErrorIdentity(AutoCSer.Net.Http.ResponseState)">
            <summary>
            输出错误状态
            </summary>
            <param name="state">错误状态</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.Response(System.Int64,AutoCSer.Net.Http.Response@)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="identity">HTTP 操作标识</param>
            <param name="response">HTTP 响应数据</param>
            <returns>是否匹配会话标识</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.ResponseIdentity(AutoCSer.Net.Http.Response@)">
            <summary>
            输出HTTP响应数据
            </summary>
            <param name="response">HTTP响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.response(AutoCSer.Net.Http.Response@)">
            <summary>
            输出 HTTP 响应数据
            </summary>
            <param name="response">HTTP 响应数据</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.responseHeader">
            <summary>
            HTTP 响应头部输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.responseHeader(AutoCSer.Net.Http.Response@)">
            <summary>
            HTTP 响应头部输出
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.onReceive(System.IAsyncResult)">
            <summary>
            接收数据完成后的回调
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.onSend(System.IAsyncResult)">
            <summary>
            数据发送完成后的回调
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.GetForm(AutoCSer.WebView.Page,AutoCSer.Net.Http.GetFormType)">
            <summary>
            获取请求表单数据
            </summary>
            <param name="page">WEB 页面</param>
            <param name="type">获取请求表单数据回调类型</param>
        </member>
        <member name="M:AutoCSer.Net.Http.SslSocket.getForm">
            <summary>
            获取请求表单数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.Http.TopDomain">
            <summary>
            顶级域名唯一哈希
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.TopDomain.Name">
            <summary>
            顶级域名
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.TopDomain.op_Implicit(System.String)~AutoCSer.Net.Http.TopDomain">
            <summary>
            隐式转换
            </summary>
            <param name="name">顶级域名</param>
            <returns>顶级域名唯一哈希</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.TopDomain.op_Implicit(AutoCSer.SubArray{System.Byte})~AutoCSer.Net.Http.TopDomain">
            <summary>
            隐式转换
            </summary>
            <param name="name">顶级域名</param>
            <returns>顶级域名唯一哈希</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.TopDomain.GetHashCode">
            <summary>
            获取哈希值
            </summary>
            <returns>哈希值</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.TopDomain.Equals(AutoCSer.Net.Http.TopDomain)">
            <summary>
            判断是否相等
            </summary>
            <param name="other">待匹配数据</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:AutoCSer.Net.Http.TopDomain.Equals(System.Object)">
            <summary>
            判断是否相等
            </summary>
            <param name="obj">待匹配数据</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:AutoCSer.Net.Http.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.UnionType.Value">
            <summary>
            回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.UnionType.Config">
            <summary>
            HTTP 配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.UnionType.Server">
            <summary>
            HTTP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.UnionType.SslServer">
            <summary>
            基于安全连接的 HTTP 服务
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.ResponseContentType">
            <summary>
            输出内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Html">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Js">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Mp3">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Mp4">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Rmvb">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Doc">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Woff">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Gif">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Swf">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Pdf">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Otf">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Jpeg">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Jpg">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Png">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Mpg">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Svg">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Avi">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Apk">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Xml">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Rm">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Ico">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Zip">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Bmp">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Rar">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Cur">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Css">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Xls">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Txt">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Eot">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Wav">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Wmv">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Docx">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType.Xlsx">
            <summary>
            
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.ResponseContentType._7z">
            <summary>
            
            </summary>
        </member>
        <member name="T:AutoCSer.Net.Http.OnSendTask">
            <summary>
            HTTP 套接字数据发送完成后的任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.OnSendTask.#ctor(System.Int64)">
            <summary>
            HTTP 套接字数据发送完成后的任务处理
            </summary>
            <param name="taskTicks">线程切换超时时钟周期</param>
        </member>
        <member name="M:AutoCSer.Net.Http.OnSendTask.Add(AutoCSer.Net.Http.Socket)">
            <summary>
            添加任务
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.Http.OnSendTask.run">
            <summary>
            HTTP 套接字数据发送完成后的任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.OnSendTask.Task">
            <summary>
            HTTP 套接字数据发送完成后的任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.Http.OnSendTask.tasks">
            <summary>
            HTTP 套接字数据发送完成后的任务处理集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.Http.OnSendTask.check">
            <summary>
            线程切换检测
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.FileCache">
            <summary>
            文件缓存
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.HttpHeaderSize">
            <summary>
            HTTP头部预留字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.data">
            <summary>
            文件数据
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileCache.Data">
            <summary>
            文件数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.gZipData">
            <summary>
            文件压缩数据
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileCache.GZipData">
            <summary>
            文件数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.dataLock">
            <summary>
            数据加载访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.LastModified">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.ContentType">
            <summary>
            HTTP响应输出内容类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.response">
            <summary>
            文件HTTP响应输出
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileCache.Response">
            <summary>
            文件HTTP响应输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.gZipResponse">
            <summary>
            文件HTTP响应输出
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileCache.GZipResponse">
            <summary>
            文件HTTP响应输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.Size">
            <summary>
            文件数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCache.IsData">
            <summary>
            是否已经获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCache.#ctor">
            <summary>
            文件缓存
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCache.PulseAll">
            <summary>
            数据加载完毕
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCache.wait">
            <summary>
            等待数据加载
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCache.Set(AutoCSer.SubArray{System.Byte}@,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            文件缓存
            </summary>
            <param name="data">文件数据</param>
            <param name="contentType">HTTP响应输出内容类型</param>
            <param name="cacheControl">缓存控制参数</param>
            <param name="isGZip">是否压缩</param>
            <returns>文件数据字节数</returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.FileCacheKey">
            <summary>
            文件缓存关键字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheKey.path">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheKey.pathIdentity">
            <summary>
            路径标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheKey.HashCode">
            <summary>
            HASH 值
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheKey.#ctor(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            文件缓存关键字
            </summary>
            <param name="pathIdentity"></param>
            <param name="path"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheKey.Equals(AutoCSer.Net.HttpDomainServer.FileCacheKey)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheKey.GetHashCode">
            <summary>
            获取 HASH 值
            </summary>
            <returns>HASH 值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheKey.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheKey.CopyPath">
            <summary>
            复制文件缓存关键字
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.FileCacheQueue">
            <summary>
            文件缓存队列
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.freeCacheSize">
            <summary>
            当前可缓存字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.files">
            <summary>
            文件缓存队列
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.fileLock">
            <summary>
            文件缓存队列访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.remove(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            删除文件缓存
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.get(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            获取文件缓存
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.get(AutoCSer.Net.HttpDomainServer.FileCacheKey@,AutoCSer.Net.HttpDomainServer.FileCache@,System.Boolean)">
            <summary>
            获取文件缓存，失败时创建缓存对象
            </summary>
            <param name="path"></param>
            <param name="fileCache"></param>
            <param name="isCopyPath">是否复制请求路径</param>
            <returns>是否新的文件缓存数据</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.removeOnly(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            删除新建的缓存
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.set(AutoCSer.Net.HttpDomainServer.FileCacheKey@,AutoCSer.Net.HttpDomainServer.FileCache,System.Int32)">
            <summary>
            设置文件缓存
            </summary>
            <param name="path"></param>
            <param name="fileCache"></param>
            <param name="fileSize"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.Clear">
            <summary>
            清除文件缓存
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.maxCacheSize">
            <summary>
            文件缓存最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.MaxFileSize">
            <summary>
            最大缓存文件节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.IsFileCacheHeader">
            <summary>
            文件缓存是否预留 HTTP 头部空间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileCacheQueue.queues">
            <summary>
            文件缓存队列
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.Remove(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            删除文件缓存
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.Get(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            获取文件缓存
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.Get(AutoCSer.Net.HttpDomainServer.FileCacheKey@,AutoCSer.Net.HttpDomainServer.FileCache@,System.Boolean)">
            <summary>
            获取文件缓存，失败时创建缓存对象
            </summary>
            <param name="path"></param>
            <param name="fileCache"></param>
            <param name="isCopyPath">是否复制请求路径</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.RemoveOnly(AutoCSer.Net.HttpDomainServer.FileCacheKey@)">
            <summary>
            删除新建的缓存
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.Set(AutoCSer.Net.HttpDomainServer.FileCacheKey@,AutoCSer.Net.HttpDomainServer.FileCache,System.Int32)">
            <summary>
            设置文件缓存
            </summary>
            <param name="path"></param>
            <param name="fileCache"></param>
            <param name="fileSize"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileCacheQueue.clearCache(System.Int32)">
            <summary>
            清除缓存数据
            </summary>
            <param name="count">保留缓存数据数量</param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.FileServer">
            <summary>
            文件服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileServer.ResponseEncoding">
            <summary>
            输出编码
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileServer.HtmlContentType">
            <summary>
            默认内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileServer.JsContentType">
            <summary>
            默认内容类型头部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileServer.pathIdentity">
            <summary>
            路径标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.FileServer.cacheControl">
            <summary>
            缓存控制参数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileServer.path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.FileServer.clientCacheSeconds">
            <summary>
            客户端缓存时间，默认为0 (单位:秒)
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.#ctor">
            <summary>
            文件服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.Start(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HttpRegister.Domain[],System.Action)">
            <summary>
            启动HTTP服务
            </summary>
            <param name="registerServer">HTTP 注册管理服务</param>
            <param name="domains">域名信息集合</param>
            <param name="onStop">停止服务处理</param>
            <returns>是否启动成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.dispose">
            <summary>
            释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.Request(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求处理[TRY]
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.file(AutoCSer.Net.Http.Header)">
            <summary>
            HTTP文件请求处理
            </summary>
            <param name="header">请求头部信息</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.file(AutoCSer.Net.Http.Header,AutoCSer.Net.Http.Response@)">
            <summary>
            HTTP文件请求处理
            </summary>
            <param name="header">请求头部</param>
            <param name="response">HTTP响应输出</param>
            <returns>文件缓存</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.file(AutoCSer.Net.Http.Header,AutoCSer.Net.HttpDomainServer.FileCache,AutoCSer.Net.Http.Response@)">
            <summary>
            HTTP文件请求处理
            </summary>
            <param name="header">请求头部信息</param>
            <param name="fileCache">文件输出信息</param>
            <param name="response">HTTP响应</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.isOrigin(AutoCSer.SubArray{System.Byte},System.Boolean)">
            <summary>
            是否支持访问控制权限
            </summary>
            <param name="origin"></param>
            <param name="isSsl">是否 SSL 链接</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.isStaticFileCacheControl(AutoCSer.SubArray{System.Byte})">
            <summary>
            是否采用静态文件缓存控制策略
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.createErrorResponse">
            <summary>
            创建错误输出数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.isFile(System.Byte*,System.Byte[]@,System.Boolean@)">
            <summary>
            是否允许文件扩展名
            </summary>
            <param name="pathEnd">文件路径</param>
            <param name="contentType">文件类型</param>
            <param name="isCompress">是否需要压缩</param>
            <returns>是否允许文件扩展名</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.readCacheFile(AutoCSer.SubString)">
            <summary>
            读取缓存文件内容
            </summary>
            <param name="extensionName">文件扩展名</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.file(System.Byte[],AutoCSer.SubArray{System.Byte},AutoCSer.Net.Http.Response@,System.Boolean)">
            <summary>
            HTTP文件请求处理
            </summary>
            <param name="path">请求路径</param>
            <param name="ifModifiedSince">文件修改时间</param>
            <param name="response">HTTP响应输出</param>
            <param name="isCopyPath">是否复制请求路径</param>
            <returns>文件缓存</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.getExtensionNameStart(System.Byte*)">
            <summary>
            获取扩展名起始位置
            </summary>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.FileServer.ReadCacheFile(System.String)">
            <summary>
            读取缓存文件内容
            </summary>
            <param name="fileName">文件名称</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.LocationServer">
            <summary>
            重定向服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.LocationServer.locationDomain">
            <summary>
            重定向域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.LocationServer.sslLocationDomain">
            <summary>
            SSL重定向域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.LocationServer.locationState">
            <summary>
            HTTP 状态类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.LocationServer.is302">
            <summary>
            是否临时重定向
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.LocationServer.Start(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HttpRegister.Domain[],System.Action)">
            <summary>
            启动HTTP服务
            </summary>
            <param name="registerServer">HTTP 注册管理服务</param>
            <param name="domains">域名信息集合</param>
            <param name="onStop">停止服务处理</param>
            <returns>是否启动成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.LocationServer.getLocationDomain">
            <summary>
            获取包含协议的重定向域名,比如 http://www.AutoCSer.com
            </summary>
            <returns>获取包含协议的重定向域名</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.LocationServer.getSslLocationDomain">
            <summary>
            获取包含协议的重定向域名,比如 https://www.AutoCSer.com
            </summary>
            <returns>获取包含协议的重定向域名</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.LocationServer.Request(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求处理[TRY]
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.LocationServer.getDomainData(System.String)">
            <summary>
            获取域名数据
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.PathCacheWatcher">
            <summary>
            指定路径下的文件缓存监视
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.fileWatcherBuffer">
            <summary>
            文件监视器缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.fileWatcherLock">
            <summary>
            文件监视访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.fileWatcher">
            <summary>
            文件监视器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.path">
            <summary>
            监视路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.identity">
            <summary>
            路径标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.count">
            <summary>
            引用次数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.#ctor(System.String)">
            <summary>
            指定路径下的文件缓存监视
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.fileChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            文件更新事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.free">
            <summary>
            释放文件监视器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.pathIdentity">
            <summary>
            路径标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.caches">
            <summary>
            缓存集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.cacheLock">
            <summary>
            缓存集合访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.Add(System.String)">
            <summary>
            添加监视路径
            </summary>
            <param name="path"></param>
            <returns>路径标识</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.PathCacheWatcher.Free(System.String)">
            <summary>
            释放监视路径
            </summary>
            <param name="path"></param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Server">
            <summary>
            域名服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.WebConfig">
            <summary>
            网站生成配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.WebConfigIsFastestCompressionLevel">
            <summary>
            GZip 是否启用快速压缩
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.RegisterServer">
            <summary>
            HTTP 注册管理服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.domains">
            <summary>
            域名信息集合
            </summary>
        </member>
        <member name="E:AutoCSer.Net.HttpDomainServer.Server.onStop">
            <summary>
            停止服务处理
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.Server.Session">
            <summary>
            获取Session
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.errorResponses">
            <summary>
            错误输出数据 + gzip 错误输出数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.LoadCheckPath">
            <summary>
            加载检测路径
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.Server.WorkPath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.isStart">
            <summary>
            是否启动服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Server.isDisposed">
            <summary>
            是否停止服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.#ctor">
            <summary>
            域名服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.getWebConfig">
            <summary>
            网站生成配置
            </summary>
            <returns>网站生成配置</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.Start(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HttpRegister.Domain[],System.Action)">
            <summary>
            启动HTTP服务
            </summary>
            <param name="registerServer">HTTP 注册管理服务</param>
            <param name="domains">域名信息集合</param>
            <param name="onStop">停止服务处理</param>
            <returns>是否启动成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.stopListen">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.StopListen">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.dispose">
            <summary>
            释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.Request(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求处理[TRY]
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.WebSocketRequest(AutoCSer.Net.Http.SocketBase)">
            <summary>
            WebSocket请求处理
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.GetErrorResponseData(AutoCSer.Net.Http.ResponseState,AutoCSer.Net.Http.HeaderFlag)">
            <summary>
            获取错误数据
            </summary>
            <param name="state">错误状态</param>
            <param name="gzipFlag">是否支持 GZip 压缩</param>
            <returns>错误数据</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Server.CompileQueryParse(System.Type[],System.Type[])">
            <summary>
            查询参数反序列化预编译
            </summary>
            <param name="jsonTypes"></param>
            <param name="queryTypes"></param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.ISession">
            <summary>
            会话标识接口
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ISession.Remove(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            删除Session
            </summary>
            <param name="sessionId">Session名称</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ISession.Set(AutoCSer.Net.HttpDomainServer.SessionId@,System.Object)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session是否被更新</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ISession.Get(AutoCSer.Net.HttpDomainServer.SessionId@,System.Object)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="nullValue">失败返回值</param>
            <returns>Session值</returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.ISession`1">
            <summary>
            会话标识接口
            </summary>
            <typeparam name="valueType">数据类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ISession`1.Set(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session是否被更新</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ISession`1.Get(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="nullValue">失败返回值</param>
            <returns>Session值</returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.ServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.timeoutTicks">
            <summary>
            超时时钟周期
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.refreshSeconds">
            <summary>
            超时刷新秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.isDisposed">
            <summary>
            是否释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.#ctor(System.Int32,System.Int32)">
            <summary>
            会话标识
            </summary>
            <param name="timeoutMinutes">超时分钟数</param>
            <param name="refreshMinutes">超时刷新分钟数</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.isTimer">
            <summary>
            是否已经触发定时任务
            </summary> 
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.OnTimer">
            <summary>
            定时器触发日志写入
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.RefreshTimeout">
            <summary>
            超时检测
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.DoubleLinkNext">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.DoubleLinkPrevious">
            <summary>
            上一个节点
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.SessionEnd">
            <summary>
            链表尾部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session.sessionLinkLock">
            <summary>
            链表访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.PushNotNull(AutoCSer.Net.HttpDomainServer.Session)">
            <summary>
            添加节点
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.PopNotNull(AutoCSer.Net.HttpDomainServer.Session)">
            <summary>
            弹出节点
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session.freeNotEnd">
            <summary>
            弹出节点
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session`1">
            <summary>
            会话标识
            </summary>
            <typeparam name="valueType">数据类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session`1.Value">
            <summary>
            Session值
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Value.Timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Value.Low">
            <summary>
            随机数低64位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Value.High">
            <summary>
            随机数高64位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Value.SessionValue">
            <summary>
            Session值集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Value.Identity">
            <summary>
            索引标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.Check(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            检测会话是否有效
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.Set(AutoCSer.Net.HttpDomainServer.SessionId@,System.DateTime,`0)">
            <summary>
            设置会话信息
            </summary>
            <param name="sessionId"></param>
            <param name="timeout"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.New(AutoCSer.Net.HttpDomainServer.SessionId@,System.DateTime,`0)">
            <summary>
            新建会话信息
            </summary>
            <param name="sessionId"></param>
            <param name="timeout"></param>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.Get(AutoCSer.Net.HttpDomainServer.SessionId@,System.DateTime,`0@)">
            <summary>
            获取会话信息
            </summary>
            <param name="sessionId"></param>
            <param name="timeout"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.Remove(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            删除会话信息
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Value.CheckTimeout(System.DateTime)">
            <summary>
            超时检测
            </summary>
            <param name="now"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session`1.Pool">
            <summary>
            Session值索引池
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Pool.IndexPool">
            <summary>
            Session值索引池
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.Pool.timeoutTicks">
            <summary>
            超时时钟周期
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.Set(System.Int64)">
            <summary>
            设置Session值索引池
            </summary>
            <param name="timeoutTicks"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.Refresh">
            <summary>
            超时检测
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.Set(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.New(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session是否被更新</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.TryGet(AutoCSer.Net.HttpDomainServer.SessionId@,`0@)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">返回值</param>
            <returns>是否存在返回值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Pool.Remove(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            删除Session
            </summary>
            <param name="sessionId">Session名称</param>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.Session`1.valuePool">
            <summary>
            Session 值索引池
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.#ctor">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.RefreshTimeout">
            <summary>
            超时检测
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Set(AutoCSer.Net.HttpDomainServer.SessionId@,System.Object)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session是否被更新</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Set(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session是否被更新</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Set(AutoCSer.Net.HttpDomainServer.SessionId,`0)">
            <summary>
            设置Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">值</param>
            <returns>Session名称</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Get(AutoCSer.Net.HttpDomainServer.SessionId@,System.Object)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="nullValue">失败返回值</param>
            <returns>Session值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Get(AutoCSer.Net.HttpDomainServer.SessionId@,`0)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="nullValue">失败返回值</param>
            <returns>Session值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.TryGet(AutoCSer.Net.HttpDomainServer.SessionId,`0@)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">返回值</param>
            <returns>是否存在返回值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Get(AutoCSer.Net.HttpDomainServer.SessionId)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <returns>返回值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Get(AutoCSer.Net.HttpDomainServer.SessionId,`0)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="nullValue">默认空值</param>
            <returns>返回值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.TryGet(AutoCSer.Net.HttpDomainServer.SessionId@,`0@)">
            <summary>
            获取Session值
            </summary>
            <param name="sessionId">Session名称</param>
            <param name="value">返回值</param>
            <returns>是否存在返回值</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Remove(AutoCSer.Net.HttpDomainServer.SessionId)">
            <summary>
            删除Session
            </summary>
            <param name="sessionId">Session名称</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.Remove(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            删除Session
            </summary>
            <param name="sessionId">Session名称</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1._identityCommandNames_">
            <summary>
            命令序号记忆数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session`1.TcpInternalServer">
            <summary>
            HttpSession TCP服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.TcpInternalServer.#ctor(AutoCSer.Net.TcpInternalServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Net.HttpDomainServer.Session{`0},System.Action{AutoCSer.SubArray{System.Byte}},AutoCSer.Log.ILog)">
            <summary>
            HttpSession TCP调用服务端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="value">TCP 服务目标对象</param>
            <param name="log">日志接口</param>
            <param name="onCustomData">自定义数据包处理</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.TcpInternalServer.DoCommand(System.Int32,AutoCSer.Net.TcpInternalServer.ServerSocketSender,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理
            </summary>
            <param name="index">命令序号</param>
            <param name="sender">TCP 内部服务套接字数据发送</param>
            <param name="data">命令数据</param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.Session`1.TcpInternalClient">
            <summary>
            TCP客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.Session`1.TcpInternalClient.#ctor(AutoCSer.Net.TcpInternalServer.ServerAttribute,System.Func{AutoCSer.Net.HttpDomainServer.Session{`0}.TcpInternalClient,AutoCSer.Net.TcpInternalServer.ClientSocketSender,System.Boolean},System.Action{AutoCSer.SubArray{System.Byte}},AutoCSer.Log.ILog)">
            <summary>
            TCP调用客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="onCustomData">自定义数据包处理</param>
            <param name="log">日志接口</param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.SessionId">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit0">
            <summary>
            低32位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit32">
            <summary>
            32-64位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit64">
            <summary>
            64-96位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit96">
            <summary>
            96-128位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit128">
            <summary>
            128-160位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit160">
            <summary>
            160-192位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit192">
            <summary>
            192-224位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.bit224">
            <summary>
            高32位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.Ticks">
            <summary>
            服务器时间戳
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.Identity">
            <summary>
            服务器自增标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.IndexIdentity">
            <summary>
            索引标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.Low">
            <summary>
            随机数低64位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.High">
            <summary>
            随机数高64位
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.SessionId.CookieValue">
            <summary>
            空值判断参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.Equals(AutoCSer.Net.HttpDomainServer.SessionId)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.Equals(AutoCSer.Net.HttpDomainServer.SessionId@)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns>相等返回0</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.NewNoIndex">
            <summary>
            重置会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.Null">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.FromCookie(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            Cookie 解析
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.ToCookie">
            <summary>
            转换成16进制字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.serialize(AutoCSer.BinarySerialize.Serializer)">
            <summary>
            对象序列化
            </summary>
            <param name="serializer">对象序列化器</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.deSerialize(AutoCSer.BinarySerialize.DeSerializer)">
            <summary>
            反序列化
            </summary>
            <param name="deSerializer">对象反序列化器</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.New">
            <summary>
            重置会话标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.CheckHex(System.String)">
            <summary>
            判断是否匹配16进制字符串
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.SessionId.ToHex">
            <summary>
            转换成16进制字符串
            </summary>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.highRandom">
            <summary>
            随机数高位
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.SessionId.identityRandom">
            <summary>
            随机数自增标识
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.StaticFileServer">
            <summary>
            静态文件服务
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.StaticFileServer.clientCacheSeconds">
            <summary>
            客户端缓存时间(单位:秒)
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.StaticFileServer.Request(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求处理[TRY]
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.ViewServer">
            <summary>
            WEB 视图服务
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.rewrites">
            <summary>
            WEB视图URL重写路径集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.rewritePaths">
            <summary>
            WEB视图URL重写路径集合
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.views">
            <summary>
            WEB视图页面索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.viewIndexs">
            <summary>
            WEB 视图页面索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.viewSearcher">
            <summary>
            WEB 视图页面搜索器
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.calls">
            <summary>
            WEB调用处理索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.callIndexs">
            <summary>
            WEB 调用处理索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.callSearcher">
            <summary>
            WEB 调用处理搜索器
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.viewRewrites">
            <summary>
            WEB视图URL重写索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.rewriteIndexs">
            <summary>
            WEB 视图 URL 重写索引集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.rewriteSearcher">
            <summary>
            WEB 视图 URL 重写搜索器
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.webSockets">
            <summary>
            WebSocket调用处理集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.webSocketIndexs">
            <summary>
            WebSocket 调用处理委托集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.webSocketSearcher">
            <summary>
            WebSocket 调用处理搜索器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.NullAjaxResponse">
            <summary>
            空 AJAX 响应输出
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.NullAjaxResponseStaticFile">
            <summary>
            空 AJAX 响应输出（静态资源处理）
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.StaticFileVersion">
            <summary>
            静态资源版本字符串
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpDomainServer.ViewServer.webClientLog">
            <summary>
            客户端日志处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer.WebClientLog">
            <summary>
            客户端日志处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.#ctor">
            <summary>
            WEB 视图服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.Start(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HttpRegister.Domain[],System.Action)">
            <summary>
            启动HTTP服务
            </summary>
            <param name="registerServer">HTTP 注册管理服务</param>
            <param name="domains">域名信息集合</param>
            <param name="onStop">停止服务处理</param>
            <returns>是否启动成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.dispose">
            <summary>
            释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.Request(AutoCSer.Net.Http.SocketBase)">
            <summary>
            HTTP请求处理[TRY]
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.request(System.Int32,AutoCSer.Net.Http.SocketBase)">
            <summary>
            视图页面处理
            </summary>
            <param name="viewIndex"></param>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.call(System.Int32,AutoCSer.Net.Http.SocketBase)">
            <summary>
            WEB 调用处理
            </summary>
            <param name="callIndex"></param>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.beforeFile(AutoCSer.Net.Http.SocketBase)">
            <summary>
            文件服务处理之前
            </summary>
            <param name="socket"></param>
            <returns>是否需要继续提交给文件服务处理</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.GetViewRewrite(AutoCSer.SubArray{System.Byte})">
            <summary>
            获取WEB视图URL重写路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.WebSocketRequest(AutoCSer.Net.Http.SocketBase)">
            <summary>
            WebSocket请求处理
            </summary>
            <param name="socket">HTTP套接字</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.callWebSocket(System.Int32,AutoCSer.Net.Http.SocketBase)">
            <summary>
            webSocket调用处理
            </summary>
            <param name="callIndex"></param>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.loadPage``1(AutoCSer.Net.Http.SocketBase,``0)">
            <summary>
            加载页面视图[TRY]
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="view">WEB视图接口</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.setPage(AutoCSer.WebView.ViewBase,System.Boolean,System.Boolean)">
            <summary>
            加载页面视图[TRY]
            </summary>
            <param name="view">WEB视图接口</param>
            <param name="isAsynchronous">是否异步</param>
            <param name="isAwaitMethod">是否存在 await 函数</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.loadPage(AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.View,System.Boolean,System.Boolean)">
            <summary>
            加载页面视图[TRY]
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="view">WEB视图接口</param>
            <param name="isAsynchronous">是否异步</param>
            <param name="isAwaitMethod">是否存在 await 函数</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.loadPage(AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.View)">
            <summary>
            加载页面视图[TRY]
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="view">WEB视图接口</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.LoadAjax``1(AutoCSer.Net.Http.SocketBase,``0)">
            <summary>
            加载页面视图
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="view">WEB视图接口</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.LoadAjax(AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.View)">
            <summary>
            加载页面视图
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="view">WEB视图接口</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.load``1(AutoCSer.Net.Http.SocketBase,``0,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            加载 HTTP 调用
            </summary>
            <typeparam name="callType"></typeparam>
            <param name="socket">HTTP套接字接口</param>
            <param name="call">HTTP 调用</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.load(AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.Call,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            加载web调用
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="call">web调用</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.loadAsynchronous``1(AutoCSer.Net.Http.SocketBase,``0,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            加载 HTTP 调用[TRY]
            </summary>
            <typeparam name="callType"></typeparam>
            <param name="socket">HTTP套接字接口</param>
            <param name="call">HTTP 调用</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.loadAsynchronous(AutoCSer.Net.Http.SocketBase,AutoCSer.WebView.CallAsynchronous,AutoCSer.WebView.CallMethodInfo)">
            <summary>
            加载web调用[TRY]
            </summary>
            <param name="socket">HTTP套接字接口</param>
            <param name="call">web调用</param>
            <param name="callInfo">HTTP 调用函数信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.ajaxLoader``1(``0,AutoCSer.Net.Http.SocketBase)">
            <summary>
            初始化 AJAX 调用加载
            </summary>
            <param name="ajaxLoader"></param>
            <param name="socket"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.call(AutoCSer.WebView.CallBase,AutoCSer.UnmanagedStream@)">
            <summary>
            WEB 调用同步处理
            </summary>
            <param name="call"></param>
            <param name="responseStream"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.call(AutoCSer.WebView.CallBase)">
            <summary>
            WEB 调用异步处理
            </summary>
            <param name="call"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.Call(AutoCSer.WebView.CallSynchronize)">
            <summary>
            WEB 调用处理
            </summary>
            <param name="call"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.Call(AutoCSer.WebView.CallAsynchronousBase)">
            <summary>
            WEB 调用处理
            </summary>
            <param name="call"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.callSynchronize(AutoCSer.WebView.CallBase)">
            <summary>
            WEB 调用处理
            </summary>
            <param name="call"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.repsonseCall``1(``0,AutoCSer.UnmanagedStream@)">
            <summary>
            同步输出
            </summary>
            <typeparam name="callType"></typeparam>
            <param name="call"></param>
            <param name="responseStream"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer.repsonseCall(AutoCSer.WebView.Call,AutoCSer.UnmanagedStream@)">
            <summary>
            同步输出
            </summary>
            <param name="call"></param>
            <param name="responseStream"></param>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.ViewServer`1">
            <summary>
            WEB视图服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.ViewServer`1.session">
            <summary>
            Session
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer`1.Start(AutoCSer.Net.HttpRegister.Server,AutoCSer.Net.HttpRegister.Domain[],System.Action)">
            <summary>
            启动HTTP服务
            </summary>
            <param name="registerServer">HTTP 注册管理服务</param>
            <param name="domains">域名信息集合</param>
            <param name="onStop">停止服务处理</param>
            <returns>是否启动成功</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.ViewServer`1.getSession">
            <summary>
            获取Session
            </summary>
            <returns>Session</returns>
        </member>
        <member name="T:AutoCSer.Net.HttpDomainServer.VersionFileWatcher">
            <summary>
            网站资源版本号文件监视
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.onCreatedVersionFileName">
            <summary>
            保存当前版本的文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.watcher">
            <summary>
            文件监视器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.versionFileName">
            <summary>
            监视文件名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.servers">
            <summary>
            WEB 视图服务集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.serverLock">
            <summary>
            WEB 视图服务集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.version">
            <summary>
            当前版本号
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.#ctor(AutoCSer.Net.HttpDomainServer.ViewServer)">
            <summary>
            网站资源版本号文件监视
            </summary>
            <param name="server">WEB 视图服务</param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.onCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            新建文件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.getVersion">
            <summary>
            获取网站资源版本号
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.add(AutoCSer.Net.HttpDomainServer.ViewServer)">
            <summary>
            添加 WEB 视图服务
            </summary>
            <param name="server"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.remove(AutoCSer.Net.HttpDomainServer.ViewServer)">
            <summary>
            删除监视 WEB 视图服务
            </summary>
            <param name="server"></param>
            <returns>是否需要删除监视</returns>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.watchers">
            <summary>
            网站资源版本号文件监视集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.watcherLock">
            <summary>
            网站资源版本号文件监视集合访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.Add(AutoCSer.Net.HttpDomainServer.ViewServer)">
            <summary>
            添加监视 WEB 视图服务
            </summary>
            <param name="server"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpDomainServer.VersionFileWatcher.Remove(AutoCSer.Net.HttpDomainServer.ViewServer)">
            <summary>
            删除监视 WEB 视图服务
            </summary>
            <param name="server"></param>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Cache">
            <summary>
            域名注册信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Cache.AssemblyFile">
            <summary>
            程序集文件名,包含路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Cache.ServerTypeName">
            <summary>
            服务程序类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Cache.Domains">
            <summary>
            域名信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Cache.IsShareAssembly">
            <summary>
            是否共享程序集
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Cache.Get(AutoCSer.Net.HttpRegister.Domain[])">
            <summary>
            获取域名注册信息
            </summary>
            <param name="domains"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Config">
            <summary>
            HTTP 服务器配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Config.WorkPath">
            <summary>
            HTTP 服务程序集运行目录
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Config.Certificates">
            <summary>
            TCP 服务端口证书集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Config.GetCertificate(AutoCSer.Net.HostPort@,AutoCSer.Log.ILog)">
            <summary>
            获取安全证书
            </summary>
            <param name="host"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Config.GetCertificate(AutoCSer.Net.HostPort@,System.Security.Authentication.SslProtocols@,AutoCSer.Log.ILog)">
            <summary>
            获取安全证书
            </summary>
            <param name="host"></param>
            <param name="protocol"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.ConfigLoader">
            <summary>
            配置加载
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.ConfigLoader.GetUnion(System.Type,System.String)">
            <summary>
            获取配置数据
            </summary>
            <param name="type">配置类型</param>
            <param name="name">配置名称</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Domain">
            <summary>
            域名信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Domain.DomainData">
            <summary>
            域名
            </summary>
        </member>
        <member name="P:AutoCSer.Net.HttpRegister.Domain.DomainName">
            <summary>
            域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Domain.Host">
            <summary>
            TCP服务端口信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Domain.SslHost">
            <summary>
            安全连接服务端口信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Domain.IsFullName">
            <summary>
            域名是否全名,否则表示泛域名后缀
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Domain.IsOnlyHost">
            <summary>
            是否仅用于内网 IP 映射
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.DomainSearchData">
            <summary>
            域名搜索数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.domains">
            <summary>
            域名信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.servers">
            <summary>
            域名服务信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.data">
            <summary>
            域名搜索数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.searcher">
            <summary>
            字节数组搜索器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.lastDomain">
            <summary>
            最后一次查询域名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.lastServer">
            <summary>
            最后一次查询域名服务信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.lastDomainSize">
            <summary>
            最后一次查询域名长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.lastLock">
            <summary>
            最后一次查询访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.#ctor">
            <summary>
            域名搜索
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.#ctor(System.Byte[][],AutoCSer.Net.HttpRegister.DomainServer[])">
            <summary>
            域名搜索
            </summary>
            <param name="domains">域名信息集合</param>
            <param name="servers">域名服务信息集合</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.Close">
            <summary>
            关闭所有域名服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.Get(System.Byte*,System.Int32)">
            <summary>
            获取域名服务信息
            </summary>
            <param name="domain">域名</param>
            <param name="size">域名长度</param>
            <returns>域名服务信息</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.Add(System.Byte[],AutoCSer.Net.HttpRegister.DomainServer,AutoCSer.Net.HttpRegister.DomainSearchData@)">
            <summary>
            添加域名服务信息
            </summary>
            <param name="domain"></param>
            <param name="server"></param>
            <param name="removeDomains">域名搜索</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.Remove(System.Byte[])">
            <summary>
            删除域名服务信息
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.GetSaveCache">
            <summary>
            获取域名注册信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearchData.StopListen">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearchData.Default">
            <summary>
            默认空域名搜索
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.DomainSearcher">
            <summary>
            字节数组搜索器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearcher.State">
            <summary>
            状态集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearcher.bytes">
            <summary>
            字节查找表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainSearcher.tableType">
            <summary>
            查询矩阵单位尺寸类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearcher.#ctor(AutoCSer.Pointer.Size@)">
            <summary>
            ASCII字节搜索器
            </summary>
            <param name="data">数据起始位置</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearcher.Search(System.Byte*,System.Byte*)">
            <summary>
            获取状态索引
            </summary>
            <param name="end">匹配起始位置</param>
            <param name="start">匹配结束位置</param>
            <returns>状态索引,失败返回-1</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainSearcher.Search(System.Byte[])">
            <summary>
            获取状态索引
            </summary>
            <param name="data">匹配状态</param>
            <returns>状态索引,失败返回-1</returns>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.DomainServer">
            <summary>
            域名服务信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.Register">
            <summary>
            域名注册信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.RegisterServer">
            <summary>
            HTTP 注册管理服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.HttpDomainServer">
            <summary>
            域名服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.FileWatcherPath">
            <summary>
            文件监视路径
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.Domains">
            <summary>
            域名信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.DomainCount">
            <summary>
            有效域名数量
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.DomainServer.IsStart">
            <summary>
            是否已经启动
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainServer.RemoveFileWatcher">
            <summary>
            删除文件监视路径
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainServer.CheckDomain(AutoCSer.Net.HttpRegister.RegisterState@)">
            <summary>
            域名状态检测
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainServer.GetSaveCache">
            <summary>
            获取域名注册信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.DomainServer.StopListen">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.RegisterState">
            <summary>
            HTTP 服务启动状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.Unknown">
            <summary>
            未知状态
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.Disposed">
            <summary>
            HTTP 注册管理服务已经关闭
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.HostError">
            <summary>
            主机名称合法
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.DomainError">
            <summary>
            域名不合法
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.DomainExists">
            <summary>
            域名冲突
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.SslMatchError">
            <summary>
            安全连接匹配错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.CreateServerError">
            <summary>
            服务创建失败
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.CertificateError">
            <summary>
            安全证书获取失败
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.NotFoundAssembly">
            <summary>
            程序集文件未找到
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.StartError">
            <summary>
            服务启动失败
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.TcpError">
            <summary>
            TCP监听服务启动失败
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.RegisterState.Success">
            <summary>
            启动成功
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Server">
            <summary>
            HTTP 注册管理服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.ServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.MaxDomainSize">
            <summary>
            最大域名字节长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.Config">
            <summary>
            HTTP 服务相关参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.assemblyCache">
            <summary>
            程序集信息缓存
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.assemblyLock">
            <summary>
            程序集信息访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.FileWatcher">
            <summary>
            文件监视器
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.cacheFileName">
            <summary>
            TCP域名服务缓存文件名
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.domains">
            <summary>
            域名搜索
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.domainLock">
            <summary>
            HTTP域名服务集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.hosts">
            <summary>
            TCP服务端口信息集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.hostLock">
            <summary>
            TCP服务端口信息集合访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.LocalDomainServer">
            <summary>
            本地服务
            </summary>
        </member>
        <member name="E:AutoCSer.Net.HttpRegister.Server.OnLoadCacheDomain">
            <summary>
            缓存域名服务加载事件
            </summary>
        </member>
        <member name="E:AutoCSer.Net.HttpRegister.Server.OnStopListen">
            <summary>
            停止监听事件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.isFileWatcherTimeout">
            <summary>
            文件监视是否超时
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.isDisposed">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.Server.isLoadCache">
            <summary>
            是否正在加载缓存
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.SetTcpServer(AutoCSer.Net.TcpInternalServer.Server)">
            <summary>
            设置TCP服务端
            </summary>
            <param name="tcpServer">TCP服务端</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.OnFileWatcherTimeout">
            <summary>
            文件监视超时处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.FileWatcherTimeout">
            <summary>
            文件监视超时处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start(System.String,System.String,AutoCSer.Net.HttpRegister.Domain,System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domain">域名信息</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start(System.String,System.String,AutoCSer.Net.HttpRegister.Domain[],System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domains">域名信息集合</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start(AutoCSer.Net.HttpRegister.Cache@)">
            <summary>
            启动域名服务
            </summary>
            <param name="register">域名注册信息</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.CheckDomain(AutoCSer.Net.HttpRegister.Domain@,AutoCSer.Net.HttpRegister.DomainServer)">
            <summary>
            域名状态检测
            </summary>
            <param name="domain">域名信息</param>
            <param name="domainServer">域名服务</param>
            <returns>域名状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start(AutoCSer.Net.HttpRegister.Domain[])">
            <summary>
            启动TCP服务
            </summary>
            <param name="domains">域名信息集合</param>
            <returns>HTTP服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start(AutoCSer.Net.HostPort@)">
            <summary>
            启动TCP服务
            </summary>
            <param name="host">TCP服务端口信息</param>
            <returns>HTTP服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.startSsl(AutoCSer.Net.HostPort@)">
            <summary>
            启动TCP服务
            </summary>
            <param name="host">TCP服务端口信息</param>
            <returns>HTTP服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.stop(AutoCSer.Net.HostPort@)">
            <summary>
            停止TCP服务
            </summary>
            <param name="host">TCP服务端口信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.GetServer(System.Byte*,System.Int32)">
            <summary>
            获取域名服务信息
            </summary>
            <param name="domain">域名</param>
            <param name="size">域名长度</param>
            <returns>域名服务信息</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.stop(AutoCSer.Net.HttpRegister.Domain[])">
            <summary>
            停止域名服务
            </summary>
            <param name="domains">域名信息集合</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.stop(AutoCSer.Net.HttpRegister.Domain)">
            <summary>
            停止域名服务
            </summary>
            <param name="domain">域名信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.stopListen(System.Boolean)">
            <summary>
            停止所有端口监听
            </summary>
            <param name="isStop"></param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start``1(System.String,AutoCSer.Net.HostPort[],AutoCSer.Log.ILog)">
            <summary>
            启动本地服务
            </summary>
            <typeparam name="domainType"></typeparam>
            <param name="workPath"></param>
            <param name="hosts"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.start``1(System.String,AutoCSer.Net.HttpRegister.Domain[],AutoCSer.Log.ILog)">
            <summary>
            启动本地服务
            </summary>
            <typeparam name="domainType"></typeparam>
            <param name="workPath"></param>
            <param name="domains"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,AutoCSer.Log.ILog,AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="workPath"></param>
            <param name="log"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="workPath"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,AutoCSer.Log.ILog,System.String[])">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="workPath"></param>
            <param name="log"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String[])">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,System.String,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="workPath"></param>
            <param name="host"></param>
            <param name="log"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="host"></param>
            <param name="log"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create``1(System.String,System.Int32)">
            <summary>
            本地模式
            </summary>
            <typeparam name="domainServerType"></typeparam>
            <param name="host"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,AutoCSer.Log.ILog,AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <param name="workPath"></param>
            <param name="log"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <param name="workPath"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(AutoCSer.Net.HostPort[])">
            <summary>
            本地模式
            </summary>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,AutoCSer.Log.ILog,System.String[])">
            <summary>
            本地模式
            </summary>
            <param name="workPath"></param>
            <param name="log"></param>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String[])">
            <summary>
            本地模式
            </summary>
            <param name="hosts"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,System.String,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            本地模式
            </summary>
            <param name="workPath"></param>
            <param name="host"></param>
            <param name="log"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            本地模式
            </summary>
            <param name="host"></param>
            <param name="log"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.Create(System.String,System.Int32)">
            <summary>
            本地模式
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.getLoadCheckPath(System.IO.DirectoryInfo)">
            <summary>
            获取域名服务加载检测路径
            </summary>
            <param name="directory"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server._identityCommandNames_">
            <summary>
            命令序号记忆数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Server.TcpInternalServer">
            <summary>
            HttpServerRegister TCP服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalServer.#ctor(AutoCSer.Net.TcpInternalServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Net.HttpRegister.Server,System.Action{AutoCSer.SubArray{System.Byte}},AutoCSer.Log.ILog)">
            <summary>
            HttpServerRegister TCP调用服务端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="value">TCP 服务目标对象</param>
            <param name="log">日志接口</param>
            <param name="onCustomData">自定义数据包处理</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalServer.DoCommand(System.Int32,AutoCSer.Net.TcpInternalServer.ServerSocketSender,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理
            </summary>
            <param name="index">命令序号</param>
            <param name="sender">TCP 内部服务套接字数据发送</param>
            <param name="data">命令数据</param>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.Server.TcpInternalClient">
            <summary>
            TCP客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.#ctor(AutoCSer.Net.TcpInternalServer.ServerAttribute,System.Func{AutoCSer.Net.HttpRegister.Server.TcpInternalClient,AutoCSer.Net.TcpInternalServer.ClientSocketSender,System.Boolean},System.Action{AutoCSer.SubArray{System.Byte}},AutoCSer.Log.ILog)">
            <summary>
            TCP调用客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="onCustomData">自定义数据包处理</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.start(System.String,System.String,AutoCSer.Net.HttpRegister.Domain,System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domain">域名信息</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.startAwaiter(System.String,System.String,AutoCSer.Net.HttpRegister.Domain,System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domain">域名信息</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.start(System.String,System.String,AutoCSer.Net.HttpRegister.Domain[],System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domains">域名信息集合</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.startAwaiter(System.String,System.String,AutoCSer.Net.HttpRegister.Domain[],System.Boolean)">
            <summary>
            启动域名服务
            </summary>
            <param name="assemblyFile">程序集文件名,包含路径</param>
            <param name="serverTypeName">服务程序类型名称</param>
            <param name="domains">域名信息集合</param>
            <param name="isShareAssembly">是否共享程序集</param>
            <returns>域名服务启动状态</returns>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stop(AutoCSer.Net.HttpRegister.Domain)">
            <summary>
            停止域名服务
            </summary>
            <param name="domain">域名信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stopAwaiter(AutoCSer.Net.HttpRegister.Domain)">
            <summary>
            停止域名服务
            </summary>
            <param name="domain">域名信息</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stop(AutoCSer.Net.HttpRegister.Domain[])">
            <summary>
            停止域名服务
            </summary>
            <param name="domains">域名信息集合</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stopAwaiter(AutoCSer.Net.HttpRegister.Domain[])">
            <summary>
            停止域名服务
            </summary>
            <param name="domains">域名信息集合</param>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stopListen(System.Boolean)">
            <summary>
            停止所有端口监听
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.Server.TcpInternalClient.stopListenAwaiter(System.Boolean)">
            <summary>
            停止所有端口监听
            </summary>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.SslCertificate">
            <summary>
            TCP 服务端口证书信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.SslCertificate.Host">
            <summary>
            TCP服务端口信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.SslCertificate.FileName">
            <summary>
            安全证书文件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.SslCertificate.Password">
            <summary>
            安全证书文件密码
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.SslCertificate.Protocol">
            <summary>
            协议
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.SslCertificate.Certificate">
            <summary>
            安全证书 
            </summary>
        </member>
        <member name="M:AutoCSer.Net.HttpRegister.SslCertificate.Get(System.Security.Authentication.SslProtocols@,AutoCSer.Log.ILog)">
            <summary>
            获取安全证书
            </summary>
            <param name="protocol"></param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.HttpRegister.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.UnionType.Value">
            <summary>
            回调对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.UnionType.Config">
            <summary>
            HTTP 服务相关参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.HttpRegister.UnionType.ServerRegister">
            <summary>
            TCP 内部注册写服务配置
            </summary>
        </member>
    </members>
</doc>
