<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.TcpStreamServer</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Client">
            <summary>
            TCP 内部服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Client.tcpRegisterClient">
            <summary>
            TCP 内部注册服务客户端
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.Client.AutoCSer#Net#TcpRegister#IClient#ServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.#ctor(AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,AutoCSer.Log.ILog)">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.Client.Sender">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.AutoCSer#Net#TcpRegister#IClient#OnServerChange(AutoCSer.Net.TcpRegister.ServerSet)">
            <summary>
            服务更新
            </summary>
            <param name="serverSet"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.waitSocket">
            <summary>
            等待套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.TryCreateSocket">
            <summary>
            尝试创建第一个套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.createSocket(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            创建套接字
            </summary>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="createVersion"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node,AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <param name="clientNode">客户端远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>客户端远程表达式节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpressionClientNodeParameter``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取客户端远程表达式参数节点
            </summary>
            <typeparam name="returnType">返回值类型</typeparam>
            <param name="node">远程表达式参数节点</param>
            <returns>客户端远程表达式参数节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.CallRemoteExpression(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpression``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Client`1">
            <summary>
            TCP 内部服务客户端
            </summary>
            <typeparam name="clientType">客户端代理类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Client`1.client">
            <summary>
            TCP 内部服务客户端代理对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Client`1.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client`1.#ctor(`0,AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{`0,AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender,System.Boolean})">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="client">TCP 服务客户端对象</param>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Client`1.SocketVerifyMethod(AutoCSer.Net.TcpServer.ClientSocketSenderBase)">
            <summary>
            套接字验证
            </summary>
            <param name="socket">TCP 调用客户端套接字</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ClientSocket">
            <summary>
            TCP 内部服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.#ctor(AutoCSer.Net.TcpStreamServer.Client{AutoCSer.Net.TcpInternalStreamServer.ServerAttribute},System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            TCP 调用客户端套接字
            </summary>
            <param name="commandClient">TCP 调用客户端</param>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="createVersion"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.#ctor(AutoCSer.Net.TcpInternalStreamServer.ClientSocket)">
            <summary>
            TCP 调用客户端套接字
            </summary>
            <param name="socket">TCP 内部服务客户端套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.CreateNew">
            <summary>
            创建 TCP 服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.checkCreate">
            <summary>
            版本有效性检测
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.Create">
            <summary>
            创建 TCP 服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocket.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据接收完成后的回调委托
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender">
            <summary>
            TCP 内部服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender.#ctor(AutoCSer.Net.TcpInternalStreamServer.ClientSocket)">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <param name="socket">TCP 服务客户端套接字</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.Client">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Client.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.clientType">
            <summary>
            TCP 客户端类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.GetCommand(System.Int32)">
            <summary>
            获取客户端命令信息
            </summary>
            <param name="index"></param>
            <returns>客户端命令信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.Client`1.Create(AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,System.Func{`0,AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="log">日志接口</param>
            <returns>TCP 客户端</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.MethodClient">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.MethodGetter">
            <summary>
            获取 TCP 服务函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.MethodGetter.get(System.Type,System.Reflection.MethodInfo,AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,AutoCSer.Net.TcpStreamServer.MethodAttribute)">
            <summary>
            获取 TCP 服务函数信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="serverAttribute"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1">
            <summary>
            TCP 服务
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.methods">
            <summary>
            TCP 函数集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.serverType">
            <summary>
            TCP 服务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.serverConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.Server`1.Create(`0,AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 服务端对象
            </summary>
            <param name="value">接口对象</param>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="log">日志接口</param>
            <returns>TCP 服务</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall.Sender">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall.set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,System.Object)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall.Call``1(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,System.Object)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall`1.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall`1.set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,System.Object,`0@)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall`1.Call``1(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,System.Object,`0@)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="inputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Emit.ServerCall`1.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.MethodClient`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="clientType">客户端类型</typeparam>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.MethodClient`1._TcpClient_">
            <summary>
            TCP 内部服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.MethodClient`1._isDisposed_">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.MethodClient`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.Server">
            <summary>
            TCP 内部服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.Server.tcpRegisterClient">
            <summary>
            TCP 内部注册服务客户端
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.Server.AutoCSer#Net#TcpRegister#IServer#TcpRegisterInfo">
            <summary>
            TCP 服务注册信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.AutoCSer#Net#TcpRegister#IServer#CreateServerInfo">
            <summary>
            创建 TCP 服务注册信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.#ctor(AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            TCP 内部服务端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">同步验证接口</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.StopListen">
            <summary>
            停止服务监听
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.Start">
            <summary>
            启动服务
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.getSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.Server.getSocketVerify">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.IsServer">
            <summary>
            用于在配置文件中标识当前程序是否服务端，当在标识为服务端的环境中使用客户端调用时会输出警告日志，提示用户判断是否混淆了客户端与服务端。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.IsInternalClient">
            <summary>
            默认为 false 表示客户端 API 公共可见，设置为 true 表示仅程序集可见
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.GetIsInternalClient">
            <summary>
            客户端 API 是否仅程序集可见
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 服务注册名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.TcpRegister">
            <summary>
            注册当前服务的 TCP 注册服务名称。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.TcpRegisterName">
            <summary>
            注册当前服务的 TCP 注册服务名称。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.RegisterHost">
            <summary>
            客户端访问的主机名称或者 IP 地址，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.AutoCSer#Net#TcpRegister#IServerAttribute#ClientRegisterHost">
            <summary>
            客户端访问的主机名称或者 IP 地址，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.RegisterPort">
            <summary>
            客户端访问的监听端口，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.AutoCSer#Net#TcpRegister#IServerAttribute#ClientRegisterPort">
            <summary>
            客户端访问的监听端口，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.SendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数，默认为 128KB。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetSendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数，默认为 1MB。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ReceiveBufferSize">
            <summary>
            服务器端接受数据（包括客户端发送数据）缓冲区初始化字节数，默认为 128KB。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetReceiveBufferSize">
            <summary>
            服务器端接受数据（包括客户端发送数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.DefaultReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令默认超时为 4 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令超时为 4 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ClientTryCreateSleep">
            <summary>
            客户端重建连接休眠毫秒数，默认为 10
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetClientTryCreateSleep">
            <summary>
            客户端重建连接休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ClientOutputSleep">
            <summary>
            批量处理休眠毫秒数，默认为 0 适应于低延时高频串行调用，对于延时要求不高只要求吞吐量的情况可以设置为 1 以减少套接字调用次数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetClientOutputSleep">
            <summary>
            批量处理休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.ServerOutputSleep">
            <summary>
            批量处理休眠毫秒数，默认为 0 适应于低延时高频串行调用，对于延时要求不高只要求吞吐量的情况可以设置为 1 以减少套接字调用次数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetServerOutputSleep">
            <summary>
            批量处理休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetIsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsJsonSerialize">
            <summary>
            默认使用二进制序列化，适合参数数据类型稳定的服务，或者可以同步部署服务器端与客户端的内部服务。对于数据类型不稳定的互联网服务应该使用 JSON 序列化。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetIsJsonSerialize">
            <summary>
            是否使用 JSON 序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsServerBuildOutputThread">
            <summary>
            服务端创建输出是否开启线程，默认为 true
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.GetIsServerBuildOutputThread">
            <summary>
            服务端创建输出是否开启线程
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsAutoClient">
            <summary>
            默认为 true 表示在创建客户端对象的时候自动启动连接，否则需要第一次调用触发
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsAuto">
            <summary>
            是否自动创建客户端对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsRememberCommand">
            <summary>
            默认为 true 表示生成记忆数字编号标识与长字符串名称标识之间对应关系的代码，用于保持多次代码生成的命令序号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerBaseAttribute.IsSingleRegister">
            <summary>
            默认为 true 表示只允许注册一个 TCP 服务实例（单例服务，其它服务的注册将失败），但 false 并不代表支持负载均衡（仅仅是在客户端访问某个服务端失败时可以切换到其他服务端连接）。
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerCall.Sender">
            <summary>
            套接字
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerCall`2.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerCall`2.Set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,`1)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerCall`2.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns>服务器端调用</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerCall`3">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerCall`3.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerCall`3.Set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,`1,`2@)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerCall`3.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerSocket">
            <summary>
            TCP 内部服务端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.Sender">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.#ctor(AutoCSer.Net.TcpInternalStreamServer.Server)">
            <summary>
            TCP 内部服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.RunTask">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.ErrorTask">
            <summary>
            TCP 内部服务端套接字任务错误处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.Start">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据接收完成后的回调委托
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isReceiveVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.verifyCommandAsync">
            <summary>
            接收验证命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isReceiveVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.verifyDataAsync">
            <summary>
            获取验证数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doVerifyCommand">
            <summary>
            执行函数验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isReceiveCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.commandAsync">
            <summary>
            获取命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.isCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.loop(System.Boolean)">
            <summary>
            循环处理命令
            </summary>
            <param name="isCommand"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.receiveCommandData(System.Boolean@)">
            <summary>
            检查命令数据
            </summary>
            <param name="isDoCommand">是否执行了命令</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.dataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.bigDataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCommandBig">
            <summary>
            执行命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCommandLoop">
            <summary>
            执行命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCommandMark(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理委托
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.receiveCompressionCommandData">
            <summary>
            检查命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.compressionDataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.compressionBigDataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCompressionBigDataCommand">
            <summary>
            解压缩并执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCompressionCommand">
            <summary>
            解压缩并执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocket.doCompressionCommand(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            执行压缩命令
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.#ctor(AutoCSer.Net.TcpInternalStreamServer.ServerSocket)">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
            <param name="socket">TCP 内部服务套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.Close">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.closeSocket">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.VirtualBuildOutput">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender.BuildOutput">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.#ctor(System.Int64)">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
            <param name="taskTicks">线程切换超时时钟周期</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.Add(AutoCSer.Net.TcpInternalStreamServer.ServerSocket)">
            <summary>
            添加任务
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.run">
            <summary>
            TCP服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.Task">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.tasks">
            <summary>
            TCP 内部服务端套接字任务处理集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.ServerSocketTask.check">
            <summary>
            线程切换检测
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.TimeVerifyClient">
            <summary>
            时间验证服务客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.TimeVerifyClient.Verifier">
            <summary>
            时间验证服务客户端委托
            </summary>
            <param name="sender"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalStreamServer.TimeVerifyClient.Verify(AutoCSer.Net.TcpInternalStreamServer.TimeVerifyClient.Verifier,AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender,AutoCSer.Net.TcpInternalStreamServer.Client)">
            <summary>
            时间验证客户端验证
            </summary>
            <param name="verify">时间验证服务客户端委托</param>
            <param name="sender"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.TimeVerifyServer">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalStreamServer.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.UnionType.Value">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.UnionType.ClientSocketSender">
            <summary>
            TCP 内部服务客户端套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalStreamServer.UnionType.ServerAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Client">
            <summary>
            TCP 开放服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.#ctor(AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,AutoCSer.Log.ILog)">
            <summary>
            TCP 开放服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.Client.Sender">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.waitSocket">
            <summary>
            等待套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.TryCreateSocket">
            <summary>
            尝试创建第一个套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node,AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <param name="clientNode">客户端远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>客户端远程表达式节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpressionClientNodeParameter``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取客户端远程表达式参数节点
            </summary>
            <typeparam name="returnType">返回值类型</typeparam>
            <param name="node">远程表达式参数节点</param>
            <returns>客户端远程表达式参数节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.CallRemoteExpression(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpression``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Client`1">
            <summary>
            TCP 开放服务客户端
            </summary>
            <typeparam name="clientType">客户端代理类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Client`1.client">
            <summary>
            TCP 开放服务客户端代理对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Client`1.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client`1.#ctor(`0,AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{`0,AutoCSer.Net.TcpOpenStreamServer.ClientSocketSender,System.Boolean})">
            <summary>
            TCP 开放服务客户端
            </summary>
            <param name="client">TCP 服务客户端对象</param>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Client`1.SocketVerifyMethod(AutoCSer.Net.TcpServer.ClientSocketSenderBase)">
            <summary>
            套接字验证
            </summary>
            <param name="socket">TCP 调用客户端套接字</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ClientSocket">
            <summary>
            TCP 内部服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.#ctor(AutoCSer.Net.TcpStreamServer.Client{AutoCSer.Net.TcpOpenStreamServer.ServerAttribute},System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            TCP 调用客户端套接字
            </summary>
            <param name="commandClient">TCP 调用客户端</param>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="createVersion"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.#ctor(AutoCSer.Net.TcpOpenStreamServer.ClientSocket)">
            <summary>
            TCP 调用客户端套接字
            </summary>
            <param name="socket">TCP 内部服务客户端套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.CreateNew">
            <summary>
            创建 TCP 服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.checkCreate">
            <summary>
            版本有效性检测
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.Create">
            <summary>
            创建 TCP 服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocket.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据接收完成后的回调委托
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ClientSocketSender">
            <summary>
            TCP 内部服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ClientSocketSender.#ctor(AutoCSer.Net.TcpOpenStreamServer.ClientSocket)">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <param name="socket">TCP 服务客户端套接字</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.Client">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Client.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.clientType">
            <summary>
            TCP 客户端类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.GetCommand(System.Int32)">
            <summary>
            获取客户端命令信息
            </summary>
            <param name="index"></param>
            <returns>客户端命令信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.Client`1.Create(AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,System.Func{`0,AutoCSer.Net.TcpOpenStreamServer.ClientSocketSender,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="log">日志接口</param>
            <returns>TCP 客户端</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.MethodClient">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.MethodGetter">
            <summary>
            获取 TCP 服务函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.MethodGetter.get(System.Type,System.Reflection.MethodInfo,AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,AutoCSer.Net.TcpOpenStreamServer.MethodAttribute)">
            <summary>
            获取 TCP 服务函数信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="serverAttribute"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1">
            <summary>
            TCP 服务
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.methods">
            <summary>
            TCP 函数集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.serverType">
            <summary>
            TCP 服务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.serverConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.Server`1.Create(`0,AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 服务端对象
            </summary>
            <param name="value">接口对象</param>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="log">日志接口</param>
            <returns>TCP 服务</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall.Sender">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall.set(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,System.Object)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall.Call``1(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,System.Object)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall`1.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall`1.set(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,System.Object,`0@)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall`1.Call``1(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,System.Object,`0@)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="inputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Emit.ServerCall`1.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.MethodClient`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="clientType">客户端类型</typeparam>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.MethodClient`1._TcpClient_">
            <summary>
            TCP 开放服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.MethodClient`1._isDisposed_">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.MethodClient`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.Server">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Server.socketHandle">
            <summary>
            套接字等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.Server.socketHead">
            <summary>
            套接字链表头部
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Server.#ctor(AutoCSer.Net.TcpOpenStreamServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            TCP 服务端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">同步验证接口</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Server.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Server.getSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Server.getSocketVerify">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.Server.OnSocket">
            <summary>
            套接字处理
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.SendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数，默认为 8KB。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetSendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ReceiveBufferSize">
            <summary>
            服务器端接受数据（包括客户端发送数据）缓冲区初始化字节数，默认为 8KB。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetReceiveBufferSize">
            <summary>
            服务器端接受数据（包括客户端发送数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.MaxInputSize">
            <summary>
            最大输入数据字节数，默认为 16 KB，小于等于 0 表示不限
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.DefaultReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令默认超时为 9 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令超时为 9 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ClientTryCreateSleep">
            <summary>
            客户端重建连接休眠毫秒数，默认为 1000
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetClientTryCreateSleep">
            <summary>
            客户端重建连接休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ClientOutputSleep">
            <summary>
            批量处理休眠毫秒数，默认为 -1 表示不等待，设置为 0 适应于延时要求不高只要求吞吐量的情况以减少套接字调用次数，设置为 0 适应于低延时高频串行调用
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetClientOutputSleep">
            <summary>
            批量处理休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.ServerOutputSleep">
            <summary>
            批量处理休眠毫秒数，默认为 -1 表示不等待，设置为 0 适应于低延时高频串行调用，大于 0 适应于延时要求不高只要求吞吐量的情况以减少套接字调用次数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetServerOutputSleep">
            <summary>
            批量处理休眠毫秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.IsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，默认为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetIsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.IsJsonSerialize">
            <summary>
            默认使用 JSON 序列化，适合数据类型不稳定的互联网服务。对于参数数据类型稳定的服务，或者可以同步部署服务器端与客户端的内部服务，可以考虑使用二进制序列化以提升性能（对于简单测试可能提升 100+% 性能）。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetIsJsonSerialize">
            <summary>
            是否使用 JSON 序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.IsServerBuildOutputThread">
            <summary>
            服务端创建输出是否开启线程，默认为 false
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetIsServerBuildOutputThread">
            <summary>
            服务端创建输出是否开启线程
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.IsAutoClient">
            <summary>
            默认为 false 需要第一次调用触发，否则在创建客户端对象的时候自动启动连接
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2.Sender">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2.Set(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,`1)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerCall`3">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerCall`3.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerCall`3.Set(AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender,`1,`2@)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerCall`3.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerSocket">
            <summary>
            TCP 服务端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.Sender">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.maxInputSize">
            <summary>
            最大输入数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.maxMergeInputSize">
            <summary>
            最大合并输入数据长度
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.#ctor(AutoCSer.Net.TcpOpenStreamServer.Server,System.Net.Sockets.Socket@)">
            <summary>
            TCP 内部服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
            <param name="socket">客户端信息</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.RunTask">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.ErrorTask">
            <summary>
            TCP 服务端套接字任务错误处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.Close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.Start">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.runTask">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.onReceive(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据接收完成后的回调委托
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isReceiveVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isReceiveVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.verifyDataAsync">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doVerifyCommand">
            <summary>
            执行函数验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isReceiveCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.isCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.loop(System.Boolean)">
            <summary>
            循环处理命令
            </summary>
            <param name="isCommand"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.receiveCommandData(System.Boolean@)">
            <summary>
            检查命令数据
            </summary>
            <param name="isDoCommand">是否执行了命令</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.dataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.bigDataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCommandBig">
            <summary>
            执行命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCommandLoop">
            <summary>
            执行命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCommandMark(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理委托
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.receiveCompressionCommandData">
            <summary>
            检查命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.compressionDataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.compressionBigDataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCompressionBigDataCommand">
            <summary>
            解压缩并执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCompressionCommand">
            <summary>
            解压缩并执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocket.doCompressionCommand(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            执行压缩命令
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.sendAsyncEventArgs">
            <summary>
            发送数据异步事件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.sendSizeLessCount">
            <summary>
            发送数据量过低次数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.#ctor(AutoCSer.Net.TcpOpenStreamServer.ServerSocket)">
            <summary>
            TCP 内部服务套接字数据发送
            </summary>
            <param name="socket">TCP 内部服务套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.Close">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.closeSocket">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.VirtualBuildOutput">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.BuildOutput">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.send">
            <summary>
            发送数据
            </summary>
            <returns>发送数据状态</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketSender.onSend(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            数据发送完成后的回调委托
            </summary>
            <param name="sender"></param>
            <param name="async">异步回调参数</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.#ctor(System.Int64)">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
            <param name="taskTicks">线程切换超时时钟周期</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.Add(AutoCSer.Net.TcpOpenStreamServer.ServerSocket)">
            <summary>
            添加任务
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.run">
            <summary>
            TCP服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.Task">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.tasks">
            <summary>
            TCP 内部服务端套接字任务处理集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.ServerSocketTask.check">
            <summary>
            线程切换检测
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.SocketLink">
            <summary>
            套接字链表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.SocketLink.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.SocketLink.DisposeSocket">
            <summary>
            释放套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.SocketLink.Cancel">
            <summary>
            释放套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.SocketLink.Start(AutoCSer.Net.TcpOpenStreamServer.Server,AutoCSer.Net.TcpOpenStreamServer.ServerSocket@)">
            <summary>
            创建 TCP 服务端套接字
            </summary>
            <param name="server"></param>
            <param name="serverSocket"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.TimeVerifyClient">
            <summary>
            时间验证服务客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.TimeVerifyClient.Verifier">
            <summary>
            时间验证服务客户端委托
            </summary>
            <param name="sender"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenStreamServer.TimeVerifyClient.Verify(AutoCSer.Net.TcpOpenStreamServer.TimeVerifyClient.Verifier,AutoCSer.Net.TcpOpenStreamServer.ClientSocketSender,AutoCSer.Net.TcpOpenStreamServer.Client)">
            <summary>
            时间验证客户端验证
            </summary>
            <param name="verify">时间验证服务客户端委托</param>
            <param name="sender"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.TimeVerifyServer">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenStreamServer.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.UnionType.Value">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.UnionType.ClientSocketSender">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenStreamServer.UnionType.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.Client">
            <summary>
            TCP 静态服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.Client.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.Client.#ctor(AutoCSer.Net.TcpInternalStreamServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{AutoCSer.Net.TcpInternalStreamServer.ClientSocketSender,System.Boolean})">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.Client.SocketVerifyMethod(AutoCSer.Net.TcpServer.ClientSocketSenderBase)">
            <summary>
            套接字验证
            </summary>
            <param name="socket">TCP 调用客户端套接字</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.MethodAttribute.ServerName">
            <summary>
            服务名称。如果不指定 Service，则默认绑定到该 class 申明配置的 Service；一个 class 中的不同函数可以绑定到不同服务名称。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStaticStreamServer.MethodAttribute.GetServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute">
            <summary>
            TCP 静态服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型，为了防止调用者混淆了远程函数与本地函数在某些情况下产生误调用，默认只选择受保护的方法生成（包括 private / protected / internal）相关代码。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.IsServer">
            <summary>
            是否 TCP 服务配置。一个静态服务只能存在一个 class 配置 IsServer = true，并且必须指定 Service，用于这个服务名称绑定 TCP 服务配置。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.IsAbstract">
            <summary>
            是否支持抽象类
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.GetConfig(System.String,System.Type,System.Boolean)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <param name="isServer">是否服务端</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.GetConfig(System.String,System.Boolean)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="isServer">是否服务端</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerAttribute.GetConfig(System.String)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerCall`1.Set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerCall`1.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns>服务器端调用</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerCall`1.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.ServerCall`2.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerCall`2.Set(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,`1@)">
            <summary>
            设置参数
            </summary>
            <param name="sender">套接字</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticStreamServer.TimeVerify`1">
            <summary>
            时间验证
            </summary>
            <typeparam name="verifyType">验证类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.TimeVerify`1.lastVerifyTicks">
            <summary>
            最后一次验证时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticStreamServer.TimeVerify`1.lastVerifyTickLock">
            <summary>
            最后一次验证时间访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticStreamServer.TimeVerify`1.verify(AutoCSer.Net.TcpInternalStreamServer.ServerSocketSender,System.UInt64,System.Byte[],System.Int64@)">
            <summary>
            时间验证函数
            </summary>
            <param name="sender"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Client`1">
            <summary>
            TCP 服务客户端
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Client`1.#ctor(`0,AutoCSer.Log.ILog)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Client`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommandBase">
            <summary>
            客户端命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommandBase.Callback">
            <summary>
            回调委托
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommandBase.ReturnType">
            <summary>
            任务返回类型
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand">
            <summary>
            客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>下一个命令</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,System.Action{AutoCSer.Net.TcpServer.ReturnValue})">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="onCall">回调委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.OnReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据回调处理
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.setTask">
            <summary>
            设置回调任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.onReceive">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.onReceiveTask">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CallCommand.threadPoolOnReceive(System.Object)">
            <summary>
            系统线程池接收数据回调处理
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.CheckCommand">
            <summary>
            心跳检测命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CheckCommand.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CheckCommand.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.CheckCommand.Get(AutoCSer.Net.TcpStreamServer.ClientSocket)">
            <summary>
            获取心跳检测命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <returns>心跳检测命令</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.Command">
            <summary>
            TCP 客户端命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.Command.Socket">
            <summary>
            TCP 客户端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.Command.FreeLock">
            <summary>
            释放 TCP 客户端访问锁
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.Command.IsBuildError">
            <summary>
            是否创建输出错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.Command.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.Command.Free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1">
            <summary>
            客户端命令
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.InputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,System.Action{AutoCSer.Net.TcpServer.ReturnValue},`0@)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.OnReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据回调处理
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.setTask">
            <summary>
            设置回调任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.onReceive">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.onReceiveTask">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputCommand`1.threadPoolOnReceive(System.Object)">
            <summary>
            系统线程池接收数据回调处理
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2">
            <summary>
            客户端命令
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.InputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{`1}},`0@,`1@)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
            <param name="outputParameter">输出参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{`1}},`0@)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.OnReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据回调处理
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.setTask">
            <summary>
            设置回调任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.onReceive">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.onReceiveTask">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.InputOutputCommand`2.threadPoolOnReceive(System.Object)">
            <summary>
            系统线程池接收数据回调处理
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommandBase`1">
            <summary>
            客户端命令
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommandBase`1.Callback">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommandBase`1.OutputParameter">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommandBase`1.onReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据回调处理
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1">
            <summary>
            客户端命令
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>下一个命令</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{`0}},`0@)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="outputParameter">输出参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{`0}})">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="callback">异步回调</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.OnReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据回调处理
            </summary>
            <param name="data">输出数据</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.setTask">
            <summary>
            设置回调任务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.onReceive">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.onReceiveTask">
            <summary>
            回调处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.OutputCommand`1.threadPoolOnReceive(System.Object)">
            <summary>
            系统线程池接收数据回调处理
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand">
            <summary>
            客户端命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand`1">
            <summary>
            客户端命令
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand`1.InputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand`1.Set(AutoCSer.Net.TcpStreamServer.ClientSocket,AutoCSer.Net.TcpServer.CommandInfo,`0@)">
            <summary>
            获取客户端命令
            </summary>
            <param name="socket">TCP客户端命令流处理套接字</param>
            <param name="command">命令信息</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand`1.Build(AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建命令输入数据
            </summary>
            <param name="buildInfo">TCP 客户端创建命令参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientCommand.SendOnlyCommand`1.free">
            <summary>
            释放 TCP 客户端命令
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientSocket">
            <summary>
            TCP 服务客户端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocket.CommandQueue">
            <summary>
            TCP 客户端输出信息队列链表
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.#ctor(System.Net.IPAddress,System.Int32,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            TCP 服务客户端套接字
            </summary>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="log"></param>
            <param name="maxInputSize"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.SetSender(AutoCSer.Net.TcpStreamServer.ClientSocketSender)">
            <summary>
            设置 TCP 服务客户端套接字数据发送
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.onReceive(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            接收数据处理
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.onReceive">
            <summary>
            接收数据处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.onReceive(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            接收数据处理
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.OnReceive(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            接收数据处理
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.getCurrentCommand">
            <summary>
            获取当前执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.freeCommand">
            <summary>
            释放 TCP 客户端输出信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket.freeCommandQueue">
            <summary>
            释放 TCP 客户端输出信息队列
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientSocket`1">
            <summary>
            TCP 服务客户端套接字
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocket`1.CommandClient">
            <summary>
            TCP 服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.#ctor(AutoCSer.Net.TcpStreamServer.Client{`0},System.Net.IPAddress,System.Int32,System.Int32,System.Int32)">
            <summary>
            TCP 服务客户端套接字
            </summary>
            <param name="commandClient">TCP 服务客户端</param>
            <param name="ipAddress"></param>
            <param name="port"></param>
            <param name="createVersion"></param>
            <param name="maxInputSize">最大输入数据字节数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.#ctor(AutoCSer.Net.TcpStreamServer.ClientSocket{`0})">
            <summary>
            TCP 服务客户端套接字
            </summary>
            <param name="socket">TCP 内部服务客户端套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.DisposeSocket">
            <summary>
            释放套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.CheckCreateVersion">
            <summary>
            套接字操作失败重新创建版本检测
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.CreateNew">
            <summary>
            创建 TCP 服务客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.CreateSleep">
            <summary>
            创建 TCP 服务客户端套接字失败休眠
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.isReceiveDataSize">
            <summary>
            获取数据大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.dataSizeAsync(System.Int32)">
            <summary>
            获取数据大小
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.checkDataLoopFixed(System.Boolean@)">
            <summary>
            检查命令数据
            </summary>
            <param name="isOnData">是否接收完数据执行</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.onDataLoopFixed">
            <summary>
            回调命令数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.onBigDataLoopFixed">
            <summary>
            回调命令数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.dataAsync(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.bigDataAsync(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.loop">
            <summary>
            循环处理命令回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.receiveCompressionData">
            <summary>
            检查命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.compressionDataAsync(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.compressionBigDataAsync(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.onCompressionBigData">
            <summary>
            解压缩并回调命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.onCompressionData">
            <summary>
            回调命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocket`1.onCompressionData(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            回调命令数据
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientSocketSender">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender.ClientSocket">
            <summary>
            TCP 服务客户端套接字
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.ClientSocketSender.IsSocket">
            <summary>
            套接字是否有效
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender.CommandEnd">
            <summary>
            TCP 客户端输出信息队列尾部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender.isNewCommand">
            <summary>
            是否有新的 TCP 客户端输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender.commandQueueLock">
            <summary>
            弹出节点访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender.#ctor(AutoCSer.Net.TcpStreamServer.ClientSocket)">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <param name="socket">TCP 服务客户端套接字</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.commandClient">
            <summary>
            TCP 服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.remoteExpressionServerNodeIdChecker">
            <summary>
            远程表达式客户端检测服务端映射标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.#ctor(AutoCSer.Net.TcpStreamServer.ClientSocket{`0})">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
            <param name="socket">TCP 服务客户端套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.Check">
            <summary>
            心跳检测
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.push(AutoCSer.Net.TcpStreamServer.ClientCommand.Command)">
            <summary>
            添加命令
            </summary>
            <param name="command">当前命令</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitGet``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue{``1}@,``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitGet``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue{``0}@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitGet``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue{``1}@,``0@,``1@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitGet``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue{``0}@,``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitCall``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue@,``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitCall(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue@)">
            <summary>
            TCP调用
            </summary>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.WaitCall``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.AutoWaitReturnValue{``1}@,``0@)">
            <summary>
            TCP调用（用于代码生成编译）
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallOnly``1(AutoCSer.Net.TcpServer.CommandInfo,``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallOnly(AutoCSer.Net.TcpServer.CommandInfo)">
            <summary>
            TCP调用
            </summary>
            <param name="identityCommand">命令信息</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAwaiter``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{``1}},``0@,``1@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAwaiter``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{``0}},``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAwaiter``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{``1}},``0@)">
            <summary>
            TCP调用（用于代码生成编译）
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAwaiter``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.Awaiter,``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAwaiter(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.Awaiter)">
            <summary>
            TCP调用
            </summary>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.Get``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{``1}}@,``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.Get``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.Callback{AutoCSer.Net.TcpServer.ReturnValue{``0}}@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.Call``1(AutoCSer.Net.TcpServer.CommandInfo,System.Action{AutoCSer.Net.TcpServer.ReturnValue},``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.Call(AutoCSer.Net.TcpServer.CommandInfo,System.Action{AutoCSer.Net.TcpServer.ReturnValue})">
            <summary>
            TCP调用
            </summary>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionNodeId(AutoCSer.RemoteType[])">
            <summary>
            获取远程表达式服务端节点标识
            </summary>
            <param name="types">表达式服务端节点类型集合</param>
            <returns>表达式服务端节点标识集合</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node,AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <param name="clientNode">客户端远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>客户端远程表达式节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionClientNodeParameter``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取客户端远程表达式参数节点
            </summary>
            <typeparam name="returnType">返回值类型</typeparam>
            <param name="node">远程表达式参数节点</param>
            <returns>客户端远程表达式参数节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.getRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallRemoteExpression(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpression``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.getRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetRemoteExpressionAwaiter(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.VirtualBuildOutput">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAsync``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.TaskAsyncReturnValue{``1},``0@,``1@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="inputParameter">输入参数</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.GetAsync``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.TaskAsyncReturnValue{``0},``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="callback">异步回调</param>
            <param name="outputParameter">输出参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallAsync``1(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.TaskAsyncReturnValue,``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallAsync``2(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.TaskAsyncReturnValue{``1},``0@)">
            <summary>
            TCP调用（用于代码生成编译）
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输入参数类型</typeparam>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <param name="inputParameter">输入参数</param>
            <returns>保持回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.CallAsync(AutoCSer.Net.TcpServer.CommandInfo,AutoCSer.Net.TcpServer.TaskAsyncReturnValue)">
            <summary>
            TCP调用
            </summary>
            <param name="identityCommand">命令信息</param>
            <param name="onCall">回调委托</param>
            <returns>保持回调</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.RemoteExpressionServerNodeIdChecker">
            <summary>
            远程表达式客户端检测服务端映射标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.RemoteExpressionServerNodeIdChecker.Sender">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ClientSocketSender`1.RemoteExpressionServerNodeIdChecker.Get(AutoCSer.RemoteType[])">
            <summary>
            获取服务端映射标识集合
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Emit.Method`3">
            <summary>
            TCP 函数信息
            </summary>
            <summary>
            TCP 函数信息
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <typeparam name="methodAttributeType">TCP 调用函数配置</typeparam>
            <typeparam name="serverSocketSenderType">TCP 服务套接字数据发送</typeparam>
            <summary>
            TCP 函数信息
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ClientBuilder">
            <summary>
            创建 TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ClientBuilder.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ClientBuilder.Commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ClientBuilder.Build(System.Type,AutoCSer.Net.TcpServer.ServerBaseAttribute,AutoCSer.Net.TcpStreamServer.Emit.Method{`0,`1,`2}[],System.Reflection.MethodInfo)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
            <param name="methods"></param>
            <param name="getCommandMethod"></param>
            <returns></returns>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.Method`3.IsClientSendOnly">
            <summary>
            服务端需要应答客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.#ctor(System.Type,System.Reflection.MethodInfo,`0,`1,System.Boolean)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="type">接口类型</param>
            <param name="method">方法信息</param>
            <param name="attribute">TCP 服务器端配置</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
            <param name="isClient">是否客户端</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.#ctor(System.Type,System.Reflection.PropertyInfo,`0,`1,System.Boolean)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="type">接口类型</param>
            <param name="property">属性信息</param>
            <param name="attribute">TCP 服务器端配置</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
            <param name="isSet">是否设置</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.#ctor(AutoCSer.Net.TcpStreamServer.Emit.Method{`0,`1,`2},`1)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="propertyGetMethod">属性获取 TCP 函数信息</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.CheckRef(System.String@)">
            <summary>
            引用参数检测
            </summary>
            <param name="errorString"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ServerBuilder">
            <summary>
            创建 TCP 服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ServerBuilder.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ServerBuilder.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.Method`3.ServerBuilder.Build(System.Type,AutoCSer.Net.TcpStreamServer.ServerAttribute,System.Type,System.Type,System.Type[],AutoCSer.Net.TcpStreamServer.Emit.Method{`0,`1,`2}[])">
            <summary>
            创建 TCP 服务端
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
            <param name="serverInterfaceType"></param>
            <param name="serverCallType"></param>
            <param name="constructorParameterTypes"></param>
            <param name="methods"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerSocketSenderPushMethod">
            <summary>
            TCP 服务器端同步调用套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerSocketSenderPushOutputMethod">
            <summary>
            TCP 服务器端同步调用套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerSocketSenderPushOutputRefMethod">
            <summary>
            TCP 服务器端同步调用套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerSocketSenderPushReturnTypeMethod">
            <summary>
            TCP 服务器端同步调用套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.ServerSocketSenderAddLogMethod">
            <summary>
            TCP 服务器端同步调用套接字错误日志处理函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.ServerMetadata.#ctor(System.Type,System.Type,System.Type,System.Type)">
            <summary>
            TCP 服务元数据
            </summary>
            <param name="serverType">TCP 服务类型</param>
            <param name="serverAttributeType">TCP 服务配置类型</param>
            <param name="senderType">TCP 服务套接字发送数据类型</param>
            <param name="serverCallType">TCP 服务器端同步调用类型</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Emit.StreamParameterType">
            <summary>
            TCP 参数类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Emit.StreamParameterType.IsInputParameter(System.Reflection.ParameterInfo)">
            <summary>
            判断是否有效输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.ServerTaskType">
            <summary>
            服务端任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.ClientTask">
            <summary>
            客户端异步任务类型，默认为 Timeout
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.ClientTaskType">
            <summary>
            客户端异步任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.IsClientSynchronous">
            <summary>
            默认为 true 表示生成同步调用代理函数，同步模式使用的是 Monitor.Wait，会占用一个工作线程，并存在线程调度开销，优点是使用方便、安全。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.GetIsClientSynchronous">
            <summary>
            是否生成同步调用代理函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.IsClientAsynchronous">
            <summary>
            默认为 false 表示不生成异步调用代理函数。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.GetIsClientAsynchronous">
            <summary>
            是否生成异步调用代理函数。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.IsClientSendOnly">
            <summary>
            默认为 false 表示服务端需要应答客户端请求，否则仅仅是客户端发送数据到服务端（服务端不应答）。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.GetIsClientSendOnly">
            <summary>
            客户端是否仅发送数据，无需服务端应答
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.IsClientAwaiter">
            <summary>
            默认为 true 表示生成 await 代理，不支持 ref / out
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.GetIsClientAwaiter">
            <summary>
            是否支持 async Task
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.MethodAttribute.IsClientTaskAsync">
            <summary>
            默认为 false 表示不支持 async Task
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.MethodAttribute.GetIsClientTaskAsync">
            <summary>
            是否支持 async Task
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Server`1">
            <summary>
            TCP 服务基类
            </summary>
            <typeparam name="attributeType"></typeparam>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.Server`1.isCustomData">
            <summary>
            是否支持自定义数据包
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.Server`1.isKeepCallback">
            <summary>
            是否支持保持回调
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.Server`1.isMergeCommand">
            <summary>
            是否支持合并命令处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`1.#ctor(`0,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">获取客户端请求线程调用类型</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`1.Start">
            <summary>
            启动服务
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`1.startGetSocket">
            <summary>
            获取客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`1.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.Server`3">
            <summary>
            TCP 服务基类
            </summary>
            <typeparam name="attributeType"></typeparam>
            <typeparam name="serverType"></typeparam>
            <typeparam name="serverSocketSenderType"></typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`3.#ctor(`0,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">获取客户端请求线程调用类型</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`3.DoCommand(System.Int32,`2,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理
            </summary>
            <param name="index">命令序号</param>
            <param name="sender">TCP 内部服务套接字数据发送</param>
            <param name="data">命令数据</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.Server`3.DoCommand(System.Int32,`2,AutoCSer.SubBuffer.PoolBufferFull@,System.Int32)">
            <summary>
            命令处理委托
            </summary>
            <param name="index"></param>
            <param name="socket"></param>
            <param name="buffer"></param>
            <param name="dataSize"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.ServerAttribute.GetMaxCustomDataSize">
            <summary>
            客户端最大自定义数据包字节大小，0 表示不限
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.ServerAttribute.GetCommandPoolBitSize">
            <summary>
            命令池初始化二进制大小 2^n
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerAttribute.ServerTaskType">
            <summary>
            服务端任务类型，默认为 Queue
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1">
            <summary>
            TCP 服务端套接字输出信息
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1.outputInfo">
            <summary>
            服务端输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1.outputParameter">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1.Build(AutoCSer.Net.TcpServer.ServerSocketSenderBase,AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建输出信息
            </summary>
            <param name="sender">TCP 服务套接字数据发送</param>
            <param name="buildInfo">输出创建参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1.Set(AutoCSer.Net.TcpServer.OutputInfo,`0@)">
            <summary>
            设置输出参数
            </summary>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerOutput.Output`1.free">
            <summary>
            释放 TCP 服务端套接字输出信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerOutput.OutputLink">
            <summary>
            TCP 服务端套接字输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerOutput.OutputLink.OutputDataSize">
            <summary>
            TCP 服务端输出数据长度
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerOutput.ReturnTypeOutput">
            <summary>
            TCP 服务端套接字输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerOutput.ReturnTypeOutput.ReturnType">
            <summary>
            返回值类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerOutput.ReturnTypeOutput.Build(AutoCSer.Net.TcpServer.ServerSocketSenderBase,AutoCSer.Net.TcpServer.SenderBuildInfo@)">
            <summary>
            创建输出信息
            </summary>
            <param name="sender">TCP 服务套接字数据发送</param>
            <param name="buildInfo">输出创建参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerOutput.ReturnTypeOutput.free">
            <summary>
            释放 TCP 服务端套接字输出信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerSocket`4">
            <summary>
            TCP 服务端套接字
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <typeparam name="serverType">TCP 服务类型</typeparam>
            <typeparam name="socketType">TCP 服务端套接字类型</typeparam>
            <typeparam name="socketSenderType">TCP 服务套接字数据发送</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocket`4.TaskTicks">
            <summary>
            线程切换检测时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocket`4.NextTask">
            <summary>
            下一个任务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocket`4.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocket`4.#ctor(`1)">
            <summary>
            TCP 服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerSocketSender">
            <summary>
            TCP 服务套接字数据发送
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocketSender.Outputs">
            <summary>
            TCP 服务端套接字输出信息链表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocketSender.ServerTaskType">
            <summary>
            服务端任务类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender.#ctor(AutoCSer.Net.TcpServer.ServerSocket,AutoCSer.Net.TcpStreamServer.ServerAttribute)">
            <summary>
            TCP 服务套接字数据发送
            </summary>
            <param name="socket">TCP 服务套接字</param>
            <param name="attribute"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4">
            <summary>
            TCP 服务套接字数据发送
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <typeparam name="serverType">TCP 服务类型</typeparam>
            <typeparam name="socketType">TCP 服务端套接字类型</typeparam>
            <typeparam name="socketSenderType">TCP 服务套接字数据发送类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.#ctor(AutoCSer.Net.TcpStreamServer.ServerSocket{`0,`1,`2,`3})">
            <summary>
            TCP 服务套接字数据发送
            </summary>
            <param name="socket">TCP 服务套接字</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.freeBuffer">
            <summary>
            释放接收数据缓冲区
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.freeOutput">
            <summary>
            释放输出信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.setSendData(System.Byte*)">
            <summary>
            设置发送数据
            </summary>
            <param name="start">数据起始位置</param>
            <returns>是否改变输出缓冲区</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.VirtualAddLog(System.Exception)">
            <summary>
            错误日志处理
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.AddLog(System.Exception)">
            <summary>
            错误日志处理
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.Push">
            <summary>
            发送数据
            </summary>
            <returns>是否成功加入输出队列</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.Push(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="value">返回值</param>
            <returns>是否成功加入输出队列</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.Push``1(AutoCSer.Net.TcpServer.OutputInfo,``0@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">返回值</param>
            <returns>是否成功加入输出队列</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.Push``1(AutoCSer.Net.TcpServer.OutputInfo,AutoCSer.Net.TcpServer.ReturnValue{``0}@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">返回值</param>
            <returns>是否成功加入输出队列</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.push(AutoCSer.Net.TcpStreamServer.ServerOutput.OutputLink)">
            <summary>
            添加输出信息
            </summary>
            <param name="output">当前输出信息</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.push(AutoCSer.Net.TcpStreamServer.ServerOutput.OutputLink,System.Boolean)">
            <summary>
            添加输出信息
            </summary>
            <param name="output">当前输出信息</param>
            <param name="isBuildOutputThread">尝试启动创建输出线程</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.GetRemoteExpressionNodeId(AutoCSer.SubArray{System.Byte}@,System.Boolean)">
            <summary>
            获取远程表达式服务端节点标识
            </summary>
            <param name="data"></param>
            <param name="isBuildOutputThread"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.GetRemoteExpression(AutoCSer.SubArray{System.Byte}@,System.Boolean)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="data"></param>
            <param name="isBuildOutputThread"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.TryBuildOutput">
            <summary>
            尝试启动创建输出线程
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.ServerSocketSender`4.TryBuildOutput(System.Boolean)">
            <summary>
            尝试启动创建输出线程
            </summary>
            <param name="isBuildOutputThread">尝试启动创建输出线程</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.ServerTaskType">
            <summary>
            服务端任务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerTaskType.Synchronous">
            <summary>
            非任务同步阻塞模式，直接在 Socket 接收数据的 IO 线程中处理以避免线程调度，适应于快速结束的非阻塞函数；需要知道的是这种模式下如果产生阻塞会造成 Socket 停止接收数据。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerTaskType.TcpQueue">
            <summary>
            TCP 任务队列，适用于无阻塞的快速任务处理。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.ServerTaskType.Queue">
            <summary>
            服务独占任务队列，适用于无阻塞的快速任务处理。
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.server">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.TcpServer">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.SetTcpServer(`1)">
            <summary>
            设置TCP服务端
            </summary>
            <param name="server">TCP服务端</param>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.lastVerifyTicks">
            <summary>
            最后一次验证时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.lastVerifyTickLock">
            <summary>
            最后一次验证时间访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStreamServer.TimeVerifyServer`4.verify(`3,System.UInt64,System.Byte[],System.Int64@)">
            <summary>
            时间验证函数
            </summary>
            <param name="sender"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStreamServer.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.UnionType.Value">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStreamServer.UnionType.ClientCommand">
            <summary>
            TCP 客户端命令
            </summary>
        </member>
    </members>
</doc>
