<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoCSer.TcpSimpleServer</name>
    </assembly>
    <members>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ClientBuffer">
            <summary>
            创建命令信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.Data">
            <summary>
            发送/接收数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.CopyBuffer">
            <summary>
            复制数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.CompressBuffer">
            <summary>
            压缩数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.SocketError">
            <summary>
            套接字错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.ReturnType">
            <summary>
            返回值类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientBuffer.IsError">
            <summary>
            套接字操作是否错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.SetSendDataCopyBuffer(System.Int32)">
            <summary>
            设置发送数据
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.CompressSendData(System.Int32,System.UInt64)">
            <summary>
            压缩发送数据
            </summary>
            <param name="dataLength"></param>
            <param name="sendMarkData"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.MarkSendData(System.Int32,System.UInt64)">
            <summary>
            压缩发送数据
            </summary>
            <param name="dataLength"></param>
            <param name="sendMarkData"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.Send(AutoCSer.Net.TcpSimpleServer.Client)">
            <summary>
            发送数据
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.SetReturnType(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            设置返回值类型
            </summary>
            <param name="returnType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.SetReceiveData(AutoCSer.SubBuffer.PoolBufferFull@,System.Int32)">
            <summary>
            设置接收数据
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.CopyBufferData(AutoCSer.SubBuffer.PoolBufferFull@,System.Int32,System.Int32)">
            <summary>
            复制缓冲区数据
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="copySize"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.DeCompressReceiveData(AutoCSer.SubBuffer.PoolBufferFull@,System.Int32,System.Int32)">
            <summary>
            接收数据解压缩
            </summary>
            <param name="buffer"></param>
            <param name="size"></param>
            <param name="dataSize"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.SetReceiveData(System.Int32)">
            <summary>
            设置接收数据
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientBuffer.DeCompressReceiveData(System.Int32,System.Int32)">
            <summary>
            接收数据解压缩
            </summary>
            <param name="size"></param>
            <param name="dataSize"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Client">
            <summary>
            TCP 开放服务客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Client`1">
            <summary>
            TCP 服务客户端
            </summary>
            <summary>
            TCP 服务客户端
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Client">
            <summary>
            TCP 服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.isCheck">
            <summary>
            是否需要心跳检测
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.serializeParameterIndex">
            <summary>
            序列化参数编号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.Buffer">
            <summary>
            接收数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.outputStream">
            <summary>
            输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.outputSerializer">
            <summary>
            输出数据二进制序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.outputJsonSerializer">
            <summary>
            输出数据 JSON 序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.receiveDeSerializer">
            <summary>
            回调数据二进制反序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.receiveJsonParser">
            <summary>
            回调数据 JSON 解析
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.SendMarkData">
            <summary>
            发送变换数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.ReceiveMarkData">
            <summary>
            接收变换数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.Socket">
            <summary>
            TCP 服务套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.maxInputSize">
            <summary>
            最大输入数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.CheckNext">
            <summary>
            下一个心跳检测
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.CheckPrevious">
            <summary>
            上一个心跳检测
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.CheckTimeoutSeconds">
            <summary>
            心跳检测超时秒数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client.CheckTimer">
            <summary>
            客户端心跳检测定时
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client.#ctor(System.String,System.Int32,System.String,System.Int32,System.Int32,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="host">监听主机名称</param>
            <param name="port">监听端口</param>
            <param name="serviceName">服务名称</param>
            <param name="sendBufferMaxSize">发送数据缓存区最大字节大小</param>
            <param name="minCompressSize">压缩启用最低字节数量</param>
            <param name="log">日志接口</param>
            <param name="maxInputSize">最大输入数据字节数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client.Check">
            <summary>
            心跳检测
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client.check">
            <summary>
            心跳检测
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client.FreeCheck">
            <summary>
            弹出节点
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client.FreeCheckReset">
            <summary>
            弹出节点
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Client.SendCount">
            <summary>
            套接字发送数据次数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Client.ReceiveCount">
            <summary>
            套接字接收数据次数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client`1.Attribute">
            <summary>
            TCP 服务调用配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client`1.remoteExpressionServerNodeIdChecker">
            <summary>
            远程表达式客户端检测服务端映射标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client`1.SocketLock">
            <summary>
            套接字访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.#ctor(`0,AutoCSer.Log.ILog,System.Int32)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="maxInputSize">最大输入数据字节数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.CallVerifyMethod">
            <summary>
            套接字验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.TryCreateSocket">
            <summary>
            创建套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.getSocket">
            <summary>
            获取 TCP 服务客户端套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.closeSocket">
            <summary>
            关闭套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.build``1(AutoCSer.Net.TcpServer.CommandInfoBase,``0@,AutoCSer.Net.TcpSimpleServer.ClientBuffer@)">
            <summary>
            创建命令输入数据
            </summary>
            <typeparam name="inputParameterType"></typeparam>
            <param name="commandInfo"></param>
            <param name="inputParameter"></param>
            <param name="clientBuffer"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.receive``1(AutoCSer.Net.TcpServer.CommandInfoBase,``0@,AutoCSer.Net.TcpSimpleServer.ClientBuffer@)">
            <summary>
            接收数据
            </summary>
            <typeparam name="outputParameterType"></typeparam>
            <param name="commandInfo"></param>
            <param name="outputParameter"></param>
            <param name="clientBuffer"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.deSerialize``1(AutoCSer.Net.TcpServer.CommandInfoBase,``0@,AutoCSer.Net.TcpSimpleServer.ClientBuffer@)">
            <summary>
            数据反序列化
            </summary>
            <typeparam name="outputParameterType"></typeparam>
            <param name="commandInfo"></param>
            <param name="outputParameter"></param>
            <param name="clientBuffer"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.Get``2(AutoCSer.Net.TcpServer.CommandInfoBase,``0@,``1@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="commandInfo">命令信息</param>
            <param name="inputParameter">输入参数</param>
            <param name="outputParameter">输出参数</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.Get``1(AutoCSer.Net.TcpServer.CommandInfoBase,``0@)">
            <summary>
            TCP调用并返回参数值
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <param name="commandInfo">命令信息</param>
            <param name="outputParameter">输出参数</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.Call``1(AutoCSer.Net.TcpServer.CommandInfoBase,``0@)">
            <summary>
            TCP调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
            <param name="commandInfo">命令信息</param>
            <param name="inputParameter">输入参数</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.Call(AutoCSer.Net.TcpServer.CommandInfoBase)">
            <summary>
            TCP调用
            </summary>
            <param name="commandInfo">命令信息</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpressionNodeId(AutoCSer.RemoteType[])">
            <summary>
            获取远程表达式服务端节点标识
            </summary>
            <param name="types">表达式服务端节点类型集合</param>
            <returns>表达式服务端节点标识集合</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node,AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <param name="clientNode">客户端远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpressionClientNode(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取客户端远程表达式节点
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>客户端远程表达式节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpressionClientNodeParameter``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取客户端远程表达式参数节点
            </summary>
            <typeparam name="returnType">返回值类型</typeparam>
            <param name="node">远程表达式参数节点</param>
            <returns>客户端远程表达式参数节点</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.getRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode@)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.CallRemoteExpression(AutoCSer.Net.RemoteExpression.Node)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpression``1(AutoCSer.Net.RemoteExpression.Node{``0})">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.GetRemoteExpression(AutoCSer.Net.RemoteExpression.ClientNode)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="node">远程表达式节点</param>
            <returns>返回值类型</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.check">
            <summary>
            心跳检测
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Client`1.RemoteExpressionServerNodeIdChecker">
            <summary>
            远程表达式客户端检测服务端映射标识
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Client`1.RemoteExpressionServerNodeIdChecker.Client">
            <summary>
            TCP 服务客户端套接字数据发送
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Client`1.RemoteExpressionServerNodeIdChecker.Get(AutoCSer.RemoteType[])">
            <summary>
            获取服务端映射标识集合
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Client.#ctor(AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,AutoCSer.Log.ILog)">
            <summary>
            TCP 开放服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Client`1">
            <summary>
            TCP 开放服务客户端
            </summary>
            <typeparam name="clientType">客户端代理类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Client`1.client">
            <summary>
            TCP 内部服务客户端代理对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Client`1.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Client`1.#ctor(`0,AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{`0,System.Boolean})">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="client">TCP 服务客户端对象</param>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Client`1.CallVerifyMethod">
            <summary>
            套接字验证
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.UnionType.Value">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.UnionType.ServerAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.UnionType.Server">
            <summary>
            TCP 内部服务端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.#ctor(System.Int64)">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
            <param name="taskTicks">线程切换超时时钟周期</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.Add(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket)">
            <summary>
            添加任务
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.run">
            <summary>
            TCP服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.Task">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.tasks">
            <summary>
            TCP 内部服务端套接字任务处理集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocketTask.check">
            <summary>
            线程切换检测
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket">
            <summary>
            TCP 内部服务端套接字
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerSocket`3">
            <summary>
            TCP 服务端套接字
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <typeparam name="serverType">TCP 服务类型</typeparam>
            <typeparam name="socketType">TCP 服务端套接字类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerSocket">
            <summary>
            TCP 服务端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.asyncCallback">
            <summary>
            套接字异步回调
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.asyncEventArgs">
            <summary>
            套接字异步事件对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.MarkData">
            <summary>
            变换数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.ReceiveDeSerializer">
            <summary>
            接收数据二进制反序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.ReceiveJsonParser">
            <summary>
            接收数据 JSON 解析
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.ReceiveBigBuffer">
            <summary>
            临时接收数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.Buffer">
            <summary>
            数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.bufferSize">
            <summary>
            接收数据缓冲区字节大小
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.receiveTimeout">
            <summary>
            接收数据超时
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.bufferStart">
            <summary>
            数据起始位置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.receiveCount">
            <summary>
            当前接收数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.receiveIndex">
            <summary>
            当前处理接收数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.compressionDataSize">
            <summary>
            当前数据压缩后的字节大小
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.dataSize">
            <summary>
            当前数据字节大小
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.command">
            <summary>
            当前命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.receiveBigBufferCount">
            <summary>
            当前接收临时数据字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.socketError">
            <summary>
            套接字错误
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.SocketType">
            <summary>
            TCP 服务端套接字回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.verifyMethodCount">
            <summary>
            验证函数调用次数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.IsVerifyMethod">
            <summary>
            是否通过函数验证
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.ClientObject">
            <summary>
            客户端信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.OutputStream">
            <summary>
            输出数据流
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.OutputJsonSerializer">
            <summary>
            输出数据 JSON 序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.OutputSerializer">
            <summary>
            输出数据二进制序列化
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.OutputBuffer">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.serializeParameterIndex">
            <summary>
            序列化参数编号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket.TimeVerifyTicks">
            <summary>
            时间验证时钟周期
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket.SetVerifyMethod">
            <summary>
            通过函数验证处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket.DeSerialize``1(AutoCSer.SubArray{System.Byte}@,``0@,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <typeparam name="valueType">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="value">目标对象</param>
            <param name="isSimpleSerialize"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket.FreeSerializer">
            <summary>
            释放数据序列化
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.ServerSocket.commandIndex">
            <summary>
            当前命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.TaskTicks">
            <summary>
            线程切换检测时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.NextTask">
            <summary>
            下一个任务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.#ctor(`1)">
            <summary>
            TCP 服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.Log(System.Exception)">
            <summary>
            错误日志处理
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerSocket`3.BuildOutput``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            创建输出数据
            </summary>
            <typeparam name="outputParameterType"></typeparam>
            <param name="outputInfo"></param>
            <param name="outputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.#ctor(AutoCSer.Net.TcpInternalSimpleServer.Server)">
            <summary>
            TCP 内部服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.RunTask">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.ErrorTask">
            <summary>
            TCP 内部服务端套接字任务错误处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.Start">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.SetVerifyMethod">
            <summary>
            通过函数验证处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.onReceive(System.IAsyncResult)">
            <summary>
            套接字操作完成后的回调委托
            </summary>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isReceiveVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.verifyCommandAsync">
            <summary>
            接收验证命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.checkVerifyCommandFixed">
            <summary>
            检查验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isReceiveVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.verifyDataAsync">
            <summary>
            获取验证数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.doVerifyCommand">
            <summary>
            执行函数验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isReceiveCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.commandAsync">
            <summary>
            获取命令
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.checkCommandData">
            <summary>
            检查命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.dataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.bigDataAsync">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isDoCommand">
            <summary>
            执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.isDoCommandBig">
            <summary>
            执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.doCommandMark(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理委托
            </summary>
            <param name="data"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.doCommand(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            命令处理委托
            </summary>
            <param name="buffer"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.getRemoteExpressionNodeId(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取远程表达式服务端节点标识
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.getRemoteExpression(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.SendAsync(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.Send(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.Send">
            <summary>
            发送数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.SendAsync``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,AutoCSer.Net.TcpServer.ReturnValue{``0}@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.SendOutput(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.Send``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.send``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@,System.Boolean@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <param name="isSend">是否发送成功</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.GetCallback">
            <summary>
            异步回调
            </summary>
            <returns>异步回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.GetCallback``2(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            异步回调
            </summary>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出参数</param>
            <returns>异步回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerSocket.GetCallback``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            验证函数异步回调
            </summary>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出参数</param>
            <returns>验证函数异步回调</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute">
            <summary>
            TCP 内部服务配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.ServerAttribute.GetReceiveBufferSize">
            <summary>
            服务器端接受数据（包括客户端发送数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.TcpRegister">
            <summary>
            注册当前服务的 TCP 注册服务名称。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.RegisterHost">
            <summary>
            客户端访问的主机名称或者 IP 地址，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.RegisterPort">
            <summary>
            客户端访问的监听端口，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.SendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数，默认为 128KB。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.ServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数，默认为 1MB。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.ReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令超时为 4 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsJsonSerialize">
            <summary>
            默认使用二进制序列化，适合参数数据类型稳定的服务，或者可以同步部署服务器端与客户端的内部服务。对于数据类型不稳定的互联网服务应该使用 JSON 序列化。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsAutoClient">
            <summary>
            默认为 true 表示在创建客户端对象的时候自动启动连接，否则需要第一次调用触发
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsRememberCommand">
            <summary>
            默认为 true 表示生成记忆数字编号标识与长字符串名称标识之间对应关系的代码，用于保持多次代码生成的命令序号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsSingleRegister">
            <summary>
            默认为 true 表示只允许注册一个 TCP 服务实例（单例服务，其它服务的注册将失败），但 false 并不代表支持负载均衡（仅仅是在客户端访问某个服务端失败时可以切换到其他服务端连接）。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.TcpRegisterName">
            <summary>
            注册当前服务的 TCP 注册服务名称。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.AutoCSer#Net#TcpRegister#IServerAttribute#ClientRegisterHost">
            <summary>
            客户端访问的主机名称或者 IP 地址，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.AutoCSer#Net#TcpRegister#IServerAttribute#ClientRegisterPort">
            <summary>
            客户端访问的监听端口，用于需要使用端口映射服务。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.GetSendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.GetServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.GetIsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.GetIsJsonSerialize">
            <summary>
            是否使用 JSON 序列化
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerBaseAttribute.IsAuto">
            <summary>
            是否自动创建客户端对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.IsServer">
            <summary>
            用于在配置文件中标识当前程序是否服务端，当在标识为服务端的环境中使用客户端调用时会输出警告日志，提示用户判断是否混淆了客户端与服务端。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.IsInternalClient">
            <summary>
            默认为 false 表示客户端 API 公共可见，设置为 true 表示仅程序集可见
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 服务注册名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute.GetIsInternalClient">
            <summary>
            客户端 API 是否仅程序集可见
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.OutputInfo">
            <summary>
            服务端输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.OutputInfo.OutputParameterIndex">
            <summary>
            输出参数编号
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.OutputInfo.IsSimpleSerializeOutputParamter">
            <summary>
            是否简单序列化输出参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.OutputInfo.RemoteExpressionNodeId">
            <summary>
            远程表达式服务端节点标识解析输出参数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.OutputInfo.RemoteExpression">
            <summary>
            远程表达式输出参数信息
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Server">
            <summary>
            TCP 内部服务端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Server`3">
            <summary>
            TCP 服务基类
            </summary>
            <typeparam name="attributeType"></typeparam>
            <typeparam name="serverType"></typeparam>
            <typeparam name="serverSocketType"></typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.#ctor(`0,AutoCSer.Log.ILog,System.Func{System.Net.Sockets.Socket,System.Boolean},System.Boolean)">
            <summary>
            TCP 服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">获取客户端请求线程调用类型</param>
            <param name="log">日志接口</param>
            <param name="isCallQueue">是否提供独占的 TCP 服务器端同步调用队列</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.Start">
            <summary>
            启动服务
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.startGetSocket">
            <summary>
            获取客户端套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.DoCommand(System.Int32,`2,AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理
            </summary>
            <param name="index">命令序号</param>
            <param name="socket">TCP 内部服务套接字数据发送</param>
            <param name="data">命令数据</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Server`3.DoCommand(System.Int32,`2,AutoCSer.SubBuffer.PoolBufferFull@,System.Int32)">
            <summary>
            命令处理委托
            </summary>
            <param name="index"></param>
            <param name="socket"></param>
            <param name="buffer"></param>
            <param name="dataSize"></param>
            <returns>是否成功</returns>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Server`3.isCustomData">
            <summary>
            是否支持自定义数据包
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Server`3.isKeepCallback">
            <summary>
            是否支持保持回调
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Server`3.isMergeCommand">
            <summary>
            是否支持合并命令处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Server.tcpRegisterClient">
            <summary>
            TCP 内部注册服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.AutoCSer#Net#TcpRegister#IServer#CreateServerInfo">
            <summary>
            创建 TCP 服务注册信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.#ctor(AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog,System.Boolean)">
            <summary>
            TCP 内部服务端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">同步验证接口</param>
            <param name="log">日志接口</param>
            <param name="isCallQueue">是否提供独占的 TCP 服务器端同步调用队列</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.StopListen">
            <summary>
            停止服务监听
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.Start">
            <summary>
            启动服务
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.getSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Server.getSocketVerify">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.Server.AutoCSer#Net#TcpRegister#IServer#TcpRegisterInfo">
            <summary>
            TCP 服务注册信息
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.Method`3">
            <summary>
            TCP 函数信息
            </summary>
            <summary>
            TCP 函数信息
            </summary>
            <typeparam name="attributeType">TCP 服务配置类型</typeparam>
            <typeparam name="methodAttributeType">TCP 调用函数配置</typeparam>
            <typeparam name="serverSocketType">TCP 服务套接字</typeparam>
            <summary>
            TCP 函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.#ctor(System.Type,System.Reflection.MethodInfo,`0,`1,System.Boolean)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="type">接口类型</param>
            <param name="method">方法信息</param>
            <param name="attribute">TCP 服务器端配置</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
            <param name="isClient">是否客户端</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.#ctor(System.Type,System.Reflection.PropertyInfo,`0,`1,System.Boolean)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="type">接口类型</param>
            <param name="property">属性信息</param>
            <param name="attribute">TCP 服务器端配置</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
            <param name="isSet">是否设置</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.#ctor(AutoCSer.Net.TcpSimpleServer.Emit.Method{`0,`1,`2},`1)">
            <summary>
            TCP 函数信息
            </summary>
            <param name="propertyGetMethod">属性获取 TCP 函数信息</param>
            <param name="serverMethodAttribute">TCP 调用函数配置</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.CheckRef(System.String@)">
            <summary>
            引用参数检测
            </summary>
            <param name="errorString"></param>
            <returns></returns>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.IsVerifyMethodAsynchronous">
            <summary>
            验证方法是否支持异步
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ClientBuilder">
            <summary>
            创建 TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ClientBuilder.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ClientBuilder.Commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ClientBuilder.Build(System.Type,AutoCSer.Net.TcpServer.ServerBaseAttribute,AutoCSer.Net.TcpSimpleServer.Emit.Method{`0,`1,`2}[],System.Reflection.MethodInfo)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
            <param name="methods"></param>
            <param name="getCommandMethod"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ServerBuilder">
            <summary>
            创建 TCP 服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ServerBuilder.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ServerBuilder.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.Method`3.ServerBuilder.Build(System.Type,AutoCSer.Net.TcpSimpleServer.ServerAttribute,System.Type,System.Type,System.Type[],AutoCSer.Net.TcpSimpleServer.Emit.Method{`0,`1,`2}[])">
            <summary>
            创建 TCP 服务端
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
            <param name="serverInterfaceType"></param>
            <param name="serverCallType"></param>
            <param name="constructorParameterTypes"></param>
            <param name="methods"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.MethodClient">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.MethodClientType">
            <summary>
            TCP 客户端基类类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.ClientTypeName">
            <summary>
            TCP 客户端类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.MethodClientGetTcpClientMethod">
            <summary>
            TCP 客户端基类获取 TCP 客户端属性函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.ClientCallInputMethod">
            <summary>
            TCP 服务客户端调用函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.ClientCallMethod">
            <summary>
            TCP 服务客户端调用函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.ClientGetInputMethod">
            <summary>
            TCP 服务客户端调用函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.ClientGetMethod">
            <summary>
            TCP 服务客户端调用函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.#ctor(System.Type,System.Type)">
            <summary>
            TCP 客户端元数据
            </summary>
            <param name="clientType">TCP 客户端类型</param>
            <param name="methodClientType">TCP 客户端基类类型</param>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ClientMetadata.MethodClientIsDisposedField">
            <summary>
            TCP 客户端基类 是否已经释放资源字段信息
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Server">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Server.socketHandle">
            <summary>
            套接字等待事件
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Server.socketHead">
            <summary>
            套接字链表头部
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Server.#ctor(AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog,System.Boolean)">
            <summary>
            TCP 服务端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="verify">同步验证接口</param>
            <param name="log">日志接口</param>
            <param name="isCallQueue">是否提供独占的 TCP 服务器端同步调用队列</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Server.GetSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Server.getSocket">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Server.getSocketVerify">
            <summary>
            获取客户端请求
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Server.OnSocket">
            <summary>
            套接字处理
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.SimpleParameterType">
            <summary>
            TCP 参数类型
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.SimpleParameterType.IsInputParameter(System.Reflection.ParameterInfo)">
            <summary>
            判断是否有效输入参数
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute">
            <summary>
            TCP 静态服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型，为了防止调用者混淆了远程函数与本地函数在某些情况下产生误调用，默认只选择受保护的方法生成（包括 private / protected / internal）相关代码。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.IsServer">
            <summary>
            是否 TCP 服务配置。一个静态服务只能存在一个 class 配置 IsServer = true，并且必须指定 Service，用于这个服务名称绑定 TCP 服务配置。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.IsAbstract">
            <summary>
            是否支持抽象类
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.GetConfig(System.String,System.Type,System.Boolean)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <param name="isServer">是否服务端</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.GetConfig(System.String,System.Boolean)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="isServer">是否服务端</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.GetConfig(System.String)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="P:AutoCSer.Net.TcpStaticSimpleServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.UnionType">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.UnionType.Value">
            <summary>
            目标对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.UnionType.Server">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.UnionType.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback">
            <summary>
            TCP 服务器端异步调用
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerCallback`2">
            <summary>
            TCP 服务器端异步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`2.socket">
            <summary>
            异步套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`2.onReturnHandle">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerCallback`2.Set(`1)">
            <summary>
            异步回调
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback.#ctor">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback.onReturn(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`2">
            <summary>
            异步回调
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <typeparam name="returnType">返回值类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerCallback`4">
            <summary>
            异步回调
            </summary>
            <typeparam name="callbackType">异步回调类型</typeparam>
            <typeparam name="serverSocketType">TCP 服务套接字数据发送类型</typeparam>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <typeparam name="returnType">返回值类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`4.socket">
            <summary>
            异步套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`4.outputInfo">
            <summary>
            服务端输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`4.outputParameter">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerCallback`4.onReturnHandle">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerCallback`4.Set(`1,AutoCSer.Net.TcpSimpleServer.OutputInfo,`2@)">
            <summary>
            异步回调
            </summary>
            <param name="socket"></param>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`2.#ctor">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`2.onReturn(AutoCSer.Net.TcpServer.ReturnValue{`1})">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`2.setReturn">
            <summary>
            设置返回值委托
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`1">
            <summary>
            验证函数异步回调
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`1.#ctor">
            <summary>
            验证函数异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`1.onReturn(AutoCSer.Net.TcpServer.ReturnValue{System.Boolean})">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerCallback`1.setReturn">
            <summary>
            设置返回值委托
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.OnTime">
            <summary>
            定时触发 WEB 扩展
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.OnTime.Set(AutoCSer.Date.NowTime.OnTimeFlag)">
            <summary>
            设置定时触发类型
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.OnTime.onTime(AutoCSer.Date.NowTime.OnTimeFlag)">
            <summary>
            触发定时任务
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.TimeVerifyClient">
            <summary>
            时间验证服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.TimeVerifyClient.Verify(AutoCSer.Net.TcpInternalSimpleServer.TimeVerifyClient.Verifier,AutoCSer.Net.TcpInternalSimpleServer.Client)">
            <summary>
            时间验证客户端验证
            </summary>
            <param name="verify">时间验证服务客户端委托</param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.TimeVerifyClient.Verifier">
            <summary>
            时间验证服务客户端委托
            </summary>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall.set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall.Call``1(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall`1.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall`1.set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType,`0@)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType">任务类型</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall`1.Call``1(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType,`0@)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="taskType"></param>
            <param name="inputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.ServerCall`1.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ISetTcpServer`2">
            <summary>
            TCP命令服务接口
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ISetTcpServer`2.SetTcpServer(`0)">
            <summary>
            设置 TCP 命令服务端
            </summary>
            <param name="commandServer">TCP 命令服务端</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.TimeVerifyClient">
            <summary>
            时间验证服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.TimeVerifyClient.Verify(AutoCSer.Net.TcpOpenSimpleServer.TimeVerifyClient.Verifier,AutoCSer.Net.TcpOpenSimpleServer.Client)">
            <summary>
            时间验证客户端验证
            </summary>
            <param name="verify">时间验证服务客户端委托</param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.TimeVerifyClient.Verifier">
            <summary>
            时间验证服务客户端委托
            </summary>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerCall.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`1.Set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`1.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns>服务器端调用</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`1.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`2.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`2.Set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,AutoCSer.Net.TcpServer.ServerTaskType,`1@)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="taskType"></param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.clientType">
            <summary>
            TCP 客户端类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.GetCommand(System.Int32)">
            <summary>
            获取客户端命令信息
            </summary>
            <param name="index"></param>
            <returns>客户端命令信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.Client`1.Create(AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,System.Func{`0,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="log">日志接口</param>
            <returns>TCP 客户端</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.TimeVerify`1">
            <summary>
            时间验证
            </summary>
            <typeparam name="verifyType">验证类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.TimeVerify`1.lastVerifyTicks">
            <summary>
            最后一次验证时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.TimeVerify`1.lastVerifyTickLock">
            <summary>
            最后一次验证时间访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.TimeVerify`1.verify(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,System.UInt64,System.Byte[],System.Int64@)">
            <summary>
            时间验证函数
            </summary>
            <param name="socket"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.TimeVerifyServer">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.server">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.SetTcpServer(`1)">
            <summary>
            设置TCP服务端
            </summary>
            <param name="server">TCP服务端</param>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.lastVerifyTicks">
            <summary>
            最后一次验证时间
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.lastVerifyTickLock">
            <summary>
            最后一次验证时间访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.verify(`2,System.UInt64,System.Byte[],System.Int64@)">
            <summary>
            时间验证函数
            </summary>
            <param name="socket"></param>
            <param name="randomPrefix">随机前缀</param>
            <param name="md5Data">MD5 数据</param>
            <param name="ticks">验证时钟周期</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.TimeVerifyServer`3.TcpServer">
            <summary>
            TCP 服务端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.MethodAttribute.ServerTask">
            <summary>
            服务端任务类型，默认为 Synchronous
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.ServerTaskType">
            <summary>
            服务端任务类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.ClientTaskType">
            <summary>
            客户端异步任务类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.GetIsClientSynchronous">
            <summary>
            是否生成同步调用代理函数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.GetIsClientAsynchronous">
            <summary>
            是否生成异步调用代理函数。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.GetIsKeepCallback">
            <summary>
            保持异步回调
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpSimpleServer.MethodAttribute.GetIsClientSendOnly">
            <summary>
            客户端是否仅发送数据，无需服务端应答
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.MethodAttribute.ServerName">
            <summary>
            服务名称。如果不指定 Service，则默认绑定到该 class 申明配置的 Service；一个 class 中的不同函数可以绑定到不同服务名称。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpStaticSimpleServer.MethodAttribute.GetServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.TimeVerifyServer">
            <summary>
            时间验证服务
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client.Metadata">
            <summary>
            TCP 客户端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.clientType">
            <summary>
            TCP 客户端类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.commands">
            <summary>
            客户端命令信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.GetCommand(System.Int32)">
            <summary>
            获取客户端命令信息
            </summary>
            <param name="index"></param>
            <returns>客户端命令信息</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.Client`1.Create(AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,System.Func{`0,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 客户端
            </summary>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verifyMethod">TCP 验证方法</param>
            <param name="log">日志接口</param>
            <returns>TCP 客户端</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback">
            <summary>
            TCP 服务器端异步调用
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback.#ctor">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback.onReturn(AutoCSer.Net.TcpServer.ReturnValue)">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`2">
            <summary>
            异步回调
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
            <typeparam name="returnType">返回值类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`2.#ctor">
            <summary>
            异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`2.onReturn(AutoCSer.Net.TcpServer.ReturnValue{`1})">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`2.setReturn">
            <summary>
            设置返回值委托
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`1">
            <summary>
            验证函数异步回调
            </summary>
            <typeparam name="outputParameterType">输出参数类型</typeparam>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`1.#ctor">
            <summary>
            验证函数异步回调
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`1.onReturn(AutoCSer.Net.TcpServer.ReturnValue{System.Boolean})">
            <summary>
            异步回调
            </summary>
            <param name="returnValue">返回值</param>
            <returns>是否成功加入回调队列</returns>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerCallback`1.setReturn">
            <summary>
            设置返回值委托
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerCall.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`2.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`2.Set(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,`1,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`2.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns>服务器端调用</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`3">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`3.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`3.Set(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,`1,AutoCSer.Net.TcpServer.ServerTaskType,`2@)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType">任务类型</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerCall`3.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute">
            <summary>
            TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.MemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.SendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数，默认为 8KB。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.ServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.MaxInputSize">
            <summary>
            最大输入数据字节数，默认为 16 KB，小于等于 0 表示不限
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.ReceiveVerifyCommandSeconds">
            <summary>
            客户端接收命令超时为 9 秒，超时客户端将被当作攻击者被抛弃。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.IsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，默认为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.IsJsonSerialize">
            <summary>
            默认使用 JSON 序列化，适合数据类型不稳定的互联网服务。对于参数数据类型稳定的服务，或者可以同步部署服务器端与客户端的内部服务，可以考虑使用二进制序列化以提升性能（对于简单测试可能提升 100+% 性能）。
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.IsAutoClient">
            <summary>
            默认为 false 需要第一次调用触发，否则在创建客户端对象的时候自动启动连接
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetConfig(System.String,System.Type)">
            <summary>
            获取配置信息
            </summary>
            <param name="serviceName">TCP 调用服务名称</param>
            <param name="type">TCP 服务器类型</param>
            <returns>TCP 调用服务器端配置信息</returns>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetMemberFilters">
            <summary>
            成员选择类型
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetSendBufferSize">
            <summary>
            服务器端发送数据（包括客户端接受数据）缓冲区初始化字节数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetServerSendBufferMaxSize">
            <summary>
            服务器端发送数据缓冲区最大字节数
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetIsSegmentation">
            <summary>
            当需要将客户端提供给第三方使用的时候，可能不希望 dll 中同时包含服务端，设置为 true 会将客户端代码单独剥离出来生成一个代码文件 {项目名称}.tcpServer.服务名称.client.cs，当然你需要将服务中所有参数与返回值及其依赖的数据类型剥离出来。
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute.GetIsJsonSerialize">
            <summary>
            是否使用 JSON 序列化
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.MethodClient`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="clientType">客户端类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.MethodClient`1._isDisposed_">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.MethodClient`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpOpenSimpleServer.MethodClient`1._TcpClient_">
            <summary>
            TCP 开放服务客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1">
            <summary>
            TCP 服务
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.methods">
            <summary>
            TCP 函数集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.serverType">
            <summary>
            TCP 服务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.serverConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.Server`1.Create(`0,AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 服务端对象
            </summary>
            <param name="value">接口对象</param>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="log">日志接口</param>
            <returns>TCP 服务</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer">
            <summary>
            客户端心跳检测定时
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.Head">
            <summary>
            链表首节点
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.End">
            <summary>
            链表尾部
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.queueLock">
            <summary>
            链表访问锁
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.#ctor(System.Int32)">
            <summary>
            客户端心跳检测定时
            </summary>
            <param name="seconds">超时秒数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.Push(AutoCSer.Net.TcpSimpleServer.Client)">
            <summary>
            添加心跳检测
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.Free(AutoCSer.Net.TcpSimpleServer.Client)">
            <summary>
            释放心跳检测
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.pop(System.Int64)">
            <summary>
            弹出节点
            </summary>
            <param name="currentSecond"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.Reset(AutoCSer.Net.TcpSimpleServer.Client)">
            <summary>
            重置心跳检测
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.OnTimer">
            <summary>
            定时器触发
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ClientCheckTimer.Get(System.Int32)">
            <summary>
            获取客户端心跳检测定时
            </summary>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerBuffer">
            <summary>
            创建输出信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerBuffer.Data">
            <summary>
            发送/接收数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerBuffer.CopyBuffer">
            <summary>
            复制数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerBuffer.CompressBuffer">
            <summary>
            压缩数据缓冲区
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerBuffer.SocketError">
            <summary>
            套接字错误
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.Free">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.SetSendDataCopyBuffer(System.Int32)">
            <summary>
            设置发送数据
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.CompressSendData(System.Int32,System.UInt64)">
            <summary>
            压缩发送数据
            </summary>
            <param name="dataLength"></param>
            <param name="sendMarkData"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.MarkSendData(System.Int32,System.UInt64)">
            <summary>
            压缩发送数据
            </summary>
            <param name="dataLength"></param>
            <param name="sendMarkData"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.Send(System.Net.Sockets.Socket)">
            <summary>
            发送数据
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.ServerBuffer.OnSend(System.Int32)">
            <summary>
            发送数据后设置数据位置
            </summary>
            <param name="count"></param>
            <returns>未完成数据长度</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.MethodClient`1">
            <summary>
            TCP 客户端
            </summary>
            <typeparam name="clientType">客户端类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.MethodClient`1._isDisposed_">
            <summary>
            是否已经释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.MethodClient`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.MethodClient`1._TcpClient_">
            <summary>
            TCP 内部服务客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server">
            <summary>
            TCP 服务
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server.Metadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1">
            <summary>
            TCP 服务
            </summary>
            <typeparam name="interfaceType">接口类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.defaultServerAttribute">
            <summary>
            默认 TCP 服务配置
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.errorString">
            <summary>
            错误字符串提示信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.methods">
            <summary>
            TCP 函数集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.serverType">
            <summary>
            TCP 服务类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.serverConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.Outputs">
            <summary>
            服务端输出信息集合
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.Server`1.Create(`0,AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,System.Func{System.Net.Sockets.Socket,System.Boolean},AutoCSer.Log.ILog)">
            <summary>
            创建 TCP 服务端对象
            </summary>
            <param name="value">接口对象</param>
            <param name="attribute">TCP 调用服务器端配置信息</param>
            <param name="verify">套接字验证委托</param>
            <param name="log">日志接口</param>
            <returns>TCP 服务</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.MethodGetter">
            <summary>
            获取 TCP 服务函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Emit.MethodGetter.get(System.Type,System.Reflection.MethodInfo,AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,AutoCSer.Net.TcpSimpleServer.MethodAttribute)">
            <summary>
            获取 TCP 服务函数信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="serverAttribute"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`2">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`2.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`2.Set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,`1,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`2.Pop">
            <summary>
            获取服务器端调用
            </summary>
            <returns>服务器端调用</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`2.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`3">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="callType">调用类型</typeparam>
            <typeparam name="serverType">服务器目标对象类型</typeparam>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`3.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`3.Set(AutoCSer.Net.TcpInternalSimpleServer.ServerSocket,`1,AutoCSer.Net.TcpServer.ServerTaskType,`2@)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType">任务类型</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.ServerCall`3.push(`0)">
            <summary>
            服务器端调用入池
            </summary>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket">
            <summary>
            TCP 服务端套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.maxInputSize">
            <summary>
            最大输入数据长度
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.sendSizeLessCount">
            <summary>
            发送数据量过低次数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isVerifyMethod">
            <summary>
            是否通过函数验证
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.#ctor(AutoCSer.Net.TcpOpenSimpleServer.Server,System.Net.Sockets.Socket@)">
            <summary>
            TCP 内部服务端套接字
            </summary>
            <param name="server">TCP调用服务端</param>
            <param name="socket">客户端信息</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.RunTask">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.ErrorTask">
            <summary>
            TCP 服务端套接字任务错误处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.Close">
            <summary>
            释放接收数据缓冲区与异步事件对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.Start">
            <summary>
            TCP 内部服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.runTask">
            <summary>
            TCP 服务端套接字任务处理
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.onSocket(System.IAsyncResult)">
            <summary>
            数据接收完成后的回调委托
            </summary>
            <param name="async">异步回调参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isReceiveVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isVerifyCommand">
            <summary>
            接收验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.checkVerifyCommandFixed">
            <summary>
            检查验证命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isReceiveVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.verifyDataAsync">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isVerifyData">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.doVerifyCommand">
            <summary>
            执行函数验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isReceiveCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isCommand">
            <summary>
            获取命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.checkCommandData">
            <summary>
            检查命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.dataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.bigDataAsync">
            <summary>
            获取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isDoCommand">
            <summary>
            执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.isDoCommandBig">
            <summary>
            执行命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.doCommandMark(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            命令处理委托
            </summary>
            <param name="data"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.doCommand(AutoCSer.SubBuffer.PoolBufferFull@)">
            <summary>
            命令处理委托
            </summary>
            <param name="buffer"></param>
            <returns>是否成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.getRemoteExpressionNodeId(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取远程表达式服务端节点标识
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.getRemoteExpression(AutoCSer.SubArray{System.Byte}@)">
            <summary>
            获取远程表达式数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.SendAsync(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.Send(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.Send">
            <summary>
            发送数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.sendIntAsync">
            <summary>
            发送数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.SendAsync``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,AutoCSer.Net.TcpServer.ReturnValue{``0}@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.sendInt2Async">
            <summary>
            发送数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.SendOutput(AutoCSer.Net.TcpServer.ReturnType)">
            <summary>
            发送数据
            </summary>
            <param name="returnType">返回值类型</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.send(AutoCSer.Net.TcpServer.ReturnType,System.Boolean@)">
            <summary>
            发送数据
            </summary>
            <param name="returnType"></param>
            <param name="isSend"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.Send``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.send``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@,System.Boolean@)">
            <summary>
            发送数据
            </summary>
            <typeparam name="outputParameterType">输出数据类型</typeparam>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出数据</param>
            <param name="isSend"></param>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.sendVerifyAsync">
            <summary>
            发送验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.sendAsync">
            <summary>
            发送数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.GetCallback">
            <summary>
            异步回调
            </summary>
            <returns>异步回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.GetCallback``2(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            异步回调
            </summary>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出参数</param>
            <returns>异步回调</returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.ServerSocket.GetCallback``1(AutoCSer.Net.TcpSimpleServer.OutputInfo,``0@)">
            <summary>
            验证函数异步回调
            </summary>
            <param name="outputInfo">服务端输出信息</param>
            <param name="outputParameter">输出参数</param>
            <returns>验证函数异步回调</returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.MethodAttribute">
            <summary>
            TCP 调用函数配置
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall">
            <summary>
            TCP 服务器端同步调用
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall.serverValue">
            <summary>
            服务器目标对象
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall.set(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall.Call``1(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="taskType"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall`1">
            <summary>
            TCP 服务器端同步调用
            </summary>
            <typeparam name="inputParameterType">输入参数类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall`1.inputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall`1.set(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType,`0@)">
            <summary>
            设置参数
            </summary>
            <param name="socket">套接字</param>
            <param name="serverValue">服务器目标对象</param>
            <param name="taskType">任务类型</param>
            <param name="inputParameter">输入参数</param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall`1.Call``1(AutoCSer.Net.TcpOpenSimpleServer.ServerSocket,System.Object,AutoCSer.Net.TcpServer.ServerTaskType,`0@)">
            <summary>
            获取服务器端调用
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="socket"></param>
            <param name="serverValue"></param>
            <param name="taskType"></param>
            <param name="inputParameter"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.ServerCall`1.push``1(``0)">
            <summary>
            服务器端调用入池
            </summary>
            <typeparam name="callType">服务器端调用类型</typeparam>
            <param name="call">服务器端调用</param>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Emit.MethodClient">
            <summary>
            TCP 客户端
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Client">
            <summary>
            TCP 内部服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Client.tcpRegisterClient">
            <summary>
            TCP 内部注册服务客户端
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client.#ctor(AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,AutoCSer.Log.ILog)">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client.AutoCSer#Net#TcpRegister#IClient#OnServerChange(AutoCSer.Net.TcpRegister.ServerSet)">
            <summary>
            服务更新
            </summary>
            <param name="serverSet"></param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client.createSocket">
            <summary>
            创建套接字
            </summary>
        </member>
        <member name="P:AutoCSer.Net.TcpInternalSimpleServer.Client.AutoCSer#Net#TcpRegister#IClient#ServerName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpInternalSimpleServer.Client`1">
            <summary>
            TCP 内部服务客户端
            </summary>
            <typeparam name="clientType">客户端代理类型</typeparam>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Client`1.client">
            <summary>
            TCP 内部服务客户端代理对象
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpInternalSimpleServer.Client`1.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client`1.#ctor(`0,AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{`0,System.Boolean})">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="client">TCP 服务客户端对象</param>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpInternalSimpleServer.Client`1.CallVerifyMethod">
            <summary>
            套接字验证
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.SocketLink">
            <summary>
            套接字链表
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpOpenSimpleServer.SocketLink.Socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.SocketLink.DisposeSocket">
            <summary>
            释放套接字
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.SocketLink.Cancel">
            <summary>
            释放套接字
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.SocketLink.Start(AutoCSer.Net.TcpOpenSimpleServer.Server,AutoCSer.Net.TcpOpenSimpleServer.ServerSocket@)">
            <summary>
            创建 TCP 服务端套接字
            </summary>
            <param name="server"></param>
            <param name="serverSocket"></param>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpStaticSimpleServer.Client">
            <summary>
            TCP 静态服务客户端
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpStaticSimpleServer.Client.verifyMethod">
            <summary>
            验证委托
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.Client.#ctor(AutoCSer.Net.TcpInternalSimpleServer.ServerAttribute,AutoCSer.Log.ILog,System.Func{System.Boolean})">
            <summary>
            TCP 内部服务客户端
            </summary>
            <param name="attribute">TCP服务调用配置</param>
            <param name="log">日志接口</param>
            <param name="verifyMethod">验证委托</param>
        </member>
        <member name="M:AutoCSer.Net.TcpStaticSimpleServer.Client.CallVerifyMethod">
            <summary>
            套接字验证
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.ServerSocketType">
            <summary>
            TCP 服务端套接字回调类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.VerifyCommand">
            <summary>
            获取验证命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.VerifyData">
            <summary>
            获取验证数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.Command">
            <summary>
            获取命令
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.Data">
            <summary>
            获取数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.BigData">
            <summary>
            获取临时数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.Send">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.SendInt">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.SendInt2">
            <summary>
            发送数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.ServerSocketType.SendVerify">
            <summary>
            发送验证数据
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata">
            <summary>
            TCP 服务端元数据
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerType">
            <summary>
            服务端类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.SocketType">
            <summary>
            TCP 服务套接字类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallType">
            <summary>
            TCP 服务器端同步调用类型
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerTypeName">
            <summary>
            服务端类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallTypeName">
            <summary>
            TCP 服务器端同步调用类型名称
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerConstructorInfo">
            <summary>
            TCP 服务构造函数
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallSocketField">
            <summary>
            TCP 服务器端同步调用套接字对象字段信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallServerValueField">
            <summary>
            TCP 服务器端同步调用套接字服务器目标对象字段信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallPushMethod">
            <summary>
            TCP 服务器端同步调用入池函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerCallCallMethod">
            <summary>
            TCP 服务器端同步调用函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketLogMethod">
            <summary>
            TCP 服务器端套接字错误日志处理函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendAsyncMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendAsyncOutputMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendOutputReturnTypeMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendReturnTypeMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSendOutputMethod">
            <summary>
            TCP 服务器端套接字发送数据函数信息
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.MethodParameterTypes">
            <summary>
            服务端调用参数类型集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.DoCommandParameterTypes">
            <summary>
            命令处理参数类型集合
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.Identity">
            <summary>
            生成标识
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.#ctor(System.Type,System.Type,System.Type,System.Type)">
            <summary>
            TCP 服务元数据
            </summary>
            <param name="serverType">TCP 服务类型</param>
            <param name="serverAttributeType">TCP 服务配置类型</param>
            <param name="socketType">TCP 服务套接字类型</param>
            <param name="serverCallType">TCP 服务器端同步调用类型</param>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketDeSerializeMethod">
            <summary>
            TCP 服务器端同步调用套接字对象通过函数验证处理
            </summary>
        </member>
        <member name="F:AutoCSer.Net.TcpSimpleServer.Emit.ServerMetadata.ServerSocketSetVerifyMethodMethod">
            <summary>
            TCP 服务器端同步调用套接字对象通过函数验证处理
            </summary>
        </member>
        <member name="T:AutoCSer.Net.TcpOpenSimpleServer.Emit.MethodGetter">
            <summary>
            获取 TCP 服务函数信息
            </summary>
        </member>
        <member name="M:AutoCSer.Net.TcpOpenSimpleServer.Emit.MethodGetter.get(System.Type,System.Reflection.MethodInfo,AutoCSer.Net.TcpOpenSimpleServer.ServerAttribute,AutoCSer.Net.TcpOpenSimpleServer.MethodAttribute)">
            <summary>
            获取 TCP 服务函数信息
            </summary>
            <param name="type"></param>
            <param name="method"></param>
            <param name="serverAttribute"></param>
            <param name="methodAttribute"></param>
            <returns></returns>
        </member>
    </members>
</doc>
